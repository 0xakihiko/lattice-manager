{"version":3,"sources":["components/main.tsx","components/validateSig.tsx","util/storageSession.ts","sdk/sdkSession.ts","util/localStorage.ts","components/formatting/pageContent.tsx","components/NameEditor.tsx","components/connect.tsx","components/pair.tsx","components/ContractCard.tsx","components/SelectNetwork.tsx","components/ContractCardList.tsx","components/SearchCard.tsx","components/ethContracts.tsx","components/permissions.tsx","components/settings.tsx","util/sendChecks.ts","components/AddAddressesButton.tsx","components/kvFiles.tsx","components/landing.tsx","components/loading.tsx","components/error.tsx","components/btc-wallet/wallet.tsx","components/btc-wallet/send.tsx","components/btc-wallet/receive.tsx","App.tsx","index.tsx","util/helpers.ts"],"names":["Content","Layout","Footer","Sider","Main","props","keyringName","URLSearchParams","window","location","search","get","state","name","constants","DEFAULT_APP_NAME","menuItem","session","collapsed","error","msg","cb","loading","pendingMsg","waiting","onCancel","deviceID","password","lastUpdated","Date","windowWidth","innerWidth","walletIsExternal","openedByKeyring","hwCheck","handleMenuChange","bind","handleLogout","handleKeyringOpener","syncActiveWalletState","cancelConnect","connectSession","handlePair","fetchBtcData","setError","refreshWallets","handlePageTurn","retry","updateWidth","addEventListener","this","isMobile","setState","params","forceLogin","onload","prevKeyringLogin","localStorage","getKeyringItem","keyringTimeoutBoundary","getTime","KEYRING_LOGOUT_MS","lastLogin","connect","removeKeyringItem","getLogin","removeEventListener","updates","settings","getSettings","SDKSession","client","pair","unwait","isConnected","setKeyringItem","data","endpoint","BASE_SIGNING_URL","customEndpoint","opener","postMessage","JSON","stringify","close","enc","Buffer","from","toString","href","page","setPage","stateUpdate","key","err","disconnect","removeLogin","LOST_PAIRING_MSG","LOST_PAIRING_ERR","handleLostPairing","showLoading","wait","isPaired","setLogin","returnKeyringData","isRecursion","fetchBtcAddresses","newAddrCounts","console","regular","change","clearUtxos","opts","fetchBtcStateData","bypassRefresh","activeWallet","getActiveWallet","isExternal","external","shouldRefresh","slice","hideWallet","BTC_PURPOSE_NONE","getBtcPurpose","collapsedWidth","theme","mode","onSelect","Item","title","SubMenu","renderMenu","onClick","type","size","icon","style","backgroundColor","marginRight","className","target","rel","alt","src","height","extra","walletTag","ghost","push","renderHeaderText","retryCb","content","refreshData","pageTurnCb","hasActiveWallet","spin","renderMenuItem","submit","hide","submitCb","setKeyringName","errMsg","textAlign","ENV","color","margin","renderContent","minHeight","renderHeader","id","renderSidebar","renderErrorHeader","renderPage","renderFooter","React","Component","ReactCrypto","require","default","EC","ec","ValidateSig","signer","sig","curve","crypto","msgHash","createHash","update","digest","keyFromPublic","verify","decode","_certData","PREIMAGE_LEN","start","preimage","METADATA_LEN","pubkey","_sig","cert","getCert","_validate","LATTICE_CERT_SIGNER","validateCert","getPreimage","message","result","status","subTitle","validateSig","spanLength","spanOffset","span","offset","bordered","renderResult","StorageSession","device_id","pass","store","getRootStore","o","Array","isArray","e","newData","oldData","isObject","Object","keys","forEach","newKey","updateBranch","wallet_uid","k","setRootStore","stateUpdateHandler","storageSession","baseUrl","addresses","btcTxs","btcUtxos","lastFetchedBtcData","btcPrice","getBtcWalletData","saveBtcWalletData","lastUsed","_getLastUsedBtcAddrIdx","BTC","length","newPage","driedAddrs","hasBTCAddrs","hasBTCChangeAddrs","BTC_CHANGE","BTC_PURPOSE","allAddrs","rehydratedAddrs","walletData","BTC_WALLET_STORAGE_KEY","dryAddresses","uid","save","getWalletData","purposeSpecificData","rehydrateAddresses","pw","_triedLocal","tmpTimeout","SHORT_TIMEOUT","_genPrivKey","Client","privKey","timeout","warn","_tryConnect","log","ASYNC_SDK_TIMEOUT","prevWallet","resetStateData","defs","addAbiDefs","req","addPermissionV0","secret","sign","res","broadcastBtcTx","tx","txid","concat","confirmed","txs","t","balance","u","value","isChange","totalFetched","lastUsedIdx","currentAddrs","GAP_LIMIT","BTC_CHANGE_GAP_LIMIT","BTC_MAIN_GAP_LIMIT","targetIdx","maxToFetch","nToFetch","Math","min","BTC_ADDR_BLOCK_LEN","changeIdx","startPath","BTC_COIN","harden","n","skipCache","_getAddresses","utxos","addrs","fetchBtcPrice","fetchBtcTxs","_txs","fetchBtcUtxos","_utxos","floor","now","newTxs","filterUniqueObjects","_processBtcTxs","newUtxos","sort","a","b","getAddresses","setTimeout","coin","i","maxUsed","inputs","input","indexOf","addr","outputs","output","processedTxs","parse","recipient","incoming","fee","sentFromAddrs","totalValue","sortedTxs","timestamp","ROOT_STORE","process","REACT_APP_ROOT_STORE","getItem","setItem","removeItem","getRootStoreItem","setRootStoreItem","getKeyring","omit","getLoginId","setLoginId","removeLoginId","getLoginPassword","setLoginPassword","removeLoginPassword","removeRootStore","removeRootStoreItem","setSettings","setKeyring","renameKeyringItem","oldKey","item","PageContent","justify","NameEditor","setName","useState","isEditing","setIsEditing","isHovered","setIsHovered","Form","useForm","form","layout","onFinish","justifyContent","initialValue","rules","required","data-testid","resetFields","htmlType","EditOutlined","fontSize","onMouseEnter","onMouseLeave","Connect","isLoading","modal","showSettings","handleCancel","handleSubmit","renderMsg","showModal","focus","document","getElementById","getFieldDecorator","placeholder","ref","width","Password","onPressEnter","renderConnectButton","footer","visible","onOk","hideModal","inModal","renderSetupInfo","closable","spanWidth","tooLong","renderModal","LinkOutlined","DesktopOutlined","renderForm","Pair","code","toUpperCase","clientWidth","w","getBoxWidth","getBoxFontHeight","onChange","handleUpdate","ContractCard","pack","contract","setContract","isModalVisible","setIsModalVisible","isAdded","setIsAdded","isAdding","setIsAdding","url","CONTRACT_NETWORKS","network","loadContractData","useCallback","fetch","ABI_PACK_URL","fname","then","response","json","resp","useEffect","AddDefsButton","CheckCircleOutlined","disabled","PlusCircleOutlined","flex","maxWidth","actions","website","bodyStyle","desc","dataSource","Column","dataIndex","render","address","Option","Select","SelectNetwork","setNetwork","minWidth","showSearch","defaultValue","DEFAULT_CONTRACT_NETWORK","optionFilterProp","filterOption","option","children","toLowerCase","entries","map","label","pageSize","CONTRACT_PAGE_SIZE","ContractCardList","packs","setPacks","filteredPacks","setFilteredPacks","paginatedPacks","setPaginatedPacks","filterPacksByNetwork","filter","loadPackIndex","pageZeroIndexed","chunkedList","chunk","direction","Group","compact","fuzzyFilteredPacks","fuzzysort","go","x","obj","fuzzyFilterPacksByName","marginLeft","current","defaultCurrent","defaultPageSize","total","display","flexWrap","gap","defaultNetwork","SearchCard","setLoading","installing","setInstalling","success","setSuccess","setDefs","resetData","fetchContractData","test","getNetwork","apiRoute","parseAbi","catch","throttledFetch","useMemo","throttle","SuccessAlert","ErrorAlert","NetworkLinkList","networks","last","pop","NetworkLink","Search","allowClear","enterButton","onSearch","val","marginTop","DownloadOutlined","defaultState","customDefs","customDefsStr","TAB_KEYS","PACK","SINGLE_ADDR","CUSTOM","EthContracts","tab","PATH","selectedPackKey","addDefs","onSmartContractAddress","renderSuccessAlert","renderPackCard","renderCustomCard","renderSearchCard","GET_ABI_URL","TMP_REMOVE_ZERO_LEN_PARAMS","description","onClose","buttonTxt","activeKey","onTabChange","TabPane","newDefs","def","shouldAdd","param","TextArea","autoSize","minRows","maxRows","parsed","f","renderTabs","renderBanner","CONTRACTS_HELP_LINK","QuestionCircleOutlined","renderCard","BN","assets","ETH","decimals","Settings","keyring","getBtcPurposeName","reload","evt","devLattice","checked","updateCustomEndpoint","btcPurpose","parseInt","purpose","BTC_PURPOSE_NONE_STR","BTC_PURPOSE_LEGACY","BTC_PURPOSE_LEGACY_STR","BTC_PURPOSE_WRAPPED_SEGWIT","BTC_PURPOSE_WRAPPED_SEGWIT_STR","BTC_PURPOSE_SEGWIT","BTC_PURPOSE_SEGWIT_STR","handleChangeBitcoinVersionSetting","resetState","WarningOutlined","updateUseDevLattice","cols","text","record","removeKeyring","Panel","header","columns","renderKeyringsSetting","renderCustomEndpointSetting","renderBitcoinVersionSetting","renderDevLatticeSetting","validateBtcAddr","allChecks","full","fullCheck","checkEthRecipient","checkNumericValue","recipientCheck","isPrefixed","correctLength","num","Number","isNaN","validAddressRegex","AddAddressesButton","records","addToRecordsInState","setIsLoading","PlusOutlined","maskClosable","validateFields","recordsToAdd","caseSensitive","_","chain","keyBy","mapValues","addKvRecords","onFinishFailed","onFieldsChange","autoComplete","preserve","List","fields","add","remove","restField","flexDirection","marginBottom","flexGrow","validateTrigger","pattern","validator","rule","some","r","Promise","reject","Error","resolve","addonBefore","MinusSquareFilled","block","KVFiles","totalRecords","retryFunc","recordToAdd","updateAddKey","updateAddVal","fetchRecords","isChecked","_record","selected","unionBy","recordsToRemove","differenceBy","retries","getKvRecords","ids","removeKvRecords","removeFromRecordsInState","action","tip","indicator","LoadingOutlined","isValidAddress","isValidLen","extraLink","renderLoading","shouldDisplaySend","addRecord","displayPage","SyncOutlined","tableLayout","pagination","position","showSizeChanger","defaultSortOrder","sorter","localeCompare","recordIsChecked","changeRecordChecked","getNumSelected","removeSelected","renderAddCard","renderDisplayCard","renderError","Landing","TAGS_HELP_LINK","TagsOutlined","AuditOutlined","maxHeight","Loading","keyPressListener","btnMsg","Wallet","offsetWidth","maxChars","getInnerWidth","align","ts","day","hour","diff","week","month","getDateDiffStr","BTC_TX_BASE_URL","hash","Meta","avatar","pow","subtitle","ensureTrimmedText","itemMeta","ArrowDownOutlined","ArrowUpOutlined","elapsed","timeType","elapsedSec","getBtcTxs","pending","ClockCircleOutlined","itemLayout","renderItem","renderListItem","btcBalance","getBtcBalance","SATS_TO_BTC","precision","getPage","CaretLeftOutlined","PAGE_SIZE","CaretRightOutlined","renderLastUpdatedTag","ReloadOutlined","renderList","renderPages","renderStartCard","Send","valueCheck","txHash","btcFeeRate","BTC_DEFAULT_FEE_RATE","ensResolvedAddress","handleENSResolution","renderSubmitButton","renderValueLabel","buildBtcRequest","updateBtcFeeRate","ceil","check","undefined","numberVal","isZeroPrefixed","isLessThanOne","checkValue","buildBtcTxReq","calculateMaxValue","notification","open","duration","updateValue","renderIcon","renderValueLabelTitle","updateRecipient","isValid","CloseCircleOutlined","getUrl","max","getBtcUtxos","txBytes","getBtcNumTxBytes","feeSat","toFixed","isValidReq","renderBalance","renderRecipientLabel","renderExtra","image","Empty","PRESENTED_IMAGE_SIMPLE","QRCode","Input","Receive","updateDisplayAddress","displayAddr","getBtcDisplayAddress","select","execCommand","copyAddress","CopyOutlined","cardW","renderAddrBox","App","ReactDOM","bs58check","bech32","REACT_APP_ENV","REACT_APP_BASE_SIGNING_URL","BTC_PROD_DATA_API","BTC_BROADCAST_ENDPOINT","HARDENED_OFFSET","REACT_APP_BTC_COIN","BTC_CHANGE_ADDR_BLOCK_LEN","REACT_APP_BTC_DEFAULT_FEE_RATE","REACT_APP_BTC_TX_BASE_URL","BTC_TESTNET","REACT_APP_BTC_TESTNET","KEYRING_DATA_PATH","REACT_APP_LATTICE_CERT_SIGNER","PERMISSIONS_HELP_LINK","BTC_SEGWIT_NATIVE_V0_PREFIX","BTC_WRAPPED_SEGWIT_VERSION","RATE_LIMIT","ethereum","polygon","binance","avalanche","devConstants","BTC_DEV_DATA_API","fetchJSON","_fetchBtcUtxos","ADDRS_PER_CALL","MAX_UTOXS_RET","addrsToCheck","unspent_outputs","confirmations","tx_hash_big_endian","vout","tx_output_n","_blockchainDotComScriptToAddr","script","_fetchBtcUtxosTestnet","addrsCopy","_fetchBtcTxs","isFirstCall","isSingleAddr","MAX_TXS_RET","formattedTxs","ftx","time","block_index","prev_out","out","_fetchBtcTxsTestnet","lastSeenId","confirmedCount","block_time","vin","prevout","scriptpubkey_address","last_trade_price","rawTx","method","body","_calcBtcTxNumInputs","feeRate","inputIdx","currentValue","numInputs","numBytes","_scriptStr","bech32Prefix","pubkeyhash","words","toWords","unshift","encode","version","localSettings","inputSize","outputSize","inputWitnessSize","vFactor","btcValue","changeAddrs","isFullSpend","satValue","round","bytesUsed","BASE_SIGNER_PATH","prevOuts","utxo","signerPath","prevOut","index","changePath","currency","toHexStr","bn","s","base","objs","filtered","reverse","isDup","fobj","matchedKeys"],"mappings":"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","file":"static/js/main.a9ddd778.chunk.js","sourcesContent":["import React from 'react';\nimport 'antd/dist/antd.dark.css'\nimport './styles.css'\nimport { Button, Layout, Menu, PageHeader, Tag, Tooltip } from 'antd';\nimport { \n  HomeOutlined, AuditOutlined, MenuOutlined, TagsOutlined, \n  WalletOutlined, ArrowUpOutlined, ArrowDownOutlined, \n  ReloadOutlined, CreditCardOutlined, CheckOutlined, SettingOutlined \n} from '@ant-design/icons';\nimport { default as SDKSession } from '../sdk/sdkSession';\nimport { \n  Connect, Error, Landing, Loading, PageContent, Pair, Send, \n  Receive, Wallet, EthContracts, Settings, ValidateSig, KvFiles \n} from './index'\nimport { constants, getBtcPurpose } from '../util/helpers'\nimport localStorage from '../util/localStorage';\nconst { Content, Footer, Sider } = Layout;\nconst LOGIN_PARAM = 'loginCache';\nconst DEFAULT_MENU_ITEM = 'menu-landing';\n\ntype MainState = {\n  name: string,\n  menuItem: string,\n  session: any,\n  collapsed: boolean,\n  error: { msg: string, cb: Function },\n  loading: boolean,\n  pendingMsg: string,\n  waiting: boolean, \n  onCancel: Function,\n  deviceID: string,\n  password: string,\n  lastUpdated: Date,\n  windowWidth: number,\n  walletIsExternal: boolean,\n  keyringName: string,\n  openedByKeyring: boolean,\n  hwCheck: string,\n}\n\n\nclass Main extends React.Component<any, MainState> {\n  constructor(props) {\n    super(props)\n    const params = new URLSearchParams(window.location.search);\n    const keyringName = params.get('keyring')\n    this.state = {\n      name: constants.DEFAULT_APP_NAME,\n      menuItem: DEFAULT_MENU_ITEM,\n      // GridPlusSDK session object\n      session: null,\n      collapsed: false,\n      error: { msg: null, cb: null },\n      loading: false,\n      pendingMsg: null,\n      // Waiting on asynchronous data, usually from the Lattice\n      waiting: false, \n      onCancel: null,\n      // Login info stored in localstorage. Can be cleared out at any time by the `logout` func\n      deviceID: null,\n      password: null,\n      // Last time the state was updated (comes from webwork setup by SdkSession)\n      lastUpdated: new Date(),\n      // Width of the current window\n      windowWidth: window.innerWidth,\n      // Track changes in the active wallet so we can refresh addresses when we detect one\n      walletIsExternal: null,\n      // Window params\n      keyringName,\n      // Was the app opened with a keyring in the url parameters\n      openedByKeyring: !!keyringName,\n      // Validation check on Lattice hardware. Should draw a separate component\n      hwCheck: null,\n    };\n\n    // Bind local state updaters\n    this.handleMenuChange = this.handleMenuChange.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleKeyringOpener = this.handleKeyringOpener.bind(this);\n    this.syncActiveWalletState = this.syncActiveWalletState.bind(this);\n\n    // Bind callbacks whose calls may originate elsewhere\n    this.cancelConnect = this.cancelConnect.bind(this);\n    this.connectSession = this.connectSession.bind(this);\n    this.handlePair = this.handlePair.bind(this);\n    this.fetchBtcData = this.fetchBtcData.bind(this);\n    this.setError = this.setError.bind(this);\n    this.refreshWallets = this.refreshWallets.bind(this);\n    this.handlePageTurn = this.handlePageTurn.bind(this);\n\n    // Bind wrappers\n    this.retry = this.retry.bind(this);\n\n    // Bind listener callbacks\n    this.updateWidth = this.updateWidth.bind(this);\n  }\n\n  componentDidMount() {\n    // Listen for window resize\n    window.addEventListener('resize', this.updateWidth);\n\n    if (this.isMobile()) this.setState({collapsed: true})\n    // Metamask connects through a keyring and in these cases we need\n    // to utilize window.postMessage once we connect.\n    // We can extend this pattern to other apps in the future.\n    const params = new URLSearchParams(window.location.search);\n    const keyringName = this.state.keyringName\n    const hwCheck = params.get('hwCheck')\n    const forceLogin = params.get('forceLogin')\n    \n    // Workaround to support Firefox extensions. See `returnKeyringData` below.\n    const hasLoggedIn = params.get(LOGIN_PARAM)\n    if (hasLoggedIn) {\n      this.setState({ waiting: true, pendingMsg: 'Connecting...' })\n      return;\n    }\n    \n    if (keyringName) {\n      //@ts-expect-error\n      window.onload = this.handleKeyringOpener();\n      this.setState({ keyringName }, () => {\n        // Check if this keyring has already logged in. This login should expire after a period of time.\n        const prevKeyringLogin = localStorage.getKeyringItem(keyringName);\n        //@ts-expect-error\n        const keyringTimeoutBoundary = new Date().getTime() - constants.KEYRING_LOGOUT_MS;\n        if (!forceLogin && prevKeyringLogin && prevKeyringLogin.lastLogin > keyringTimeoutBoundary) {\n          this.connect( prevKeyringLogin.deviceID, \n                        prevKeyringLogin.password, \n                        () => this.connectSession(prevKeyringLogin));\n        } else {\n          // If the login has expired, clear it now.\n          localStorage.removeKeyringItem(keyringName)\n        }\n      })\n    } else if (hwCheck) {\n      // Lattice validation check builds this URL and includes a signature + preimage\n      this.setState({ hwCheck })\n    } else {\n      // Lookup deviceID and pw from storage\n      const { deviceID, password } = localStorage.getLogin()\n      if (deviceID && password)\n        this.connect(deviceID, password, () => this.connectSession())\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.state.session)\n      this.syncActiveWalletState();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWidth);\n  }\n\n  updateWidth() {\n    this.setState({ windowWidth:  window.innerWidth });\n    if (this.isMobile() && !this.state.collapsed) {\n      this.setState({ collapsed: true })\n    } else if (!this.isMobile() && this.state.collapsed) {\n      this.setState({ collapsed: false })\n    }\n  }\n\n  isMobile() {\n    return this.state.windowWidth < 500;\n  }\n\n  connect(deviceID, password, cb) {\n    const updates = { deviceID, password };\n    const name = this.state.keyringName ? this.state.keyringName : this.state.name\n    if (!this.state.session) {\n      // Create a new session if we don't have one.\n      const settings = localStorage.getSettings()\n      //@ts-expect-error\n      updates.session = new SDKSession(deviceID, this.setError, name, settings);\n    }\n    this.setState(updates, cb);\n  }\n\n  cancelConnect() {\n    // Cancel the pairing process if it was started (i.e. if the connection was started with\n    // a device that could be discovered). Most of the time this will not be possible because\n    // the cancel button that triggers this function will not be displayed once the device\n    // responds back that it is ready to pair.\n    if (this.state.session && this.state.session.client) {\n      this.state.session.pair('', () => {});\n    }\n    // Reset all SDK-related state variables so the user can re-connect to something else.\n    this.setState({ deviceID: null, password: null, session: null })\n    this.unwait()\n  }\n\n  isConnected() {\n    if (!this.state.session) return false;\n    return this.state.session.isConnected();\n  }\n\n  //------------------------------------------\n  // KEYRING HANDLERS\n  //------------------------------------------\n\n  handleKeyringOpener() {\n    this.setState({ openedByKeyring: true })\n  }\n\n  returnKeyringData() {\n    if (!this.state.openedByKeyring)\n      return;\n    // Save the login for later\n    localStorage.setKeyringItem(this.state.keyringName, {\n      deviceID: this.state.deviceID,\n      password: this.state.password,\n      lastLogin: new Date().getTime()\n    })\n    // Send the data back to the opener\n    const data = {\n      deviceID: this.state.deviceID,\n      password: this.state.password,\n      endpoint: constants.BASE_SIGNING_URL,\n    };\n    // Check if there is a custom endpoint configured\n    const settings = localStorage.getSettings();\n    if (settings.customEndpoint && settings.customEndpoint !== '') {\n      data.endpoint = settings.customEndpoint;\n    }\n    this.handleLogout();\n    if (window.opener) {\n      // If there is a `window.opener` we can just post back\n      window.opener.postMessage(JSON.stringify(data), \"*\");\n      window.close();\n    } else {\n      // Otherwise we need a workaround to let the originator\n      // know we have logged in. We will put the login data\n      // into the URL and the requesting app will fetch that.\n      // Note that the requesting extension is now responsible for\n      // closing this web page.\n      const enc = Buffer.from(JSON.stringify(data)).toString('base64');\n      window.location.href = `${window.location.href}&${LOGIN_PARAM}=${enc}`;\n    }\n  }\n  //------------------------------------------\n  // END KEYRING HANDLERS\n  //------------------------------------------\n\n  //------------------------------------------\n  // LOCAL STATE UPDATES\n  //------------------------------------------\n  wait(msg=null, onCancel=null) {\n    this.setState({ pendingMsg: msg, waiting: true, onCancel });\n  }\n\n  unwait() {\n    this.setState({ pendingMsg: null, waiting: false, onCancel: null });\n  }\n\n  //------------------------------------------\n  // END LOCAL STATE UPDATES\n  //------------------------------------------\n\n  //------------------------------------------\n  // HEADER HANDLERS\n  //------------------------------------------\n  handlePageTurn(page) {\n    this.state.session.setPage(page);\n  }\n\n  handleMenuChange ({ key }) {\n    const stateUpdate = { menuItem: key }\n    //@ts-expect-error\n    if (this.isMobile()) stateUpdate.collapsed = true\n    this.setState(stateUpdate)\n  }\n\n  handleLogout(err=null) {\n    this.unwait();\n    this.state.session.disconnect();\n    this.setState({ session: null });\n    localStorage.removeLogin()\n    if (err && err === constants.LOST_PAIRING_MSG)\n      //@ts-expect-error\n      this.setError({ err })\n  }\n\n  setError(data={msg:null, cb:null}) {\n    // Handle case where user deletes pairing on the Lattice\n    if (data.msg === constants.LOST_PAIRING_ERR)\n      return this.handleLostPairing();\n    this.setState({ error: data, loading: false })\n  }\n  \n  //------------------------------------------\n  // END HEADER HANDLERS\n  //------------------------------------------\n\n  //------------------------------------------\n  // SDK HOOKS\n  //------------------------------------------\n\n  // Call `connect` on the SDK session. If we get an error back, clear out the client,\n  // as we cannot connect.\n  connectSession(data=this.state, showLoading=true) {\n    const { deviceID, password } = data;\n      // Sanity check -- this should never get hit\n    if (!deviceID || !password) {\n      //@ts-expect-error\n      return this.setError({ \n        msg: 'You must provide a deviceID and password. Please refresh and log in again. '\n      });\n    } else {\n      this.setError();\n    }\n    // Connect to the device\n    this.connect(deviceID, password, () => {\n      // Create a new session with the deviceID and password provided.\n      if (showLoading === true) {\n        this.wait(\"Looking for your Lattice\", this.cancelConnect);\n      }\n      this.state.session.connect(deviceID, password, (err, isPaired) => {\n        this.unwait();\n        // If the request was before we got our callback, exit here\n        if (!this.state.session || this.state.deviceID !== deviceID)\n          return;\n        if (err) {\n          // If we failed to connect, clear out the SDK session. This component will\n          // prompt the user for new login data and will try to create one.\n          this.setError({ \n            msg: err, \n            cb: () => { this.connectSession(data); } \n          });\n        } else {\n          // We connected!\n          // 1. Save these credentials to localStorage if this is NOT a keyring\n          if (!this.state.openedByKeyring) {\n            localStorage.setLogin({ deviceID, password })\n          }\n          // 2. Clear errors and alerts\n          this.setError();\n          // 3. Proceed based on state\n          if (isPaired && this.state.openedByKeyring) {\n            return this.returnKeyringData();\n          }\n        }\n      });\n    })\n  }\n\n  // Fetch up-to-date blockchain state data for the addresses stored in our\n  // SDKSession. Called after we load addresses for the first time\n  // Passing `isRecursion=true` means we will attempt to fetch new\n  // addresses based on known state data and if we do not yield any new ones\n  // we should exit. This is done to avoid naively requesting state data\n  // for all known addresses each time we add a new one based on a gap limit.\n  // For example, an initial sync will get 20 addrs and fetch state data. It \n  // may then request one address at a time and then state data for that one\n  // address until the gap limit is reached.\n  fetchBtcData(isRecursion=false) {\n    this.unwait();\n    this.setError();\n    this.wait('Fetching addresses');\n    this.state.session.fetchBtcAddresses((err, newAddrCounts) => {\n      if (err) {\n        console.error('Error fetching BTC addresses', err)\n        this.unwait();\n        this.setError({ \n          msg: 'Failed to fetch BTC addresses. Please try again.', \n          cb: this.fetchBtcData\n        });\n        return;\n      }\n      this.unwait()\n      const shouldExit =  isRecursion && \n                          newAddrCounts.regular === 0 && \n                          newAddrCounts.change === 0;\n      if (shouldExit) {\n        // Done syncing\n        return;\n      }\n      // If this is the first time we are calling this function,\n      // start by clearing UTXOs to avoid stale balances\n      if (!isRecursion) {\n        this.state.session.clearUtxos();\n      }\n      // Sync data now\n      this.wait('Syncing chain data')\n      const opts = isRecursion ? newAddrCounts : null;\n      this.state.session.fetchBtcStateData(opts, (err) => {\n        if (err) {\n          console.error('Error fetching BTC state data', err)\n          this.unwait();\n          this.setError({ \n            msg: 'Failed to fetch BTC state data. Please try again.', \n            cb: this.fetchBtcData \n          });\n          return;\n        }\n        // Recurse such that we exit if there are no new addresses\n        this.fetchBtcData(true);\n      })\n    })\n  }\n\n  handleLostPairing() {\n    // If we lost our pairing, we will have discovered that after trying to `connect`.\n    // The Lattice will draw a pairing screen, so to tear it down we need to send an\n    // invalid pairing code.\n    // TODO: This will still draw a pairing failure screen on the Lattice. There is\n    //       currently no way around this, but it is something we should address\n    //       in the future.\n    this.state.session.pair('x', () => {\n      this.handleLogout(constants.LOST_PAIRING_MSG);\n    });\n  }\n\n  refreshWallets() {\n    if (this.state.waiting === true)\n      return;\n    this.wait(\"Refreshing wallets\")\n    this.setState({ waiting: true })\n    this.state.session.refreshWallets((err) => {\n      if (err === constants.LOST_PAIRING_ERR)\n        return this.handleLostPairing();\n      \n      this.syncActiveWalletState(true);\n      this.unwait();\n      if (err)\n        return this.setError({ msg: err, cb: this.refreshWallets })\n      this.setError();\n      this.fetchBtcData()\n    })\n  }\n\n  // If we detect a new active wallet interface, save it and refresh wallet addresses\n  syncActiveWalletState(bypassRefresh=false) {\n    const activeWallet = this.state.session.getActiveWallet();\n    if (!activeWallet)\n      return;\n    const isExternal = activeWallet.external;\n    if (this.state.walletIsExternal !== isExternal) {\n      // We only want to refresh if we know another interface was active before. If this\n      // is the first check, just set the flag without calling refresh (it will get called)\n      // automatically.\n      const shouldRefresh = this.state.walletIsExternal !== null;\n      // Set state regardless\n      this.setState({ walletIsExternal: isExternal })\n      // Refresh if needed\n      if (shouldRefresh === true && bypassRefresh !== true)\n        this.refreshWallets();\n    }\n  }\n\n  //------------------------------------------\n  // END SDK HOOKS\n  //------------------------------------------\n\n  //------------------------------------------\n  // SDK CALLBACKS\n  //------------------------------------------\n\n  // Handle a `finalizePairing` response. There are three states:\n  // 1. Wrong secret: draw a new screen (try again) automatically\n  // 2. Timed out: display error screen and wait for user to try again\n  // 3. Success: load addresses\n  handlePair(data) {\n    // Hack to circumvent a weird screen artifact we are seeing in firmware\n    // NOTHING TO SEE HERE\n    if (data[0] === '_' || data[0] === '[') data = data.slice(1)\n\n    // If we didn't timeout, submit the secret and hope for success!\n    this.wait(\"Establishing connection with your Lattice\");\n    this.state.session.pair(data, (err) => {\n      this.unwait();\n      if (err) {\n        // If there was an error here, the user probably entered the wrong secret\n        const pairErr = 'Failed to pair. You either entered the wrong code or have already connected to this app.'\n        this.setError({ msg: pairErr, cb: this.connectSession });\n      } else if (this.state.openedByKeyring) {\n        this.returnKeyringData();\n      }\n    })\n  }\n\n  //------------------------------------------\n  // END SDK CALLBACKS\n  //------------------------------------------\n\n  //------------------------------------------\n  // RENDERERS\n  //------------------------------------------\n  renderMenu() {\n    const hideWallet = constants.BTC_PURPOSE_NONE === getBtcPurpose();\n    return (\n      <Sider\n        collapsed={this.state.collapsed}\n        collapsedWidth={0}\n      >\n        <Menu theme=\"dark\" mode=\"inline\" onSelect={this.handleMenuChange}>\n          {/* Setting title={null} removes floating tooltip on mobile */}\n          <Menu.Item key=\"menu-landing\" title={null}>\n            <HomeOutlined/>\n            <span>Home</span>\n            </Menu.Item>\n          <Menu.Item key=\"menu-kv-records\" title={null}>\n            <TagsOutlined />\n            <span>Address Tags</span>\n          </Menu.Item>\n          <Menu.Item key=\"menu-eth-contracts\" title={null}>\n            <AuditOutlined />\n            <span>Contracts</span>\n          </Menu.Item>\n          {/* <Menu.Item key=\"menu-permissions\">\n            <DollarOutlined/>\n            <span>Limits</span>\n          </Menu.Item> */}\n          <Menu.Item key=\"menu-settings\" title={null}>\n            <SettingOutlined />\n            <span>Settings</span>\n          </Menu.Item>\n          {!hideWallet ? (\n            <Menu.SubMenu title=\"BTC Wallet\" key=\"submenu-wallet\">\n              <Menu.Item key=\"menu-wallet\" title={null}>\n                <WalletOutlined />\n                <span>History</span>\n              </Menu.Item>\n              <Menu.Item key=\"menu-send\" title={null}>\n                <ArrowUpOutlined />\n                <span>Send</span>\n              </Menu.Item>\n              <Menu.Item key=\"menu-receive\" title={null}>\n                <ArrowDownOutlined />\n                <span>Receive</span>\n              </Menu.Item>\n            </Menu.SubMenu>\n          ) : null}\n        </Menu>\n      </Sider>\n    );\n  }\n\n  renderSidebar() {\n    if (this.state.name !== constants.DEFAULT_APP_NAME)\n      return\n    if (this.isConnected())\n      return this.renderMenu();\n  }\n\n  renderHeaderText() {\n    return (\n      <>\n        {this.isMobile() ? (\n          <Button\n            onClick={() => this.setState({ collapsed: !this.state.collapsed })}\n            type=\"text\"\n            size=\"large\"\n            icon={<MenuOutlined />}\n            style={{ backgroundColor: \"transparent\", marginRight: \"5px\" }}\n          />\n        ) : null}\n        <a\n          className=\"lattice-a\"\n          href=\"https://gridplus.io\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img  alt=\"GridPlus\" \n                src={'/gridplus-logo.png'}\n                style={{height: '1em'}}/>\n        </a>\n      </>\n    );\n  }\n\n  renderHeader() {\n    if (this.state.name !== constants.DEFAULT_APP_NAME)\n      return\n    let extra: any[] = [];\n    if (!this.isConnected())\n      return;\n\n    // Display a tag if there is a SafeCard inserted\n    let walletTag = null;\n    const size = this.isMobile() ? 'small' : 'middle';\n    const activeWallet = this.state.session.getActiveWallet();\n\n    if (activeWallet === null) {\n      walletTag = ( \n        //@ts-expect-error\n        <Button type=\"danger\" ghost onClick={this.refreshWallets} size={size}>No Wallet <ReloadOutlined/></Button>\n      )\n    } else {\n      walletTag = activeWallet.external === true ?  (\n        <Button type=\"primary\" ghost onClick={this.refreshWallets} size={size}><CreditCardOutlined/> SafeCard <ReloadOutlined/></Button>\n      ) : (\n        <Button type=\"default\" ghost onClick={this.refreshWallets} size={size}><CheckOutlined/> Lattice <ReloadOutlined/></Button>\n      )\n    }\n    if (walletTag) extra.push((\n      <Tooltip title=\"Refresh\" key=\"WalletTagTooltip\">{walletTag}</Tooltip>));\n\n    extra.push(\n      ( <Button key=\"logout-button\" type=\"primary\" onClick={this.handleLogout} size={size}>\n        Logout\n      </Button>)\n    );\n    return (\n      <PageHeader\n        title={this.renderHeaderText()}\n        ghost={true}\n        extra={!this.state.waiting ? extra : null}\n      />\n    )\n  }\n\n  renderErrorHeader() {\n    if (this.state.error.msg) {\n      const err = (\n        <Error  msg={this.state.error.msg} \n                retryCb={this.state.error.cb}\n        />\n      )\n      return (\n        <PageContent content={err} isMobile={() => this.isMobile()}/>\n      )\n    } else {\n      return;\n    }\n  }\n\n  retry(cb) {\n    this.setError();\n    return cb();\n  }\n\n  renderMenuItem() {\n    switch (this.state.menuItem) {\n      case 'menu-wallet':\n        return (\n          <Wallet isMobile={() => this.isMobile()}\n                  session={this.state.session}\n                  refreshData={this.fetchBtcData}\n                  lastUpdated={this.state.lastUpdated}\n                  pageTurnCb={this.handlePageTurn}\n          />\n        );\n      case 'menu-receive':\n        return (\n          <Receive session={this.state.session}\n                   isMobile={() => this.isMobile()}\n          />\n        );\n      case 'menu-send':\n        return (\n          <Send session={this.state.session}\n                isMobile={() => this.isMobile()}\n          />\n        )\n      case 'menu-eth-contracts':\n        return (\n          <EthContracts\n            session={this.state.session}\n            isMobile={() => this.isMobile()}\n          />\n        )\n      // case 'menu-permissions':\n      //   return (\n      //     <Permissions\n      //       session={this.state.session}\n      //       isMobile={() => this.isMobile()}\n      //     />\n      //   )   \n      case 'menu-settings':\n        return (\n          <Settings\n            isMobile={() => this.isMobile()}\n          />\n        )\n      case 'menu-kv-records':\n        return (\n          <KvFiles\n            session={this.state.session}\n            isMobile={() => this.isMobile()}\n          />\n        )\n      case DEFAULT_MENU_ITEM:\n        return (\n          <Landing isMobile={() => this.isMobile()}/>\n        );\n      default:\n        return;\n    }\n  }\n\n  renderContent() {\n    const hasActiveWallet = this.state.session ? this.state.session.getActiveWallet() !== null : false;\n    if (this.state.waiting) {\n      return (\n        <Loading  isMobile={() => this.isMobile()} \n                  msg={this.state.pendingMsg}\n                  onCancel={this.state.onCancel}/> \n      );\n    } else if (!this.isConnected()) {\n      // Connect to the Lattice via the SDK\n      return (\n        <Connect  submitCb={this.connectSession}\n                  cancelConnect={this.cancelConnect}\n                  name={this.state.name}\n                  keyringName={this.state.keyringName}\n                  setKeyringName={(keyringName) => this.setState({ keyringName })}\n                  isMobile={() => this.isMobile()}\n                  errMsg={this.state.error.msg}/>\n      );\n    } else if (!this.state.session.isPaired()) {\n      // Automatically try to pair if we have a session but no pairing  \n      return (\n        <Pair submit={this.handlePair}\n              isMobile={() => this.isMobile()}\n              hide={!!this.state.error.msg} />\n      );\n    } else if (this.state.openedByKeyring) {\n      // The window should close automatically, but just in case something goes wrong...\n      return (\n        <Loading isMobile={() => { this.isMobile() }}\n                  msg={\"Successfully connected to your Lattice! You may close this window.\"}\n                  spin={false}/>\n      )\n    } else if (!hasActiveWallet) {\n      const retry = this.state.session ? this.refreshWallets : null;\n      return (\n        <Error msg={\"No active wallet present for device!\"}\n               retryCb={retry} \n        />\n      )\n    } else {\n      return this.renderMenuItem();\n    }\n  }\n\n  renderFooter() {\n    return (\n      <Footer style={{ textAlign: 'center' }}>\n        ©2021 GridPlus Inc\n        {constants.ENV === 'dev' ? <Tag color=\"blue\" style={{margin: \"0 0 0 10px\"}}>DEV</Tag> : null}\n      </Footer>\n    )\n  }\n\n  renderPage() {\n    if (this.state.hwCheck !== null) {\n      return <ValidateSig data={this.state.hwCheck} isMobile={() => this.isMobile()}/>\n    } else {\n      return this.renderContent();\n    }\n  }\n\n  render() {\n    return (\n      <Layout style={{ minHeight: '100vh' }}>\n        {this.renderHeader()}\n        <Layout id=\"main-content-outer\">\n          {this.renderSidebar()}\n          <Layout id=\"main-content-inner\">\n            <Content style={{ margin: '0 0 0 0' }}>\n              {this.renderErrorHeader()}\n              <div style={{ margin: '30px 0 0 0'}}>\n                {this.renderPage()}        \n              </div>\n            </Content>\n            {this.renderFooter()}\n          </Layout>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default Main","import React from 'react';\nimport 'antd/dist/antd.dark.css'\nimport { Card, Col, Result, Row } from 'antd'\nimport { decode } from 'bs58'\nimport { constants } from '../util/helpers';\nconst ReactCrypto = require('gridplus-react-crypto').default;\nconst EC = require('elliptic').ec;\n\nconst PREIMAGE_LEN = 32;\nconst SIG_TEMPLATE_LEN =  74; // Struct containing DER sig\nconst CERT_TEMPLATE_LEN = 147;  // Struct containing pubkey, permissions, and signature on it\n\nclass ValidateSig extends React.Component<any, any> {\n  // Validate a signature for a message from a known signer on a known curve\n  // * msg - Expected ASCII string\n  // * signer - Expected buffer containing 65-byte public key\n  // * sig - Expected DER signature (string is best)\n  // * curve - Consumable curve for elliptic\n  _validate(msg, signer, sig, curve='secp256k1') {\n    const crypto = new ReactCrypto();\n    const ec = new EC(curve);\n    const msgHash = crypto.createHash('sha256').update(msg).digest();\n    const key = ec.keyFromPublic(signer, 'hex')\n    return key.verify(msgHash, sig);\n  }\n\n  getPreimage() {\n    return decode(this.props.data).slice(0, PREIMAGE_LEN).toString()\n  }\n\n  getCert() {\n    const start = PREIMAGE_LEN + SIG_TEMPLATE_LEN;\n    const _certData = decode(this.props.data).slice(start, start + CERT_TEMPLATE_LEN);\n    const METADATA_LEN = 8;\n    const PUBKEY_LEN = 65;\n    const preimage = _certData.slice(2, METADATA_LEN + PUBKEY_LEN);\n    // When we issue the cert, we are signing metadata + the public key. However, this\n    // cert gets packed into a template along with this metadata and the length of the data in\n    // that template is variable, depending on the size of the DER sig (which we call a \"cert\").\n    // We sign metadata with 0 length at the outset because we won't know the eventual length.\n    // Therefore this byte needs to be reuturned to its initial 0 value in order to validate the \"cert\".\n    // preimage[1] = 0;\n    const pubkey = Buffer.from(_certData.slice((METADATA_LEN), (METADATA_LEN + PUBKEY_LEN))).toString('hex');\n    const _sig = Buffer.from(_certData.slice((METADATA_LEN + PUBKEY_LEN), (METADATA_LEN + PUBKEY_LEN + SIG_TEMPLATE_LEN)));\n    const sig = _sig.slice(0, (2 + _sig[1]));\n    return { pubkey, preimage, sig }\n  }\n\n  validateCert() {\n    const cert = this.getCert();\n    return this._validate(cert.preimage, constants.LATTICE_CERT_SIGNER, cert.sig)\n  }\n\n  validateSig() {\n    try {\n      if (!this.validateCert())\n        return false;\n      const preimage = this.getPreimage();\n      const cert = this.getCert();\n      const _sig = Buffer.from(decode(this.props.data).slice(PREIMAGE_LEN, PREIMAGE_LEN + SIG_TEMPLATE_LEN));\n      const sig = _sig.slice(0, (2 + _sig[1]))\n      return this._validate(preimage, cert.pubkey, sig);\n    } catch (err) {\n      console.error(`Encountered error validating signature: ${err.message}`)\n      return false;\n    }\n  }\n\n  renderResult() {\n    let result = {\n      status: \"warning\",\n      title: \"Could not Verify Authenticity\",\n      subTitle: \"We could not verify the authenticity of this signature or signer.\"\n    };\n    if (true === this.validateSig()) {\n      result.status = \"success\";\n      result.title = \"Verified\";\n      result.subTitle = \"The signer is authentic!\"\n    }\n    return (\n      <Result\n        //@ts-expect-error\n        status={result.status}\n        title={result.title}\n        subTitle={result.subTitle}\n      />\n    )\n  }\n\n\n  render() {\n    const spanLength = this.props.isMobile() ? 18 : 10;\n    const spanOffset = this.props.isMobile() ? 3 : 7; \n    return (\n      <Row>\n        <Col span={spanLength} offset={spanOffset}>\n          <center>\n            <Card title=\"Validate Hardware\" bordered={true}>\n              {this.renderResult()}\n              <p><b>Message:</b> {this.getPreimage()}</p>\n            </Card>\n          </center>\n        </Col>\n      </Row>\n    )\n  }\n\n\n}\n\nexport default ValidateSig","import localStorage from './localStorage';\n\nclass StorageSession {\n  data: any;\n  store: any;\n  \n  constructor(device_id, pass) {\n    this.data = null;\n    this.store = localStorage.getRootStore();\n  }\n\n  isObject(o) {\n    try {\n      return o && typeof o === 'object' && !Array.isArray(o);\n    } catch(e) {\n      return false;\n    }\n  }\n\n  updateBranch(newData, oldData, key) {\n    // If we have reached the end of oldData\n    if (!this.isObject(oldData))\n      return;\n\n    // If `newData[key]` is a nested object, start that object\n    // clone in `oldData`\n    if (this.isObject(newData[key]) && !oldData[key])\n      oldData[key] = {};\n\n    // Loop through all keys in new data at this level. We will\n    // be adding each one as a branch\n    if (this.isObject(newData[key])) {\n      Object.keys(newData[key]).forEach((newKey) => {\n        // If there are more keys nested in this branch, update them first\n        if (this.isObject(newData[key][newKey]))\n          this.updateBranch(newData[key], oldData[key], newKey)\n        // No more keys in this branch? Finally copy this data to `oldData`\n        else\n          oldData[key][newKey] = newData[key][newKey];\n      });\n    } else {\n      // If this is a non-ojbect, copy it directly\n      oldData[key] = newData[key];\n    }\n  }\n\n  save(deviceID, wallet_uid, data) {\n    // Get the data for this deviceID\n    if (!this.store[deviceID]) this.store[deviceID] = {};\n    if (!this.store[deviceID][wallet_uid]) this.store[deviceID][wallet_uid] = {};\n    // Update relevant keys without overwriting anything else\n    Object.keys(data).forEach((k) => {\n      this.updateBranch(data, this.store[deviceID][wallet_uid], k);\n    })\n    // Update the store itself\n    localStorage.setRootStore(this.store);\n  }\n\n  getWalletData(deviceID, wallet_uid) {\n    if (!this.store[deviceID]) this.store[deviceID] = {};\n    if (!this.store[deviceID][wallet_uid]) this.store[deviceID][wallet_uid] = {};\n    return this.store[deviceID][wallet_uid];\n  }\n}\n\n\nexport default StorageSession;","import { Client } from 'gridplus-sdk';\nimport { SDKAddresses } from '../types/SDKAddresses';\nimport {\n  broadcastBtcTx, constants, fetchBtcPrice,\n  fetchBtcTxs, fetchBtcUtxos, filterUniqueObjects, getBtcPurpose, harden\n} from '../util/helpers';\nimport { default as StorageSession } from '../util/storageSession';\nconst Buffer = require('buffer/').Buffer;\nconst ReactCrypto = require('gridplus-react-crypto').default;\n\nclass SDKSession {\n  client: any;\n  crypto: any;\n  name: any;\n  storageSession: any;\n  deviceID: any;\n  stateUpdateHandler: any;\n  page: number;\n  baseUrl: any;\n  addresses: SDKAddresses;\n  btcTxs: any[];\n  btcUtxos: any[];\n  lastFetchedBtcData: number;\n  btcPrice: number;\n\n  constructor(deviceID, stateUpdateHandler, name=null, opts: any = {}) {\n    this.client = null;\n    this.crypto = null;\n    this.name = name || constants.DEFAULT_APP_NAME; // app name\n    // Make use of localstorage to persist wallet data\n    this.storageSession = null;\n    // Save the device ID for the session\n    this.deviceID = deviceID;\n    // Handler to call when we get state updates\n    this.stateUpdateHandler = stateUpdateHandler;\n\n    // Current page of results (transactions) for the wallet\n    this.page = 1; // (1-indexed)\n\n    // Configurable settings\n    this.baseUrl = opts.customEndpoint ? opts.customEndpoint : constants.BASE_SIGNING_URL;\n\n    // BTC wallet data\n    this.addresses = {};          // Contains BTC and BTC_CHANGE addresses\n    this.btcTxs = [];             // Contains all txs for all addresses\n    this.btcUtxos = [];           // Contains all utxos for all addresses\n    this.lastFetchedBtcData = 0;  // Timestamp containing the last time we updated data\n    this.btcPrice = 0;            // Price in dollars of full unit BTC\n    \n    // Go time\n    this.getBtcWalletData();\n  }\n\n  disconnect() {\n    this.client = null;\n    this.saveBtcWalletData();\n    this.storageSession = null;\n    this.deviceID = null;\n  }\n\n  isConnected() {\n    return this.client !== null;\n  }\n\n  isPaired() {\n    return this.client.isPaired || false;\n  }\n\n  resetStateData() {\n    this.addresses = {};\n    this.btcTxs = [];\n    this.btcUtxos = [];\n  }\n  \n  getBtcDisplayAddress() {\n    // If we have set the next address to use, display that.\n    // Otherwise, fallback on the first address.\n    const lastUsed = this._getLastUsedBtcAddrIdx()\n    if (lastUsed > -1 && this.addresses.BTC[lastUsed + 1])\n      return this.addresses.BTC[lastUsed + 1];\n    else if (this.addresses.BTC && this.addresses.BTC.length > 0)\n      return this.addresses.BTC[0];\n    else\n      return null;\n  }\n\n  getActiveWallet() {\n    if (!this.client) return null;\n    return this.client.getActiveWallet();\n  }\n\n  setPage(newPage=1) {\n    this.page = newPage;\n  }\n\n  getPage() {\n    return this.page;\n  }\n\n  // Prepare addresses for caching in localStorage\n  dryAddresses() {\n    const driedAddrs: SDKAddresses = {};\n    const hasBTCAddrs = this.addresses.BTC && this.addresses.BTC.length > 0;\n    const hasBTCChangeAddrs = this.addresses.BTC_CHANGE && this.addresses.BTC_CHANGE.length > 0;\n    const BTC_PURPOSE = getBtcPurpose();\n    if (BTC_PURPOSE === constants.BTC_PURPOSE_NONE) {\n      // We cannot continue if the wallet is hidden\n      return driedAddrs;\n    }\n    if (hasBTCAddrs) {\n      driedAddrs.BTC = {};\n      driedAddrs.BTC[BTC_PURPOSE] = this.addresses.BTC || [];\n    }\n    if (hasBTCChangeAddrs) {\n      driedAddrs.BTC_CHANGE = {};\n      driedAddrs.BTC_CHANGE[BTC_PURPOSE] = this.addresses.BTC_CHANGE || [];\n    }\n    return driedAddrs;\n  }\n\n  // Pull addresses out of cached localStorage data\n  rehydrateAddresses(allAddrs: SDKAddresses = {}) {\n    const rehydratedAddrs: SDKAddresses = {};\n    const BTC_PURPOSE = getBtcPurpose();\n    if (BTC_PURPOSE === constants.BTC_PURPOSE_NONE) {\n      // We cannot continue if the wallet is hidden\n      return rehydratedAddrs;\n    }\n    if (allAddrs.BTC) {\n      rehydratedAddrs.BTC = allAddrs.BTC[BTC_PURPOSE];\n    }\n    if (allAddrs.BTC_CHANGE) {\n      rehydratedAddrs.BTC_CHANGE = allAddrs.BTC_CHANGE[BTC_PURPOSE];\n    }\n    this.addresses = rehydratedAddrs;\n  }\n\n  saveBtcWalletData() {\n    // This function should never be called without a deviceID \n    // or StorageSession\n    if (!this.deviceID || !this.storageSession) return;\n\n    // Package data and save it\n    // NOTE: We are only storing addresses at this point, as\n    // the blockchain state needs to be up-to-date and is therefore\n    // not very useful to store.\n    const BTC_PURPOSE = getBtcPurpose();\n    if (BTC_PURPOSE === constants.BTC_PURPOSE_NONE) {\n      console.error('Cannot save BTC wallet data when wallet is hidden');\n      return;\n    }\n    const walletData = {\n      [constants.BTC_WALLET_STORAGE_KEY]: {\n        [BTC_PURPOSE]: {\n          addresses: this.dryAddresses(),\n          btcTxs: this.btcTxs,\n          btcUtxos: this.btcUtxos,\n          lastFetchedBtcData: this.lastFetchedBtcData,\n        },\n        btcPrice: this.btcPrice,\n      }\n    };\n    const activeWallet = this.client ? this.client.getActiveWallet() : null;\n    if (this.client && activeWallet !== null) {\n      const wallet_uid = activeWallet.uid.toString('hex');\n      this.storageSession.save(this.deviceID, wallet_uid, walletData);\n    }\n  }\n\n  getBtcWalletData() {\n    // Create a storage session only if we have a deviceID and don't\n    // have a current storage session\n    if (this.deviceID && !this.storageSession)\n      //@ts-expect-error\n      this.storageSession = new StorageSession(this.deviceID);\n    if (this.client) {\n      // Make sure the btc wallet is enabled\n      const BTC_PURPOSE = getBtcPurpose();\n      if (BTC_PURPOSE === constants.BTC_PURPOSE_NONE) {\n        console.error('Cannot get wallet data when wallet is hidden.');\n        return;\n      }\n      // If we have a client and if it has a non-zero active wallet UID,\n      // lookup the addresses corresponding to that wallet UID in storage.\n      const activeWallet = this.getActiveWallet();\n      if (activeWallet === null) {\n        // No active wallet -- reset addresses\n        this.addresses = {};\n      } else {\n        const uid = activeWallet.uid.toString('hex')\n        // Rehydrate the data\n        const data = this.storageSession.getWalletData(this.deviceID, uid);\n        if (!data || !data[constants.BTC_WALLET_STORAGE_KEY])\n          return;\n        const walletData = data[constants.BTC_WALLET_STORAGE_KEY];\n        // Price is saved outside of the purpose sub-object\n        if (walletData.btcPrice) {\n          this.btcPrice = walletData.btcPrice;\n        }\n        // Unpack wallet data associated with the current btc purpose\n        const purposeSpecificData = walletData[BTC_PURPOSE];\n        if (!purposeSpecificData)\n          return;\n        if (purposeSpecificData.addresses) {\n          this.rehydrateAddresses(purposeSpecificData.addresses);\n        }\n        if (purposeSpecificData.btcTxs) {\n          this.btcTxs = purposeSpecificData.btcTxs;\n        }\n        if (purposeSpecificData.btcUtxos) {\n          this.btcUtxos = purposeSpecificData.btcUtxos;\n        }\n        if (purposeSpecificData.lastFetchedBtcData) {\n          this.lastFetchedBtcData = purposeSpecificData.lastFetchedBtcData;\n        }\n      }\n    }\n  }\n\n  _tryConnect(deviceID, pw, cb, _triedLocal=false) {\n    let baseUrl = this.baseUrl;\n    let tmpTimeout = constants.SHORT_TIMEOUT; // Artificially short timeout just for connecting\n    if (_triedLocal === false) {\n      baseUrl = `http://lattice-${deviceID}.local:8080`\n      tmpTimeout = 5000 // Shorten the timeout even more since we should discover quickly if device is on LAN\n    }\n    // Derive a keypair from the deviceID and password\n    // This key doesn't hold any coins and only allows this app to make\n    // requests to a particular device. Nevertheless, the user should\n    // enter a reasonably strong password to prevent unwanted requests\n    // from nefarious actors.\n    const key = this._genPrivKey(deviceID, pw, this.name);\n    // If no client exists in this session, create a new one and\n    // attach it.\n    let client;\n    try {\n      client = new Client({ \n        name: this.name,\n        crypto: this.crypto,\n        privKey: key,\n        baseUrl,\n        timeout: tmpTimeout, // Artificially short timeout for simply locating the Lattice\n      })\n    } catch (err) {\n      return cb(err.toString());\n    }\n    client.connect(deviceID, (err) => {\n      if (err) {\n        if (_triedLocal === false) {\n          console.warn('Failed to connect to Lattice over LAN. Falling back to cloud routing.')\n          return this._tryConnect(deviceID, pw, cb, true); \n        } else {\n          console.error('Failed to connect via cloud routing.')\n          return cb(err);\n        }\n      } else if (_triedLocal === false) {\n        console.log('Successfully connected to Lattice over LAN.')\n      }\n      // Update the timeout to a longer one for future async requests\n      client.timeout = constants.ASYNC_SDK_TIMEOUT;\n      this.client = client;\n      // Setup a new storage session if these are new credentials.\n      // (This call will be bypassed if the credentials are already saved\n      // in localStorage because getBtcWalletData is also called in the constructor)\n      this.deviceID = deviceID;\n      this.getBtcWalletData();\n      return cb(null, client.isPaired);\n    });\n  }\n\n  connect(deviceID, pw, cb) {\n    // return this._tryConnect(deviceID, pw, cb);\n    return this._tryConnect(deviceID, pw, cb, true); // temporarily disable local connect\n  }\n\n  refreshWallets(cb) {\n    if (this.client) {\n      const prevWallet = JSON.stringify(this.client.getActiveWallet());\n      this.client.connect(this.deviceID, (err) => {\n        // If we lost connection, the user most likely removed the pairing and will need to repair\n        if (false === this.client.isPaired)\n          return cb(constants.LOST_PAIRING_ERR);\n        if (err)\n          return cb(err);\n        // If we pulled a new active wallet, reset balances + transactions\n        // so we can reload a new set.\n        const newWallet = JSON.stringify(this.client.getActiveWallet());\n        if (newWallet !== prevWallet)\n          this.resetStateData();\n        // Update storage. This will remap to a new localStorage key if the wallet UID\n        // changed. If we didn't get an active wallet, it will just clear out the addresses\n        this.getBtcWalletData();\n        return cb(null);\n      })\n    } else {\n      return cb('Lost connection to Lattice. Please refresh.');\n    }\n  }\n\n  addAbiDefs(defs, cb) {\n    this.client.addAbiDefs(defs, cb);\n  }\n\n  addPermissionV0(req, cb) {\n    this.client.addPermissionV0(req, cb);\n  }\n\n  pair(secret, cb) {\n    this.client.pair(secret, cb);\n  }\n\n  sign(req, cb) {\n    // Get the tx payload to broadcast\n    this.client.sign(req, (err, res) => {\n      if (err) {\n        return cb(err);\n      }\n      broadcastBtcTx(res.tx, (err, txid) => {\n        if (err)\n          return cb(`Error broadcasting transaction: ${err.message}`)\n        return cb(null, txid)\n      })\n    })\n  }\n\n  _genPrivKey(deviceID, pw, name) {\n    const key = Buffer.concat([\n      Buffer.from(pw), \n      Buffer.from(deviceID),\n      Buffer.from(name),\n    ])\n    // Create a new instance of ReactCrypto using the key as entropy\n    this.crypto = new ReactCrypto(key);\n    return this.crypto.createHash('sha256').update(key).digest();\n  }\n\n  //----------------------------------------------------\n  // NEW STUFF - REWRITING ADDRESS/DATA FETCHING FOR BTC WALLET\n  //----------------------------------------------------\n\n  // Get a set of either pending or confirmed transactions from the full\n  // set of known BTC txs\n  getBtcTxs(confirmed=true) {\n    const txs: any[] = [];\n    this.btcTxs.forEach((t) => {\n      if (confirmed && t.confirmed) {\n        txs.push(t)\n      } else if (!confirmed && !t.confirmed) {\n        txs.push(t)\n      }\n    })\n    return txs;\n  }\n\n  // Get the set of known UTXOs belonging to our known set of BTC addresses\n  getBtcUtxos() {\n    return this.btcUtxos;\n  }\n\n  // Get the BTC balance, which is simply a sum of UTXO values\n  // Returns the balance in satoshis\n  getBtcBalance() {\n    let balance = 0;\n    this.btcUtxos.forEach((u) => {\n      balance += u.value;\n    })\n    return balance;\n  }\n\n  // Fetch necessary addresses based on state data. We need to fetch addresses\n  // for both BTC and BTC_CHANGE such that we have fetched GAP_LIMIT past the last\n  // used address. An address is \"used\" if it has at least one transaction associated.\n  // This function will automatically fetch both BTC and BTC_CHANGE addresses up to\n  // the associated GAP_LIMITs and updates state internally.\n  // Returns a callback containing params (error, numFetched), where `numFetched` is\n  // the total number of *new* addresses we fetched. If this number is >0, it signifies\n  // we should re-fetch transaction data for our new set of addresses.\n  fetchBtcAddresses(cb, isChange=false, totalFetched={regular: 0, change: 0}) {\n    const BTC_PURPOSE = getBtcPurpose();\n    if (BTC_PURPOSE === constants.BTC_PURPOSE_NONE) {\n      // We cannot continue if the wallet is hidden\n      return cb('Cannot request BTC addresses while wallet is hidden.');\n    }\n    const lastUsedIdx = this._getLastUsedBtcAddrIdx(isChange);\n    const currentAddrs = (isChange ? this.addresses.BTC_CHANGE : this.addresses.BTC) || [];\n    const GAP_LIMIT = isChange ?  constants.BTC_CHANGE_GAP_LIMIT : \n                                  constants.BTC_MAIN_GAP_LIMIT;\n    const targetIdx = lastUsedIdx + 1 + GAP_LIMIT;\n    const maxToFetch = targetIdx - currentAddrs.length;\n    const nToFetch = Math.min(constants.BTC_ADDR_BLOCK_LEN, maxToFetch)\n    if (nToFetch > 0) {\n      // If we have closed our gap limit we need to get more addresses\n      const changeIdx = isChange ? 1 : 0;\n      const opts = {\n        startPath: [ \n          BTC_PURPOSE, constants.BTC_COIN, harden(0), changeIdx, currentAddrs.length \n        ],\n        n: nToFetch,\n        skipCache: true,\n      }\n      this._getAddresses(opts, (err, addresses) => {\n        if (err)\n          return cb(err);\n        // Track the number of new addresses we fetched\n        if (isChange) {\n          totalFetched.change += nToFetch;\n        } else {\n          totalFetched.regular += nToFetch;\n        }\n        // Save the addresses to memory and also update them in localStorage\n        // Note that we do need to track index here\n        if (isChange) {\n          this.addresses.BTC_CHANGE = currentAddrs.concat(addresses);\n        } else {\n          this.addresses.BTC = currentAddrs.concat(addresses);\n        }\n        console.log('Fetched BTC', this.addresses.BTC)\n        console.log('Fetched BTC_CHANGE', this.addresses.BTC_CHANGE)\n        // If we need to fetch more, recurse\n        if (maxToFetch > nToFetch) {\n          this.fetchBtcAddresses(cb, isChange, totalFetched);\n        } else if (!isChange) {\n          // If we are done fetching main BTC addresses, switch to the change path\n          this.fetchBtcAddresses(cb, true, totalFetched);\n        } else {\n          this.saveBtcWalletData();\n          cb(null, totalFetched);\n        }\n      })\n    } else if (!isChange) {\n      // If we are done fetching main BTC addresses, switch to the change path\n      this.fetchBtcAddresses(cb, true, totalFetched);\n    } else {\n      // Nothing to fetch\n      this.saveBtcWalletData();\n      cb(null, totalFetched);\n    }\n  }\n\n  // We want to clear UTXOs when we re-sync because they could have been spent.\n  // Due to the nature of `fetchBtcStateData`, we need to append new UTXOs to\n  // the existing set as we sync data, so it is best to call this function once\n  // from the component that is starting the resync.\n  clearUtxos() {\n    this.btcUtxos = [];\n  }\n\n  // Fetch transactions and UTXOs for all known BTC addresses (including change)\n  // Calls to appropriate Bitcoin data provider and updates state internally.\n  // Returns a callback with params (error)\n  fetchBtcStateData(opts, cb, isChange=false, txs=[], utxos=[]) {\n    // Determine which addresses for which to fetch state.\n    // If we get non-zero `opts` values it means this is a follow up call\n    // and we only want to fetch data for new addresses we've collected\n    // rather than data for all known addresses.\n    let addrs = (isChange ? this.addresses.BTC_CHANGE : this.addresses.BTC) || [];\n    if (opts && opts.regular > 0) {\n      addrs = this.addresses.BTC.slice(-opts.regular);\n      opts.regular = 0;\n    } else if (opts && opts.change > 0) {\n      // If we have new change addrs but not new regular addrs,\n      // we can force a switch to change here so we don't re-scan\n      // the same regular addresses we have already scanned.\n      isChange = true;\n      addrs = this.addresses.BTC_CHANGE.slice(-opts.change);\n      opts.change = 0;\n    }\n    fetchBtcPrice((err, btcPrice) => {\n      if (err) {\n        // Don't fail out if we can't get the price - just display 0\n        console.error('Failed to fetch price:', err);\n        btcPrice = 0;\n      }\n      fetchBtcTxs(addrs, (err, _txs) => {\n        if (err)\n          return cb(err);\n        else if (!_txs)\n          return cb('Failed to fetch transactions');\n        txs = txs.concat(_txs);\n        fetchBtcUtxos(addrs, (err, _utxos) => {\n          if (err)\n            return cb(err);\n          else if (!_utxos)\n            return cb('Failed to fetch UTXOs');\n          utxos = utxos.concat(_utxos);\n          if (!isChange) {\n            // Once we get data for our BTC addresses, switch to change\n            this.fetchBtcStateData(opts, cb, true, txs, utxos);\n          } else {\n            // All done! Filter/process data and save\n            this.btcPrice = btcPrice;\n            this.lastFetchedBtcData = Math.floor(Date.now());\n            const newTxs = this.btcTxs.concat(txs);\n            this.btcTxs = filterUniqueObjects(newTxs, ['id']);\n            this._processBtcTxs();\n            const newUtxos = this.btcUtxos.concat(utxos);\n            // UTXOs should already be filtered but it doesn't hurt to\n            // do a sanity check filter here.\n            this.btcUtxos =   filterUniqueObjects(newUtxos, ['id', 'vout'])\n                              .sort((a, b) => { return b.value - a.value });\n            this.saveBtcWalletData();\n            cb(null);\n          }\n        })\n      })\n    })\n  }\n\n  // Generic caller to SDK getAddress route with retry mechanism\n  _getAddresses(opts, cb) {\n    this.client.getAddresses(opts, (err, addresses) => {\n      // Catch an error, but if the device is busy it probably means it is currently\n      // caching a batch of new addresses. Continue the loop through this request until\n      // it hits.\n      if (err && err !== 'Device Busy') {\n        setTimeout(() => {\n          return cb(err);\n        }, 2000);\n      } else {\n        // To avoid concurrency problems on an initial sync, we need to wait\n        // for the device to refresh addresses before completing the callback\n        if (err === 'Device Busy') {\n          return this._getAddresses(opts, cb)\n        } else {\n          return cb(null, addresses);\n        }\n      }\n    })\n  }\n\n  // Get the highest index address that has been used for either BTC or BTC_CHANGE\n  _getLastUsedBtcAddrIdx(change=false) {\n    const coin = change ? 'BTC_CHANGE' : 'BTC';\n    const addrs = this.addresses[coin] || [];\n    const txs = this.btcTxs || [];\n    let lastUsed = -1;\n    for (let i = 0; i < txs.length; i++) {\n      if (txs[i].confirmed) {\n        let maxUsed = lastUsed;\n        txs[i].inputs.forEach((input) => {\n          if (addrs.indexOf(input.addr) > maxUsed)\n            maxUsed = addrs.indexOf(input.addr);\n        })\n        txs[i].outputs.forEach((output) => {\n          if (addrs.indexOf(output.addr) > maxUsed)\n            maxUsed = addrs.indexOf(output.addr);\n        })\n        if (maxUsed > lastUsed)\n          lastUsed = maxUsed;\n      }\n    }\n    return lastUsed;\n  }\n\n  // Loop through known txs, determining value and recipient\n  // based on known addresses.\n  // Recipient should be the first address\n  // If the recipient is one of our addresses, the transaction is inbound\n  // If the transaction is inbound, value is SUM(outputs to our addresses)\n  // If the transaction is outbound, value is SUM(inputs) - SUM(outputs to our addresses)\n  _processBtcTxs() {\n    const allAddrs = this.addresses.BTC.concat(this.addresses.BTC_CHANGE);\n    const processedTxs: any[] = [];\n    const txs = JSON.parse(JSON.stringify(this.btcTxs));\n    txs.forEach((tx) => {\n      tx.recipient = tx.outputs[0].addr;\n      tx.incoming = allAddrs.indexOf(tx.recipient) > -1;\n      tx.value = 0;\n      if (allAddrs.indexOf(tx.recipient) === -1) {\n        // Outbound\n        tx.inputs.forEach((input) => {\n          tx.value += input.value;\n        })\n        tx.value -= tx.fee;\n        tx.outputs.forEach((output) => {\n          if (allAddrs.indexOf(output.addr) > -1)\n            tx.value -= output.value;\n        })\n      } else {\n        // Inbound\n        tx.outputs.forEach((output) => {\n          if (allAddrs.indexOf(output.addr) > -1)\n            tx.value += output.value;\n        })\n        // Handle edge case where this is an internal tx\n        let sentFromAddrs = 0;\n        let totalValue = 0;\n        tx.inputs.forEach((input) => {\n          totalValue += input.value;\n          if (allAddrs.indexOf(input.addr) > -1)\n            sentFromAddrs += input.value;\n        })\n        // If any of the inputs were from one of our addresses,\n        // subtract those inputs from the total display amount\n        if (sentFromAddrs > 0) {\n          tx.value -= sentFromAddrs;\n        }\n        // If ALL inputs were from our addresses, set value to 0.\n        // This is just for display purposes and this is an edge case\n        // so it's not super important, but I'm not sure what the\n        // standard way to handle this is. I think it makes most\n        // sense to show this as an internal tx with a 0 value\n        if (totalValue === sentFromAddrs) {\n          tx.value = 0;\n        }\n      }\n      processedTxs.push(tx);\n    })\n    const sortedTxs = processedTxs\n                      .sort((a, b) => { return b.timestamp - a.timestamp })\n    this.btcTxs = sortedTxs;\n  }\n}\n\nexport default SDKSession","import omit from \"lodash/omit\";\n\nconst LOGIN_ID_STORAGE_KEY = \"gridplus_web_wallet_id\";\nconst LOGIN_PASSWORD_STORAGE_KEY = \"gridplus_web_wallet_password\";\nconst ROOT_STORE = process.env.REACT_APP_ROOT_STORE || \"gridplus\";\n\n// #region -- Generic Local Storage Functions\n\nconst getItem = (key) => {\n  const value = window.localStorage.getItem(key);\n  try {\n    return JSON.parse(value)\n  } catch (e) {\n    return JSON.parse(JSON.stringify(value))\n  }\n};\nconst setItem = (key, value) =>\n  window.localStorage.setItem(key, JSON.stringify(value));\nconst removeItem = (key) => window.localStorage.removeItem(key);\n\nconst getRootStore = () => getItem(ROOT_STORE) ?? {};\nconst setRootStore = (value) =>\n  window.localStorage.setItem(\n    ROOT_STORE,\n    JSON.stringify({ ...getRootStore(), ...value })\n  );\nconst removeRootStore = () => removeItem(ROOT_STORE);\n\nconst getRootStoreItem = (key) => getItem(ROOT_STORE)?.[key] ?? {};\nconst setRootStoreItem = (key, value) =>\n  window.localStorage.setItem(\n    ROOT_STORE,\n    JSON.stringify({ ...getRootStore(), [`${key}`]: value })\n  );\nconst removeRootStoreItem = (key) =>\n  window.localStorage.setItem(\n    ROOT_STORE,\n    JSON.stringify(omit(getRootStore(), key))\n  );\n\n// #endregion\n\n// #region -- Settings Functions\n\nconst getSettings = () => getRootStoreItem(\"settings\");\nconst setSettings = (value) => setRootStoreItem(\"settings\", value);\n\n// #endregion\n\n// #region -- Keyring Functions\n\nconst getKeyring = () => getRootStoreItem(\"keyring\");\nconst setKeyring = (value) => setRootStoreItem(\"keyring\", value);\n\nconst getKeyringItem = (key) => getRootStoreItem(\"keyring\")?.[key] ?? {};\nconst setKeyringItem = (key, value) =>\n  setRootStoreItem(\"keyring\", { [`${key}`]: value });\nconst removeKeyringItem = (key) =>\n  setRootStoreItem(\"keyring\", omit(getKeyring(), key));\nconst renameKeyringItem = (oldKey, newKey) => {\n  if (oldKey !== newKey) {\n    const item = { ...getKeyringItem(oldKey) };\n    setKeyringItem(newKey, item);\n    removeKeyringItem(oldKey);\n  }\n};\n\n// #endregion\n\n// #region -- Login Functions\n\nconst getLoginId = () => getItem(LOGIN_ID_STORAGE_KEY);\nconst setLoginId = (value) => setItem(LOGIN_ID_STORAGE_KEY, value);\nconst removeLoginId = () => removeItem(LOGIN_ID_STORAGE_KEY);\n\nconst getLoginPassword = () => getItem(LOGIN_PASSWORD_STORAGE_KEY);\nconst setLoginPassword = (value) => setItem(LOGIN_PASSWORD_STORAGE_KEY, value);\nconst removeLoginPassword = () => removeItem(LOGIN_PASSWORD_STORAGE_KEY);\n\nconst getLogin = () => ({\n  deviceID: getLoginId(),\n  password: getLoginPassword(),\n});\nconst setLogin = ({ deviceID, password }) => {\n  setLoginId(deviceID);\n  setLoginPassword(password);\n};\nconst removeLogin = () => {\n  removeLoginId();\n  removeLoginPassword();\n};\n\n// #endregion\n\nexport default {\n  getItem,\n  setItem,\n  removeItem,\n  getRootStore,\n  setRootStore,\n  removeRootStore,\n  getRootStoreItem,\n  setRootStoreItem,\n  removeRootStoreItem,\n  getSettings,\n  setSettings,\n  getLoginId,\n  setLoginId,\n  removeLoginId,\n  getLoginPassword,\n  setLoginPassword,\n  removeLoginPassword,\n  getKeyring,\n  setKeyring,\n  getKeyringItem,\n  setKeyringItem,\n  removeKeyringItem,\n  renameKeyringItem,\n  getLogin,\n  setLogin,\n  removeLogin,\n};\n","import React from 'react';\nimport 'antd/dist/antd.dark.css'\nimport { Col, Row } from 'antd'\nconst SPAN_WIDTH = 14; // Max 24 for 100% width\n\nclass PageContent extends React.Component<any, any> {\n  render () {\n    if (!this.props.content)\n      return; // Content must be passed in\n    // Mobile content should be displayed without any padding\n    if (this.props.isMobile && this.props.isMobile())\n      return this.props.content;\n    // Desktop content has some padding\n    return(\n      <Row justify=\"center\">\n        <Col span={SPAN_WIDTH}>\n          {this.props.content}\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default PageContent;","import { EditOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Input } from \"antd\";\nimport React, { useState } from \"react\";\n\n/**\n * Allows the user to edit text inline by rendering\n * the string as a button that converts the string \n * into a text field when clicked by the user.\n */\nexport const NameEditor = ({ name, setName }: {\n  name: string;\n  setName: (name: string) => void;\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n  const [form] = Form.useForm();\n\n  const onCancel = () => {\n    form.resetFields();\n    setIsEditing(false);\n  };\n\n  const onFinish = (value) => {\n    setIsEditing(false);\n    setName(value.name);\n  };\n\n  return isEditing ? (\n    <Form\n      form={form}\n      name=\"formData\"\n      layout=\"inline\"\n      onFinish={onFinish}\n      style={{ justifyContent: \"center\" }}\n    >\n      <Form.Item\n        name=\"name\"\n        initialValue={name}\n        rules={[{ required: true, message: \"Name is required.\" }]}\n      >\n        <Input data-testid={`${name}-input`} />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"text\" onClick={onCancel} data-testid={`${name}-cancel`}>\n          Cancel\n        </Button>\n        <Button type=\"ghost\" htmlType=\"submit\" data-testid={`${name}-save`}>\n          Save\n        </Button>\n      </Form.Item>\n    </Form>\n  ) : (\n    <Button\n      type=\"text\"\n      size=\"large\"\n      icon={isHovered ? <EditOutlined /> : null}\n      style={{ fontSize: \"24px\" }}\n      data-testid={`${name}-edit`}\n      onClick={() => setIsEditing(true)}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      {name}\n    </Button>\n  );\n};\n","import React from 'react';\nimport 'antd/dist/antd.dark.css'\nimport { Alert, Button, Card, Col, Input, Row, Modal } from 'antd'\nimport { DesktopOutlined, LinkOutlined } from '@ant-design/icons';\nimport { Settings } from './index'\nimport { constants } from '../util/helpers'\nimport { NameEditor } from './NameEditor';\nimport { LoginData } from '../types/authentication';\n\ntype ConnectProps = {\n  submitCb: (data: LoginData, showLoading: boolean) => void,\n  cancelConnect: () => void,\n  name: string,\n  keyringName: string,\n  setKeyringName: (name: string) => void,\n  isMobile: () => boolean,\n  errMsg: string\n}\n\ntype ConnectState = {\n  errMsg: string,\n  isLoading: boolean,\n  modal: boolean,\n  showSettings: boolean\n}\n\nclass Connect extends React.Component<ConnectProps, ConnectState> {\n  constructor(props) {\n    super(props)\n    this.state = {\n      errMsg: null,\n      isLoading: false,\n      modal: false,\n      showSettings: false,\n    }\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderMsg = this.renderMsg.bind(this);\n    this.showModal = this.showModal.bind(this);\n  }\n\n  componentDidMount() {\n    //@ts-expect-error\n    this.input.focus()\n    this.setState({ isLoading: false  })\n  }\n\n  componentDidUpdate() {\n    if (this.props.name !== constants.DEFAULT_APP_NAME && document.title !== 'Lattice Connector') {\n      document.title = 'Lattice Connector'\n    }\n  }\n\n  componentWillUnmount() {\n    this.setState({ isLoading: false })\n  }\n\n  handleSubmit() {\n    const deviceID = (document.getElementById(\"deviceIdInput\") as HTMLInputElement).value;\n    const password = (document.getElementById(\"passwordInput\") as HTMLInputElement).value;\n    if (password.length < 8) {\n      this.setState({ isLoading: true, errMsg: \"Your password must be at least 8 characters.\"})\n    } else {\n      this.setState({ isLoading: true, errMsg: null })\n      // Call the connect function. Skip the loading screen so we don't\n      // leave the landing page until we connect.\n      this.props.submitCb({deviceID, password}, false);\n    }\n  }\n\n  handleCancel() {\n    this.props.cancelConnect();\n    this.setState({ isLoading: false, errMsg: null });\n  }\n\n  renderConnectButton() {\n    if (this.state.isLoading && \n        this.state.errMsg === null &&\n        this.props.errMsg === null) {\n      return (\n        <div>\n          <Button type=\"primary\"\n                  style={{ margin: '20px 0 0 0' }}\n                  loading>\n            Connecting...\n          </Button>\n          <br/>\n          <Button type=\"link\" onClick={this.handleCancel}>\n            Cancel\n          </Button>\n        </div>\n      )\n    } else {\n      return (\n        <Button type=\"primary\" onClick={this.handleSubmit} style={{ margin: '20px 0 0 0'}}>\n          Connect\n        </Button>\n      )\n    }\n  }\n\n  renderForm(getFieldDecorator) {\n    return (\n      <div>\n        <Row justify=\"center\">\n          <Input  placeholder=\"DeviceID\" \n                  id=\"deviceIdInput\" \n                  //@ts-expect-error\n                  ref={i => {this.input = i}}\n                  style={{ margin: '10px 0 0 0', width: \"70%\"}} />\n        </Row>\n        <Row justify=\"center\">\n          <Input.Password placeholder=\"Password (create for new logins)\" \n                          id=\"passwordInput\" \n                          onPressEnter={this.handleSubmit} \n                          style={{ margin: '20px 0 0 0', width: \"70%\"}} />\n        </Row>\n        <Row justify=\"center\">\n          {this.renderConnectButton()}\n        </Row>\n      </div>\n    )\n  }\n\n  showModal() {\n    this.setState({ modal: true });\n  }\n\n  hideModal() {\n    this.setState({ modal: false, showSettings: false });\n  }\n\n  renderSetupInfo() {\n    return (\n      <div>\n        <center>\n          <h3><b>New User Setup</b></h3>\n        </center>\n        <p>\n          You can use this page to establish a connection between <b>{this.props.name}</b>&nbsp; and your Lattice \n          hardware wallet device.&nbsp;\n          <i>For more general device setup information, please see the&nbsp;\n            <a className=\"lattice-a\" href=\"https://gridplus.io/setup\" target={\"_blank\"} rel={\"noopener noreferrer\"}>\n            Lattice setup page\n            </a>.</i>\n        </p>\n        <h3><b>Step 1:</b></h3>\n        <p>\n          Unlock your Lattice and find its <b>Device ID</b> on the main menu. This is a six-character code.\n        </p>\n        <h3><b>Step 2:</b></h3>\n        <p>\n          Once you have your Device ID, specify a <b>password</b>. This does <i>not</i> secure any value and \n          is <i>not</i> associated with your wallet seed - it is only used to send secure requests to your device. \n          If you lose your password, you can remove the permission on your device and re-connect with a new one.\n        </p>\n        <h3><b>Step 3:</b></h3>\n        <p>\n          Please ensure your Lattice is <b>online</b> and click \"Connect\". Your device is online if there is a single\n          wifi signal icon on the top-right of the screen.\n        </p>\n      </div>\n    )\n  }\n\n  renderModal() {\n    if (this.state.showSettings) {\n      return (\n        <Modal\n          title=\"Settings\"\n          footer={null}\n          visible={this.state.modal}\n          onOk={this.hideModal.bind(this)}\n          onCancel={this.hideModal.bind(this)}\n        >\n          <Settings isMobile={this.props.isMobile} inModal={true} />\n        </Modal>\n      )\n    }\n     return (\n      <div>\n        <Modal\n          title={this.props.name === constants.DEFAULT_APP_NAME ? this.props.name : 'Lattice Connector 🔗'}\n          footer={null}\n          visible={this.state.modal}\n          onOk={this.hideModal.bind(this)}\n          onCancel={this.hideModal.bind(this)}\n        >\n          {this.renderSetupInfo()}\n        </Modal>\n      </div>\n    );\n  }\n\n  renderMsg() {\n    let err;\n    if (this.state.errMsg)\n      err = this.state.errMsg;\n    else if (this.props.errMsg)\n      err = this.props.errMsg;\n    if (err)\n      return (\n        <Alert  message={<p><b>Error:</b><br/>{err}</p>} \n                type={\"error\"} \n                style={{margin: \"20px 0 0 0\"}}\n                closable/>\n      );\n    return;\n  }\n\n  render() {\n    const spanWidth = this.props.isMobile() ? 24 : 10;\n    const spanOffset = this.props.isMobile() ? 0 : 7;\n    const tooLong = this.props.keyringName !== null && this.props.keyringName.length < 5;\n    return (\n      <Row>\n        {this.renderModal()}\n        <Col span={spanWidth} offset={spanOffset}>\n          <center>\n            {this.renderMsg()}\n            <Card bordered={true}>\n              <a  className='lattice-a'\n                  href=\"https://gridplus.io/lattice\" \n                  target='_blank' \n                  rel='noopener noreferrer'\n              >\n                {this.props.keyringName ? (\n                  <h2 style={{margin: \"10px 0 0 0\"}}>Lattice Connector <LinkOutlined/></h2>\n                ) : (\n                  <h2 style={{margin: \"10px 0 0 0\"}}>Lattice Manager<br/><DesktopOutlined/></h2>\n                )}\n              </a>\n              {this.props.keyringName ? (\n                <div style={{margin: \"2em\"}}>\n                  <br />\n                  <i><h3>Connect to:</h3></i>\n                  <NameEditor\n                    name={this.props.keyringName}\n                    setName={this.props.setKeyringName}\n                  />\n                </div>) : null}\n              {/* @ts-expect-error */}\n              {tooLong ? (<p><b>Error: App name must be more than 4 characters.</b></p>) : this.renderForm()}\n            </Card>\n            <Button type=\"link\" onClick={this.showModal.bind(this)} style={{margin: \"20px 0 0 0\"}}>\n              New User Info\n            </Button>\n            <br/>\n            <Button type=\"link\" onClick={() => {\n              this.setState({ showSettings: true }, this.showModal)\n            }}>\n              Settings\n            </Button>\n            <br/>\n            <Button type=\"link\" href=\"https://gridplus.io/lattice\" target={\"_blank\"} rel={\"noopener noreferrer\"}>\n              About the Lattice\n            </Button>\n          </center>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default Connect\n","import React from 'react';\nimport { Card, Input } from 'antd'\nimport { PageContent } from './index'\nimport 'antd/dist/antd.dark.css'\nconst SUBMIT_LEN = 8; // 8 characters in a code\n\nclass Pair extends React.Component<any, any> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: '',\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ code: '' })\n    //@ts-expect-error\n    this.input.focus()\n  }\n\n  componentWillUnmount() {\n    this.setState({ code: '' })\n  }\n\n  handleUpdate(e) {\n    try {\n      this.setState({ code: e.target.value.toUpperCase() }, () => {\n        if (this.state.code.length >= SUBMIT_LEN) {\n          this.props.submit(this.state.code)\n        }\n      })\n    } catch (err) {\n      ;\n    }\n  }\n\n  getBoxWidth() {\n    const e = document.getElementById('secret-card')\n    if (!e)\n      return\n    return 0.8 * e.clientWidth\n  }\n\n  getBoxFontHeight() {\n    const w = this.getBoxWidth();\n    if (!w)\n      return;\n    return 0.6 * (w / SUBMIT_LEN);\n  }\n\n  render() {\n    if (this.props.hide) {\n      return null;\n    }\n    const size = this.props.isMobile() ? 'small' : 'large';\n    const width = this.getBoxWidth();\n    const fontSize = this.getBoxFontHeight();\n    const content = (\n      <center>\n        <Card title=\"Enter Secret\" bordered={true} id='secret-card'>\n          <p></p>\n          <p>Please enter the pairing secret displayed on your Lattice screen:</p>\n          <Input\n            className='lattice-pairing-box'\n            size={size}\n            id=\"secret\"\n            //@ts-expect-error\n            ref={i => {this.input = i}}\n            onChange={this.handleUpdate.bind(this)}\n            style={{width, fontSize}}\n            value={this.state.code}\n          />\n        </Card>\n      </center>\n    )\n    return (\n      <PageContent content={content} isMobile={this.props.isMobile}/>\n    )\n  }\n}\n\nexport default Pair","import {\n  CheckCircleOutlined,\n  LinkOutlined,\n  PlusCircleOutlined,\n} from \"@ant-design/icons\";\nimport { Button, Card, Modal, Table, Tag } from \"antd\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { constants } from \"../util/helpers\";\n\nexport function ContractCard({ pack, session }) {\n  const [contract, setContract] = useState({});\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isAdded, setIsAdded] = useState(false);\n  const [isAdding, setIsAdding] = useState(false);\n  const { url } = constants.CONTRACT_NETWORKS[pack.network];\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleAddClick = () => {\n    setIsAdding(true);\n    session.client.timeout = 2 * constants.ASYNC_SDK_TIMEOUT;\n    session.addAbiDefs(contract, (err) => {\n      // Reset timeout to default\n      session.client.timeout = constants.ASYNC_SDK_TIMEOUT;\n      if (err) {\n        setIsAdded(false);\n      } else {\n        setIsAdded(true);\n      }\n      setIsAdding(false);\n    });\n  };\n\n  const loadContractData = useCallback(() => {\n    fetch(`${constants.ABI_PACK_URL}/${pack.fname}`)\n      .then((response) => response.json())\n      .then((resp) => {\n        setContract(resp.defs);\n      });\n  }, [pack]);\n\n  useEffect(() => {\n    loadContractData();\n  }, [pack, loadContractData]);\n\n  const AddDefsButton = isAdded ? (\n    <Button type=\"default\" icon={<CheckCircleOutlined />} disabled={isAdded}>\n      Added\n    </Button>\n  ) : (\n    <Button\n      type=\"primary\"\n      ghost\n      onClick={handleAddClick}\n      icon={<PlusCircleOutlined />}\n      loading={isAdding}\n    >\n      {isAdding ? \"Adding\" : \"Add to Lattice\"}\n    </Button>\n  );\n\n  return (\n    <Card\n      bordered={true}\n      title={pack.name}\n      style={{\n        flex: \"1 1 30%\",\n        maxWidth: \"33%\",\n      }}\n      key={`card-${pack.name}`}\n      extra={AddDefsButton}\n      actions={[\n        <Button type=\"default\" onClick={showModal}>\n          View Contents\n        </Button>,\n        <Button\n          type=\"text\"\n          href={pack.website}\n          target=\"_blank\"\n          icon={<LinkOutlined />}\n        >\n          Website\n        </Button>,\n      ]}\n      bodyStyle={{ height: \"7em\" }}\n    >\n      <p className=\"lattice-h3\">{pack.desc}</p>\n\n      <Modal\n        title={pack.name}\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        width={1000}\n      >\n        <Table dataSource={pack.addresses}>\n          <Table.Column\n            title=\"Address\"\n            dataIndex=\"address\"\n            key=\"address\"\n            render={(address) => (\n              <Tag color=\"blue\" key={`tag-${address}`}>\n                <a\n                  className=\"lattice-a\"\n                  href={`${url}/address/${address}`}\n                  target={\"_blank\"}\n                  rel={\"noopener noreferrer\"}\n                  key={`a-${address}`}\n                >\n                  {`${address.slice(0, 10)}...${address.slice(\n                    address.length - 8,\n                    address.length\n                  )}`}\n                </a>\n              </Tag>\n            )}\n          />\n          <Table.Column title=\"Tag\" dataIndex=\"tag\" key=\"tag\" />\n        </Table>\n      </Modal>\n    </Card>\n  );\n}\n","import { Select } from \"antd\";\nimport React from \"react\";\nimport { constants } from \"../util/helpers\";\nconst { Option } = Select;\n\nexport const SelectNetwork = ({ setNetwork }) => {\n  return (\n    <Select\n      style={{ minWidth: \"150px\", marginRight: \"10px\" }}\n      showSearch\n      defaultValue={constants.DEFAULT_CONTRACT_NETWORK}\n      optionFilterProp=\"children\"\n      onChange={setNetwork}\n      filterOption={(input, option) =>\n        //@ts-ignore\n        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {Object.entries(constants.CONTRACT_NETWORKS).map(([key, value]) => (\n        <Option key={key} value={key}>\n          {value.label}\n        </Option>\n      ))}\n    </Select>\n  );\n};\n","import { Input, Pagination, Space } from \"antd\";\nimport fuzzysort from \"fuzzysort\";\nimport chunk from \"lodash/chunk\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { constants } from \"../util/helpers\";\nimport { ContractCard } from \"./ContractCard\";\nimport { SelectNetwork } from \"./SelectNetwork\";\nconst pageSize = constants.CONTRACT_PAGE_SIZE;\n\nexport function ContractCardList({ session }) {\n  const [packs, setPacks] = useState([]);\n  const [filteredPacks, setFilteredPacks] = useState([]);\n  const [paginatedPacks, setPaginatedPacks] = useState([]);\n  const [page, setPage] = useState(1);\n  const [network, setNetwork] = useState(constants.DEFAULT_CONTRACT_NETWORK);\n\n  const filterPacksByNetwork = useCallback(\n    (packs) => packs.filter((pack) => pack?.network === network),\n    [network]\n  );\n\n  const loadPackIndex = useCallback(() => {\n    fetch(`${constants.ABI_PACK_URL}/`)\n      .then((response) => response.json())\n      .then((resp) => {\n        setPacks(resp);\n      });\n  }, []);\n\n  useEffect(() => {\n    loadPackIndex();\n  }, [loadPackIndex]);\n\n  useEffect(() => {\n    setPage(1);\n  }, [filteredPacks]);\n\n  useEffect(() => {\n    setFilteredPacks(filterPacksByNetwork(packs));\n  }, [packs, network, filterPacksByNetwork]);\n\n  useEffect(() => {\n    const pageZeroIndexed = page - 1;\n    const chunkedList = chunk(filteredPacks, pageSize)[pageZeroIndexed] ?? [];\n    setPaginatedPacks(chunkedList);\n  }, [page, filteredPacks]);\n\n  const fuzzyFilterPacksByName = (value) =>\n    fuzzysort\n      .go(value, packs, {\n        key: \"name\",\n      })\n      .map((x) => x.obj);\n\n  const onChange = ({ target: { value } }) => {\n    setPage(1);\n    const fuzzyFilteredPacks = value ? fuzzyFilterPacksByName(value) : packs;\n    setFilteredPacks(filterPacksByNetwork(fuzzyFilteredPacks));\n  };\n\n  return (\n    <div>\n      <p>\n        Once loaded, please click View Contents to see the specific contracts\n        being loaded.\n      </p>\n      <p>\n        Don't see what you're looking for?{\" \"}\n        <a href=\"https://github.com/GridPlus/abi-pack-framework\">\n          Submit a pull request.\n        </a>\n      </p>\n      <Space\n        direction=\"vertical\"\n        style={{\n          width: \"100%\",\n        }}\n      >\n        <Input.Group compact>\n          <SelectNetwork setNetwork={setNetwork} />\n          <Input\n            placeholder=\"Filter\"\n            onChange={onChange}\n            style={{ maxWidth: \"50%\" }}\n          />\n          <Pagination\n            style={{ marginLeft: \"10px\" }}\n            current={page}\n            defaultCurrent={1}\n            pageSize={pageSize}\n            defaultPageSize={pageSize}\n            onChange={setPage}\n            total={filteredPacks?.length}\n          />\n        </Input.Group>\n\n        <div\n          style={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            gap: \"10px\",\n            width: \"100%\",\n          }}\n        >\n          {paginatedPacks.map((pack) => (\n            <ContractCard pack={pack} session={session} key={pack.name} />\n          ))}\n        </div>\n      </Space>\n    </div>\n  );\n}\n","import { DownloadOutlined } from \"@ant-design/icons\";\nimport { Button, Card, Input, Result } from \"antd\";\nimport throttle from \"lodash/throttle\";\nimport React, { useMemo, useState } from \"react\";\nimport { constants } from \"../util/helpers\";\nimport { SelectNetwork } from \"./SelectNetwork\";\nconst defaultNetwork =\n  constants.CONTRACT_NETWORKS[constants.DEFAULT_CONTRACT_NETWORK];\n\nexport const SearchCard = ({ session }) => {\n  const [loading, setLoading] = useState(false);\n  const [installing, setInstalling] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [contract, setContract] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [defs, setDefs] = useState([]);\n  const [network, setNetwork] = useState(constants.DEFAULT_CONTRACT_NETWORK);\n\n  const resetData = () => {\n    setLoading(false);\n    setSuccess(false);\n    setInstalling(false);\n    setContract(\"\");\n    setDefs([]);\n  };\n\n  const getNetwork = () =>\n    constants.CONTRACT_NETWORKS[network] ?? defaultNetwork;\n\n  function fetchContractData(input) {\n    if (\n      input.slice(0, 2) !== \"0x\" ||\n      false === /^[0-9a-fA-F]+$/.test(input.slice(2)) ||\n      input.length !== 42\n    ) {\n      // Not a valid address\n      setError(\"Invalid Ethereum contract address\");\n      resetData();\n    } else {\n      const { label, baseUrl, apiRoute } = getNetwork();\n      fetch(`${baseUrl}/${apiRoute}${input}`)\n        .then((response) => response.json())\n        .then((resp) => {\n          // Map confusing error strings to better descriptions\n          if (resp.result === \"Contract source code not verified\") {\n            resp.result = `Contract source code not published to ${label} or not verified. Cannot determine data.`;\n          }\n          if (resp.status === \"0\") {\n            setError(resp.result);\n            resetData();\n          } else {\n            try {\n              const result = JSON.parse(resp.result);\n              const defs = session.client.parseAbi(\"etherscan\", result, true);\n              setDefs(defs);\n              setContract(input);\n              setError(\"\");\n              setSuccess(false);\n              setLoading(false);\n            } catch (err) {\n              setError(err.toString());\n              resetData();\n            }\n          }\n        })\n        .catch((err) => {\n          setError(err.toString());\n          resetData();\n        });\n    }\n  }\n\n  const throttledFetch = useMemo(\n    () => throttle(fetchContractData, 5100),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [network]\n  );\n\n  function addDefs() {\n    setInstalling(true);\n    setError(\"\");\n    // Longer timeout for loading these since requests may get dropped\n    session.client.timeout = 2 * constants.ASYNC_SDK_TIMEOUT;\n    session.addAbiDefs(defs, (err) => {\n      // Reset timeout to default\n      session.client.timeout = constants.ASYNC_SDK_TIMEOUT;\n      if (err) {\n        setError(err.toString());\n        resetData();\n      } else {\n        setSuccess(true);\n        setError(\"\");\n        setInstalling(false);\n      }\n    });\n  }\n\n  const SuccessAlert = () => (\n    <Result\n      status=\"success\"\n      title=\"Success\"\n      subTitle=\"Successfully sent data to your Lattice. You must confirm all\n  functions on your Lattice for them to be saved.\n  Please confirm or reject the definitions before continuing.\"\n    />\n  );\n\n  const ErrorAlert = () => <Result status=\"error\" subTitle={error} />;\n\n  const NetworkLinkList = () => {\n    const networks = Object.entries(constants.CONTRACT_NETWORKS).map(\n      ([, value]) => value\n    );\n    const last = networks.pop();\n    const NetworkLink = ({ network }) => (\n      <a\n        className=\"lattice-a\"\n        href={network.url}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {network.label}\n      </a>\n    );\n    return (\n      <>\n        {networks.map((network) => (\n          <span key={network.label}>\n            <NetworkLink network={network} />\n            {\", \"}\n          </span>\n        ))}\n        or <NetworkLink network={last} />\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <p>\n        You can install contract data from any supported contract which has been\n        verified by&nbsp;\n        <NetworkLinkList />.\n      </p>\n      <p>Search for a verified smart contract:</p>\n      <Input.Group>\n        <SelectNetwork setNetwork={setNetwork} />\n        <Input.Search\n          style={{ maxWidth: \"80%\" }}\n          placeholder=\"Contract address\"\n          allowClear\n          enterButton\n          loading={loading}\n          onSearch={(val) => {\n            setLoading(true);\n            throttledFetch(val);\n          }}\n        />\n      </Input.Group>\n\n      {contract && !success && !error && (\n        <Card\n          title={contract}\n          style={{ marginTop: \"20px\" }}\n          actions={[\n            <Button\n              type=\"primary\"\n              onClick={addDefs}\n              loading={installing}\n              icon={<DownloadOutlined />}\n            >\n              {installing ? \"Installing...\" : \"Install\"}\n            </Button>,\n          ]}\n        >\n          <p>\n            Found <b>{defs.length}</b> functions to add from this contract.\n          </p>\n        </Card>\n      )}\n      {success && <SuccessAlert />}\n      {error && <ErrorAlert />}\n    </div>\n  );\n};\n","import { QuestionCircleOutlined } from \"@ant-design/icons\";\nimport { Alert, Button, Card, Input, Result, Tabs } from \"antd\";\nimport \"antd/dist/antd.dark.css\";\nimport React from \"react\";\nimport { constants } from \"../util/helpers\";\nimport { ContractCardList } from \"./ContractCardList\";\nimport { PageContent } from \"./index\";\nimport { SearchCard } from \"./SearchCard\";\nimport \"./styles.css\";\n\nconst defaultState = {\n  contract: null,\n  defs: [],\n  success: false,\n  loading: false,\n  customDefs: [],\n  customDefsStr: \"\",\n};\nconst TAB_KEYS = {\n  PACK: \"1\",\n  SINGLE_ADDR: \"2\",\n  CUSTOM: \"3\",\n};\nconst manualPlaceholder =\n  '[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_components\",\"type\":\"address[]\"},{\"internalType\":\"int256[]\",\"name\":\"_units\",\"type\":\"int256[]\"},{\"internalType\":\"address[]\",\"name\":\"_modules\",\"type\":\"address[]\"},{\"internalType\":\"contract IController\",\"name\":\"_controller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},';\n\nclass EthContracts extends React.Component<any, any> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: null,\n      contract: null,\n      defs: [],\n      success: false,\n      loading: false,\n      //@ts-expect-error\n      tab: TAB_KEYS.PATH,\n      selectedPackKey: \"AAVE\",\n    };\n\n    this.addDefs = this.addDefs.bind(this);\n    this.onSmartContractAddress = this.onSmartContractAddress.bind(this);\n    this.renderSuccessAlert = this.renderSuccessAlert.bind(this);\n    this.renderPackCard = this.renderPackCard.bind(this);\n    this.renderCustomCard = this.renderCustomCard.bind(this);\n    this.renderSearchCard = this.renderSearchCard.bind(this);\n  }\n\n  onTabChange(key) {\n    this.setState({ tab: key, success: false, error: null, loading: false });\n  }\n\n  onSmartContractAddress(input) {\n    if (\n      input.slice(0, 2) !== \"0x\" ||\n      false === /^[0-9a-fA-F]+$/.test(input.slice(2)) ||\n      input.length !== 42\n    ) {\n      // Not a valid address\n      this.setState({\n        error: \"Invalid Ethereum contract address\",\n        ...defaultState,\n      });\n    } else {\n      this.setState({ loading: true });\n      setTimeout(() => {\n        fetch(`${constants.GET_ABI_URL}${input}`)\n          .then((response) => response.json())\n          .then((resp) => {\n            // Map confusing error strings to better descriptions\n            if (resp.err === \"Contract source code not verified\") {\n              resp.err =\n                \"Contract source code not published to Etherscan or not verified. Cannot determine data.\";\n            }\n            if (resp.err) {\n              this.setState({ error: resp.err.toString(), ...defaultState });\n            } else {\n              try {\n                const result = JSON.parse(resp.result);\n                const defs = this.TMP_REMOVE_ZERO_LEN_PARAMS(\n                  this.props.session.client.parseAbi(\"etherscan\", result, true)\n                );\n                this.setState({\n                  defs,\n                  contract: input,\n                  error: null,\n                  success: false,\n                  loading: false,\n                });\n              } catch (err) {\n                this.setState({ error: err.toString(), ...defaultState });\n              }\n            }\n          })\n          .catch((err) => {\n            this.setState({ error: err.toString(), ...defaultState });\n          });\n      }, 5000); // 1 request per 5 seconds with no API key provided\n    }\n  }\n\n  addDefs(skipErrors = false, defsToAdd = null) {\n    this.setState({ loading: true, error: null });\n    // Longer timeout for loading these since requests may get dropped\n    this.props.session.client.timeout = 2 * constants.ASYNC_SDK_TIMEOUT;\n    const defs = this.state.customDefs\n      ? this.state.customDefs\n      : this.state.defs;\n    this.props.session.addAbiDefs(defs, (err) => {\n      // Reset timeout to default\n      this.props.session.client.timeout = constants.ASYNC_SDK_TIMEOUT;\n      if (err) {\n        this.setState({\n          error: err.toString(),\n          loading: false,\n          success: false,\n        });\n      } else {\n        this.setState({ error: null, loading: false, success: true });\n      }\n    });\n  }\n\n  renderBanner() {\n    if (this.state.error) {\n      return (\n        <Alert\n          message=\"Error\"\n          description={this.state.error}\n          type=\"error\"\n          closable\n          onClose={() => {\n            this.setState({ error: null, ...defaultState });\n          }}\n        />\n      );\n    }\n  }\n\n  renderSuccessAlert(buttonTxt = null) {\n    return (\n      <Result\n        status=\"success\"\n        title=\"Success\"\n        subTitle=\"Successfully sent data to your Lattice. You must confirm all\n                  functions on your Lattice for them to be saved.\n                  Please confirm or reject the definitions before continuing.\"\n        extra={\n          buttonTxt !== null\n            ? [\n                <Button\n                  type=\"primary\"\n                  key=\"buttonTxt\"\n                  onClick={() => {\n                    this.setState({ loading: false, success: false });\n                  }}\n                >\n                  {buttonTxt}\n                </Button>,\n              ]\n            : null\n        }\n      />\n    );\n  }\n\n  renderTabs() {\n    const isLoadingDefs = this.state.success || this.state.loading;\n    if (isLoadingDefs) return;\n    return (\n      <Tabs activeKey={this.state.tab} onChange={this.onTabChange.bind(this)}>\n        <Tabs.TabPane tab=\"Packs\" key={TAB_KEYS.PACK} />\n        <Tabs.TabPane tab=\"Address\" key={TAB_KEYS.SINGLE_ADDR} />\n        <Tabs.TabPane tab=\"Manual\" key={TAB_KEYS.CUSTOM} />\n      </Tabs>\n    );\n  }\n\n  renderSearchCard() {\n    return <SearchCard session={this.props.session} />;\n  }\n\n  // TEMPORARY FUNCTION TO REMOVE FUNCTIONS WITH ZERO LENGTH PARAM NAMES\n  // SEE: https://github.com/GridPlus/gridplus-sdk/issues/154\n  TMP_REMOVE_ZERO_LEN_PARAMS(defs) {\n    const newDefs: any[] = [];\n    defs.forEach((def) => {\n      let shouldAdd = true;\n      if (def.name.length === 0) {\n        shouldAdd = false;\n      } else {\n        def.params.forEach((param) => {\n          if (param.name.length === 0) shouldAdd = false;\n        });\n      }\n      if (shouldAdd === true) newDefs.push(def);\n    });\n    return newDefs;\n  }\n\n  renderCustomCard() {\n    return (\n      <div>\n        <p>\n          Here you can add ABI definitions manually. Please stick with Etherscan\n          formatting (i.e. the contents of \"Contract ABI\" in the Contract tab\n          -&nbsp;\n          <a\n            className=\"lattice-a\"\n            href=\"https://etherscan.io/address/0x1494ca1f11d487c2bbe4543e90080aeba4ba3c2b#code\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            example\n          </a>\n          ).\n        </p>\n        <Input.TextArea\n          placeholder={`${manualPlaceholder}...`}\n          autoSize={{ minRows: 5, maxRows: 10 }}\n          value={this.state.customDefsStr}\n          onChange={(x) => {\n            const customDefsStr = x.target.value;\n            try {\n              const parsed = JSON.parse(customDefsStr);\n              const customDefs = this.TMP_REMOVE_ZERO_LEN_PARAMS(\n                this.props.session.client.parseAbi(\"etherscan\", parsed, true)\n              );\n              if (customDefs.length > 0)\n                this.setState({ customDefs, success: false, customDefsStr });\n            } catch (err) {\n              console.warn(`Failed to scan for ABI definitions ${err.message}`);\n              this.setState({ customDefs: [], success: false, customDefsStr });\n            }\n          }}\n        />\n        <br />\n        <br />\n        {this.state.customDefs && this.state.customDefs.length > 0 ? (\n          <div>\n            {this.state.success ? (\n              <div>\n                <center>\n                  {this.renderSuccessAlert()}\n                  <Button\n                    type=\"primary\"\n                    onClick={() => {\n                      this.setState({\n                        customDefs: [],\n                        customDefsStr: \"\",\n                        success: false,\n                        loading: false,\n                      });\n                    }}\n                  >\n                    Add More\n                  </Button>\n                </center>\n              </div>\n            ) : (\n              <div>\n                <p>\n                  Found <b>{this.state.customDefs.length}</b> functions that can\n                  be added.\n                  <br />\n                  <i>\n                    Note: functions with unsupported types are not included.\n                  </i>\n                </p>\n                <Button\n                  type=\"primary\"\n                  onClick={() => {\n                    this.addDefs(true);\n                  }}\n                  loading={this.state.loading}\n                >\n                  {this.state.loading ? \"Installing...\" : \"Install\"}\n                </Button>\n                {this.state.success ? (\n                  <div>\n                    <br />\n                    {this.renderSuccessAlert()}\n                  </div>\n                ) : null}\n              </div>\n            )}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n\n  renderPackCard() {\n    return <ContractCardList session={this.props.session} />;\n  }\n\n  renderCard() {\n    let f;\n    switch (this.state.tab) {\n      case TAB_KEYS.CUSTOM:\n        f = this.renderCustomCard;\n        break;\n      case TAB_KEYS.SINGLE_ADDR:\n        f = this.renderSearchCard;\n        break;\n      case TAB_KEYS.PACK:\n      default:\n        f = this.renderPackCard;\n        break;\n    }\n    return (\n      <div>\n        {this.renderTabs()}\n        {f()}\n      </div>\n    );\n  }\n\n  render() {\n    const content = (\n      <div>\n        {this.renderBanner()}\n        <Card\n          title={\n            <div>\n              <h3>\n                Load Contract Data&nbsp;&nbsp;\n                <a\n                  className=\"lattice-a\"\n                  href={constants.CONTRACTS_HELP_LINK}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <QuestionCircleOutlined />\n                </a>\n              </h3>\n            </div>\n          }\n          bordered={true}\n        >\n          {this.renderCard()}\n        </Card>\n      </div>\n    );\n    return <PageContent content={content} isMobile={this.props.isMobile} />;\n  }\n}\n\nexport default EthContracts;\n","// NOTE: This feature has been shelved for now. The problem is this:\n// 1. We deprecated the ETH wallet and are in the process of deprecating the BTC wallet too\n// 2. Only the paired requester can setup a permission and the web wallet (rebanded manager)\n//    is itself a paired requester.\n// Ideally we could have a true manager that can create a permission on behalf of a paired\n// requester, otherwise the requester needs to have an interface to setup the permission.\n// If we are to use this app as the \"manager\", we cannot manage permissions on it.\n// FOR NOW, I AM HIDING THIS FEATURE IN main.js\n\nimport React from 'react';\nimport 'antd/dist/antd.dark.css'\nimport { Alert, Button, Card, Col, Dropdown, Input, Menu, Row, Select, Spin } from 'antd'\nimport { LoadingOutlined, QuestionCircleOutlined } from '@ant-design/icons';\nimport { constants, } from '../util/helpers';\nimport { PageContent } from './index'\nimport './styles.css'\nconst BN = require('bignumber.js');\nconst HOURS = 3600;\nconst DAYS = 86400;\nconst assets = {\n  ETH: {\n    name: 'ETH',\n    decimals: 18,\n  },\n  BTC: {\n    name: 'BTC',\n    decimals: 8,\n  }\n}\n\nclass Permissions extends React.Component<any, any> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: null,\n      success: false,\n      loading: false,\n      asset: assets.ETH,\n      timeMultiplier: HOURS, // conversion of window to seconds\n      value: 0,\n      window: 0,\n    }\n\n    this.submit = this.submit.bind(this);\n    this.updateAsset = this.updateAsset.bind(this);\n    this.updateTimeMultiplier = this.updateTimeMultiplier.bind(this);\n    this.updateValue = this.updateValue.bind(this);\n    this.updateWindow = this.updateWindow.bind(this);\n  }\n\n  updateAsset(x) {\n    this.setState({ asset: assets[x.key]})\n  }\n\n  updateTimeMultiplier(x) {\n    this.setState({ timeMultiplier: x })\n  }\n\n  updateWindow(evt) {\n    const x = evt.target.value\n    if (!isNaN(parseFloat(x))) {\n      let s = parseFloat(x);\n      if (x[x.length-1] === '.')\n      //@ts-expect-error\n        s += '.';\n      this.setState({ window: s })\n    }\n    else if (x === '')\n      this.setState({ window: '0' })\n  }\n\n  updateValue(evt) {\n    let x = evt.target.value\n    if (!isNaN(parseFloat(x))) {\n      if (x.length > 1 && x[0] === '0' && x[1] !== '.')\n        x = x.slice(1);\n      this.setState({ value: x })\n    }\n    else if (x === '')\n      this.setState({ value: '0' })\n  }\n\n  submit() {\n    this.setState({ loading: true, error: null, success: false })\n    const req = {\n      currency: this.state.asset.name,\n      decimals: this.state.asset.decimals,\n      timeWindow: Math.floor(parseFloat(this.state.window) * this.state.timeMultiplier),\n      limit: 0,\n      asset: null,\n    };\n    const value = new BN(this.state.value);\n    const decimals = new BN(this.state.asset.decimals);\n    const power = new BN('10').pow(decimals);\n    let limitStr = value.multipliedBy(power).toString(16)\n    if (limitStr.length % 2 > 0)\n      limitStr = `0${limitStr}`;\n    //@ts-expect-error\n    req.limit = `0x${limitStr}`;\n    this.props.session.addPermissionV0(req, (err) => {\n      if (err) {\n        this.setState({ error: err.toString(), success: false, loading: false })\n      } else {\n        this.setState({ error: null, success: true, loading: false })\n      }\n    })\n  }\n\n  renderBanner() {\n    if (this.state.error) {\n      return (\n        <Alert\n          message=\"Error\"\n          description={this.state.error}\n          type=\"error\"\n          closable\n          onClose={() => { this.setState({ error: null })}}\n        />\n      )\n    } else if (this.state.loading) {\n      return (\n        <div>\n          <Spin indicator={(<LoadingOutlined/>)}/>\n          <br/>\n        </div>\n      )\n    } else if (this.state.success) {\n      return (\n        <Alert \n          type=\"success\"\n          message=\"Success\"\n          description=\"Successfully added permission to Lattice.\"\n        />\n      )\n    }\n  }\n\n  renderCard() {\n    const timeMultiplierSelect = (\n      <Select defaultValue={HOURS} onChange={this.updateTimeMultiplier}>\n        <Select.Option value={HOURS}>hours</Select.Option>\n        <Select.Option value={DAYS}>days</Select.Option>\n      </Select>\n    )\n\n    const currencyMenu = (\n      <Menu onClick={this.updateAsset}>\n        {Object.keys(assets).map((key) => {\n          return (\n            <Menu.Item key={key}>{key}</Menu.Item>\n          )\n        })}\n      </Menu>\n    );\n\n    return (\n      <div>\n        <p>\n          You can set spending limits for ETH and BTC. If you make a request from this web wallet that is under your\n          spending limit, your Lattice will auto-sign the transaction. Note that this currently only works for simple \n          ETH and BTC transfers.&nbsp;\n           <a className='lattice-a'\n              href={constants.PERMISSIONS_HELP_LINK}\n              target='_blank'\n              rel='noopener noreferrer'\n          >\n            (More info)\n          </a>        \n        </p>\n        <br/>\n        <i>This is a feature prototype. In the future, GridPlus intends to expand this functionality\n        to other assets and more general contract interactions.</i>\n        <br/><br/>\n        <p><b>Currency:</b></p>\n        <Row>\n          <Col span={12} offset={6}>\n            <Dropdown overlay={currencyMenu}>\n              <Button>{this.state.asset.name}</Button>\n            </Dropdown>\n          </Col>\n        </Row>\n        <br/>\n        <p><b>Spending Limit:</b></p>\n        <Row>\n          <Col span={12} offset={6}>\n            <Input type=\"text\"\n                  id=\"permission-value\" \n                  value={this.state.value} \n                  onChange={this.updateValue.bind(this)}\n            />\n          </Col>\n        </Row>\n        <br/>\n        <p><b>Reset Every:</b></p>\n         <Row>\n          <Col span={12} offset={6}>\n            <Input type=\"text\"\n                  id=\"permission-window\"\n                  addonAfter={timeMultiplierSelect}\n                  value={this.state.window} \n                  onChange={this.updateWindow.bind(this)}\n            />\n          </Col>\n        </Row>\n        <br/>\n        <Button type=\"primary\" onClick={this.submit}>\n          Set Limit\n        </Button>\n      </div>\n    )\n  }\n\n  render() {\n    const content = (\n      <center>\n        {this.renderBanner()}\n        <Card title={<div>\n          <h3>Spending Limits (Beta)&nbsp;\n            <a  className='lattice-a'\n                href={constants.PERMISSIONS_HELP_LINK}\n                target='_blank'\n                rel='noopener noreferrer'\n            >\n              <QuestionCircleOutlined/>\n            </a>\n          </h3>\n        </div>} bordered={true}>\n          {this.renderCard()}\n        </Card>\n      </center>      \n    )\n    return (\n      <PageContent content={content} isMobile={this.props.isMobile}/>\n    )\n  }\n}\n\nexport default Permissions","import React from 'react';\nimport 'antd/dist/antd.dark.css'\nimport { Button, Card, Checkbox, Col, Collapse, Input, Radio, Row, Space, Table } from 'antd'\nimport { WarningOutlined } from '@ant-design/icons';\nimport { PageContent } from './index'\nimport './styles.css'\nimport omit from \"lodash/omit\"\nimport { constants, getBtcPurpose } from '../util/helpers';\nimport localStorage from '../util/localStorage';\n\nclass Settings extends React.Component<any, any> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      settings: localStorage.getSettings(),\n      keyring: localStorage.getKeyring(),\n    }\n    this.getBtcPurposeName = this.getBtcPurposeName.bind(this)\n  }\n\n\n  submit() {\n    // Save the settings to localStorage\n    localStorage.setSettings(this.state.settings)\n    // Reload the page for the changes to take effect\n    window.location.reload();\n  }\n\n  updateUseCustomEndpoint(value) {\n    const settings = this.state.settings;\n    if (value !== true) {\n      // Reset the custom endpoint if this value is false\n      settings.customEndpoint = '';\n    }\n    this.setState({ settings });\n  }\n\n  updateCustomEndpoint(evt) {\n    const settings = this.state.settings;\n    settings.customEndpoint = evt.target.value;\n    this.setState({ settings });\n  }\n\n  updateUseDevLattice(evt) {\n    const settings = this.state.settings;\n    settings.devLattice = evt.target.checked\n    this.setState({ settings }, this.submit)\n  }\n\n  removeKeyring ({ name }) {\n    localStorage.removeKeyringItem(name)\n    this.setState({ keyring: omit(this.state.keyring, name) })\n  }\n\n  resetState() {\n    localStorage.removeRootStore()\n    window.location.reload();\n  }\n\n  renderCustomEndpointSetting() {\n    const { customEndpoint='' } = this.state.settings;\n    return (\n      <Card>\n        <Row justify='center'>\n          <Col span={20}>\n            <h3>Connection Endpoint:</h3>\n            <p>\n              If you wish to route messages and connections through your own endpoint, you may specify it here.&nbsp;\n              Otherwise leave blank.&nbsp; See&nbsp;\n              <a  href=\"https://github.com/GridPlus/lattice-connect\"\n                  className='lattice-a'\n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\">\n                this\n              </a> for more information.\n            </p>\n            <div>\n              <Input  placeholder=\"host:port\" \n                      defaultValue={customEndpoint} \n                      onChange={this.updateCustomEndpoint.bind(this)}/>\n            </div>\n          </Col>\n        </Row>\n      </Card>\n    )\n  }\n\n  handleChangeBitcoinVersionSetting(evt) {\n    const settings = this.state.settings;\n    settings.btcPurpose = parseInt(evt.target.value);\n    this.setState({ settings }, this.submit)\n  }\n\n  getBtcPurposeName() {\n    const purpose = this.state.settings.btcPurpose ?\n                    this.state.settings.btcPurpose :\n                    getBtcPurpose();\n    if (purpose === constants.BTC_PURPOSE_NONE) {\n      return constants.BTC_PURPOSE_NONE_STR;\n    } else if (purpose === constants.BTC_PURPOSE_LEGACY) {\n      return constants.BTC_PURPOSE_LEGACY_STR\n    } else if (purpose === constants.BTC_PURPOSE_WRAPPED_SEGWIT) {\n      return constants.BTC_PURPOSE_WRAPPED_SEGWIT_STR\n    } else if (purpose === constants.BTC_PURPOSE_SEGWIT) {\n      return constants.BTC_PURPOSE_SEGWIT_STR;\n    } else {\n      return 'Error finding BTC version'\n    }\n  }\n\n  renderBitcoinVersionSetting() {\n    // NOTE: Firmware does not yet support segwit addresses\n    // TODO: Uncomment this when firmware is updated\n    const purpose = getBtcPurpose() || constants.BTC_PURPOSE_NONE;\n    return (\n      <Card>\n        <h4>Bitcoin Wallet Type</h4>\n        <Radio.Group  onChange={this.handleChangeBitcoinVersionSetting.bind(this)}\n                      defaultValue={purpose}>\n          <Space direction=\"vertical\">\n            <Radio value={constants.BTC_PURPOSE_NONE}>\n              Hide BTC Wallet\n            </Radio>\n            {/* <Radio value={constants.BTC_PURPOSE_SEGWIT}>\n              {constants.BTC_PURPOSE_SEGWIT_STR}\n            </Radio> */}\n            <Radio value={constants.BTC_PURPOSE_WRAPPED_SEGWIT}>\n              {constants.BTC_PURPOSE_WRAPPED_SEGWIT_STR}\n            </Radio>\n            {/* Don't uncomment this until segwit support is released\n            <Radio value={constants.BTC_PURPOSE_LEGACY}>\n              {constants.BTC_PURPOSE_LEGACY_STR}\n            </Radio> */}\n          </Space>\n        </Radio.Group>\n      </Card>\n    )\n  }\n\n  renderDevLatticeSetting() {\n    const { devLattice } = this.state.settings;\n    return (\n      <Card>\n        <h4>Debug Settings</h4>\n        <Row justify='center' style={{ margin: '10px 0 0 0'}}>\n          <Button type=\"link\" onClick={this.resetState} className='warning-a'>\n          <WarningOutlined/>&nbsp;Reset App State\n        </Button>\n        </Row>\n        <Row justify='center' style={{ margin: '20px 0 0 0'}}>\n          <Checkbox onChange={this.updateUseDevLattice.bind(this)} checked={devLattice}>\n            Using Dev Lattice\n          </Checkbox>\n        </Row>\n      </Card>\n    )\n  }\n\n  renderKeyringsSetting() {\n    const keyring = localStorage.getKeyring()\n    const cols = [\n      { \n        title: 'App Name', \n        dataIndex: 'name', \n        key: 'name'\n      }, \n      { \n        title: 'Action', \n        dataIndex: 'action', \n        key: 'action',\n        render: (text, record) => (\n          <Button type=\"link\" onClick={() => {this.removeKeyring(record)}}>Forget</Button>\n        ) \n      }\n    ]\n    const data: any[] = [];\n    Object.keys(keyring)\n      .sort((a, b) => { return a.toLowerCase() > b.toLowerCase() ? 1 : -1 })\n      .forEach((name) => { data.push({ name }) })\n    return (\n      <Card>\n        <Row justify='center'>\n          <Col span={20}>\n            <h3>Third Party Connections</h3>\n            <p>\n              Manage connections to your Lattice. Third party apps should be listed here if they are connected to your device.\n            </p>\n            <Collapse>\n              {/* @ts-expect-error */}\n              <Collapse.Panel header={`Connections List (${data.length})`}>\n                <Table dataSource={data} columns={cols}/>\n              </Collapse.Panel>\n            </Collapse>\n          </Col>\n        </Row>\n      </Card>\n    )\n  }\n\n  renderCard() {\n    return (\n      <div>\n        {this.renderKeyringsSetting()}\n        {this.renderCustomEndpointSetting()}\n        {this.renderBitcoinVersionSetting()}\n        {this.renderDevLatticeSetting()}\n        <br/>\n        <Button type=\"primary\" onClick={this.submit.bind(this)}>\n          Update and Reload\n        </Button>\n      </div>\n    )\n  }\n\n  render() {\n    const content = (\n      <center>\n        <Card title={'Settings'} bordered={true}>\n          {this.renderCard()}\n        </Card>\n      </center>      \n    )\n    if (this.props.inModal)\n      return (<center>{this.renderCard()}</center>);\n    return (\n      <PageContent content={content} isMobile={this.props.isMobile}/>\n    )\n  }\n}\n\nexport default Settings","const Buffer = require('buffer/').Buffer\nconst { validateBtcAddr } = require('./helpers');\n\nexport const allChecks = {\n  'ETH': {\n    full: checkEth,\n    recipient: checkEthRecipient,\n    value: checkNumericValue,\n  },\n  'BTC': {\n    full: checkBtc,\n    recipient: validateBtcAddr,\n    value: checkNumericValue,\n  }\n}\n\n// Checks for Ethereum transfers (ETH or token)\nfunction checkEth(data) {\n  return fullCheck(data, checkEthRecipient);\n}\n\n// Checks for Bitcoin transfers\nfunction checkBtc(data) {\n  return fullCheck(data, validateBtcAddr);\n}\n\n// Perform a check on the recipient and value\n// @returns bool -- true if params are both valid\nfunction fullCheck(data, recipientCheck) {\n  return true === recipientCheck(data.recipient) && true === checkNumericValue(data.value);\n} \n\nfunction checkEthRecipient(recipient) {\n  if (recipient === '') return null;\n  try {\n    // Make sure there is a 0x prefix\n    const isPrefixed = recipient.slice(0, 2) === '0x';\n    // Check that the address contains exactly 20 hex bytes.\n    // If any of the data is non-hex, the length will be shorter\n    const correctLength = Buffer.from(recipient.slice(2), 'hex').length === 20;\n    return isPrefixed === true && correctLength === true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction checkNumericValue(value) {\n  if (value === '') return false;\n  try {\n    const num = Number(value);\n    return !isNaN(num) && num >= 0;\n  } catch (e) {\n    return false;\n  }\n}\n","import { MinusSquareFilled, PlusOutlined } from \"@ant-design/icons\";\nimport { Alert, Button, Form, Input, Modal, Space } from \"antd\";\nimport _ from \"lodash\";\nimport React, { useState } from \"react\";\n\nconst ADDRESS_RECORD_TYPE = 0;\nconst keyIsDuplicatedErrorMessage =\n  \"You already have a tag with this address on your device.\";\nconst valIsDuplicatedErrorMessage =\n  \"You already have a tag with this name on your device.\";\nconst validAddressRegex = /^0x[a-fA-F0-9]{40}$/;\n\n/** @typedef {{ key: string, val: string }} Record */\n\n/**\n * @name AddAddressesButton\n * @param {Object} props\n * @param {Record[]} props.records\n * @param {Object} props.session\n * @param {(records: Record[]) => void} props.addToRecordsInState\n */\nexport const AddAddressesButton = ({\n  records,\n  session,\n  addToRecordsInState,\n}) => {\n  const [form] = Form.useForm();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const resetState = () => {\n    form.resetFields();\n    setIsModalVisible(false);\n    setError(null);\n    setIsLoading(false);\n  };\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const hideModal = () => {\n    resetState();\n  };\n\n  const handleCancel = () => {\n    hideModal();\n  };\n\n  const onFinish = () => {\n    form.validateFields().then(({ recordsToAdd }) => {\n      setIsLoading(true);\n      // Transform recordsToAdd data into { key: val } for SDK\n      const records = _.chain(recordsToAdd)\n        .keyBy(\"key\")\n        .mapValues(\"val\")\n        .value();\n      const opts = {\n        caseSensitive: false,\n        type: ADDRESS_RECORD_TYPE,\n        records,\n      };\n      session.client.addKvRecords(opts, (err) => {\n        setIsLoading(false);\n        if (err) return setError(err);\n        addToRecordsInState(recordsToAdd);\n        resetState();\n      });\n    });\n  };\n\n  const onFinishFailed = () => {\n    setError(\"Unable to submit. Fix errors in form and try again.\");\n  };\n\n  const onFieldsChange = () => {\n    setError(null);\n  };\n\n  return (\n    <>\n      <Button type=\"ghost\" onClick={showModal} icon={<PlusOutlined />}>\n        Add\n      </Button>\n      <Modal\n        title=\"Add Address Tags\"\n        visible={isModalVisible}\n        maskClosable={false}\n        onOk={form.submit}\n        onCancel={handleCancel}\n        footer={[\n          <Button type=\"link\" onClick={handleCancel} key=\"cancel\">\n            Cancel\n          </Button>,\n          <Button\n            type=\"primary\"\n            loading={isLoading}\n            onClick={form.submit}\n            key=\"add\"\n          >\n            Add\n          </Button>,\n        ]}\n      >\n        <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n          {error ? (\n            <Alert description={error} type=\"error\" style={{ width: \"100%\" }} />\n          ) : null}\n          <Form\n            form={form}\n            name=\"formData\"\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            onFieldsChange={onFieldsChange}\n            autoComplete=\"off\"\n            preserve={false}\n            layout=\"vertical\"\n          >\n            <Form.List\n              name=\"recordsToAdd\"\n              initialValue={[{ key: null, val: null }]}\n            >\n              {(fields, { add, remove }) => (\n                <>\n                  {fields.map(({ key, name, ...restField }) => (\n                    <div\n                      key={`${name}-inputs`}\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        marginBottom: \"1em\",\n                        width: \"100%\",\n                      }}\n                    >\n                      <div\n                        style={{\n                          display: \"flex\",\n                          flexDirection: \"column\",\n                          flexGrow: 1,\n                        }}\n                      >\n                        <Form.Item\n                          {...restField}\n                          name={[name, \"key\"]}\n                          validateTrigger={[\"onChange\", \"onBlur\"]}\n                          rules={[\n                            { required: true, message: \"Address is required.\" },\n                            {\n                              pattern: validAddressRegex,\n                              message: \"Must be a valid address.\",\n                              validateTrigger: \"onBlur\",\n                            },\n                            {\n                              validator: (rule, key) => {\n                                return records.some((r) => r.key === key)\n                                  ? Promise.reject(\n                                      new Error(keyIsDuplicatedErrorMessage)\n                                    )\n                                  : Promise.resolve();\n                              },\n                              validateTrigger: [\"onChange\", \"onBlur\"],\n                            },\n                          ]}\n                        >\n                          <Input\n                            addonBefore={\"Address\"}\n                            data-testid={`${name}-address-input`}\n                          />\n                        </Form.Item>\n                        <Form.Item\n                          {...restField}\n                          name={[name, \"val\"]}\n                          validateTrigger={[\"onChange\", \"onBlur\"]}\n                          rules={[\n                            { required: true, message: \"Name is required\" },\n                            {\n                              validator: (rule, val) => {\n                                return records.some((r) => r.val === val)\n                                  ? Promise.reject(\n                                      new Error(valIsDuplicatedErrorMessage)\n                                    )\n                                  : Promise.resolve();\n                              },\n                              validateTrigger: [\"onChange\", \"onBlur\"],\n                            },\n                          ]}\n                        >\n                          <Input\n                            addonBefore={\"Name\"}\n                            data-testid={`${name}-name-input`}\n                          />\n                        </Form.Item>\n                      </div>\n                      {name > 0 ? (\n                        <Button\n                          type=\"text\"\n                          icon={<MinusSquareFilled />}\n                          disabled={isLoading}\n                          style={{\n                            height: \"auto\",\n                            marginLeft: \"1em\",\n                            marginBottom: \"1.2em\",\n                          }}\n                          onClick={() => remove(name)}\n                        />\n                      ) : null}\n                    </div>\n                  ))}\n                  <Form.Item>\n                    <Button\n                      type=\"dashed\"\n                      block\n                      icon={<PlusOutlined />}\n                      disabled={isLoading}\n                      onClick={add}\n                    >\n                      Add Another Address Tag\n                    </Button>\n                  </Form.Item>\n                </>\n              )}\n            </Form.List>\n          </Form>\n        </Space>\n      </Modal>\n    </>\n  );\n};\n","import { LoadingOutlined, SyncOutlined } from \"@ant-design/icons\";\nimport {\n  Alert,\n  Button,\n  Card,\n  Checkbox,\n  Col,\n  Input,\n  Row,\n  Spin,\n  Table,\n} from \"antd\";\nimport \"antd/dist/antd.dark.css\";\nimport differenceBy from \"lodash/differenceBy\";\nimport unionBy from \"lodash/unionBy\";\nimport React from \"react\";\nimport { allChecks } from \"../util/sendChecks\";\nimport { AddAddressesButton } from \"./AddAddressesButton\";\nimport { PageContent } from \"./index\";\n\nconst RECORDS_PER_PAGE = 10;\nconst MAX_RECORD_LEN = 63; // 63 characters max for both key and vlaue\n\nclass KVFiles extends React.Component<any, any> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      page: 0,\n      totalRecords: 0,\n      records: [],\n      error: null,\n      retryFunc: null,\n      loading: false,\n      isAdding: false,\n      recordToAdd: {\n        key: null,\n        val: null,\n      },\n    };\n\n    this.updateAddKey = this.updateAddKey.bind(this);\n    this.updateAddVal = this.updateAddVal.bind(this);\n    this.addToRecordsInState = this.addToRecordsInState.bind(this);\n    this.fetchRecords = this.fetchRecords.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchRecords();\n  }\n\n  updateAddKey(evt) {\n    const recordToAdd = JSON.parse(JSON.stringify(this.state.recordToAdd));\n    recordToAdd.key = evt.target.value;\n    this.setState({ recordToAdd });\n  }\n\n  updateAddVal(evt) {\n    const recordToAdd = JSON.parse(JSON.stringify(this.state.recordToAdd));\n    recordToAdd.val = evt.target.value;\n    this.setState({ recordToAdd });\n  }\n\n  recordIsChecked(id) {\n    let isChecked = false;\n    this.state.records.forEach((_record) => {\n      if (_record.id === id) {\n        isChecked = _record.isChecked === true;\n      }\n    });\n    return isChecked;\n  }\n\n  changeRecordChecked(id) {\n    const records = JSON.parse(JSON.stringify(this.state.records));\n    if (!records) return;\n    for (let i = 0; i < records.length; i++) {\n      if (records[i].id === id) {\n        records[i].isChecked = records[i].isChecked === true ? false : true;\n        this.setState({ records });\n        return;\n      }\n    }\n  }\n\n  getNumSelected() {\n    let selected = 0;\n    this.state.records.forEach((record) => {\n      if (record.isChecked) selected += 1;\n    });\n    return selected;\n  }\n\n  addToRecordsInState(recordsToAdd) {\n    // Combines passed in array of records and records in state by comparing ids\n    this.setState({ records: unionBy(this.state.records, recordsToAdd, \"id\") });\n  }\n\n  removeFromRecordsInState(recordsToRemove) {\n    // Removes passed in array of records from records in state by comparing ids\n    this.setState({\n      records: differenceBy(this.state.records, recordsToRemove, \"id\"),\n    });\n  }\n\n  fetchRecords(page = 0, retries = 1) {\n    const opts = {\n      start: page * RECORDS_PER_PAGE,\n      n: RECORDS_PER_PAGE,\n    };\n    // Sanity check to make sure we didn't overrun the current page\n    if (opts.start > this.state.records.length) {\n      return this.setState({ error: \"Mismatch fetching records.\" });\n    }\n    this.setState({ loading: true });\n    this.props.session.client.getKvRecords(opts, (err, res) => {\n      if (err) {\n        if (retries === 0) {\n          return this.setState({\n            error: err,\n            retryFunc: this.fetchRecords,\n            loading: false,\n          });\n        } else {\n          return this.fetchRecords(page, retries - 1);\n        }\n      } else if (res) {\n        this.addToRecordsInState(res.records);\n        const recordsToFetch = res.total - this.state.records.length;\n        if (recordsToFetch > 0) {\n          return this.fetchRecords(page + 1);\n        } else {\n          return this.setState({ loading: false, error: null });\n        }\n      }\n      return this.setState({ loading: false, error: \"Failed to fetch tags\" });\n    });\n  }\n\n  removeSelected() {\n    const recordsToRemove = this.state.records.filter((r) => r.isChecked);\n    const ids = recordsToRemove.map((r) => r.id);\n    if (ids.length === 0) return;\n    this.setState({ loading: true });\n    this.props.session.client.removeKvRecords({ ids }, (err) => {\n      if (err) return this.setState({ error: err, loading: false });\n      this.removeFromRecordsInState(recordsToRemove);\n      this.setState({ error: null, loading: false });\n    });\n  }\n\n  renderError() {\n    if (this.state.error) {\n      return (\n        <div>\n          <Alert\n            message=\"Error\"\n            description={this.state.error}\n            action={\n              this.state.retryFunc ? (\n                <Button\n                  //@ts-expect-error\n                  type=\"danger\"\n                  onClick={() => {\n                    this.state.retryFunc();\n                    this.setState({ retryFunc: null, err: null });\n                  }}\n                >\n                  Retry\n                </Button>\n              ) : null\n            }\n            type=\"error\"\n            closable\n            onClose={() => {\n              this.setState({ error: null });\n            }}\n          />\n        </div>\n      );\n    }\n  }\n\n  renderLoading() {\n    if (this.state.loading) {\n      return (\n        <center>\n          <Spin tip=\"Loading...\" indicator={<LoadingOutlined />} />\n        </center>\n      );\n    }\n  }\n\n  shouldDisplaySend() {\n    const key = this.state.recordToAdd.key;\n    const val = this.state.recordToAdd.val;\n    if (!key || !val) return false;\n    const isValidAddress =\n      allChecks.ETH.recipient(key) || allChecks.BTC.recipient(key);\n    const isValidLen =\n      key.length < MAX_RECORD_LEN && val.length < MAX_RECORD_LEN;\n    return isValidAddress && isValidLen;\n  }\n\n  renderAddCard() {\n    const extraLink = (\n      <Button\n        type=\"ghost\"\n        onClick={() => {\n          this.setState({ isAdding: false });\n        }}\n      >\n        View Addresses\n      </Button>\n    );\n    return (\n      <Card title={\"Save Address Tag\"} extra={extraLink} bordered={true}>\n        {this.state.loading ? (\n          this.renderLoading()\n        ) : (\n          <center>\n            <Row>\n              <Col span={18} offset={3}>\n                <Input placeholder={\"Address\"} onChange={this.updateAddKey} />\n              </Col>\n            </Row>\n            <br />\n            <Row>\n              <Col span={18} offset={3}>\n                <Input\n                  placeholder={\"Display Name\"}\n                  onChange={this.updateAddVal}\n                />\n              </Col>\n            </Row>\n            <br />\n            {this.shouldDisplaySend() ? (\n              //@ts-expect-error\n              <Button type=\"primary\" onClick={this.addRecord}>\n                Save\n              </Button>\n            ) : (\n              <Button type=\"primary\" disabled>\n                Save\n              </Button>\n            )}\n          </center>\n        )}\n      </Card>\n    );\n  }\n\n  renderDisplayCard() {\n    const displayPage = this.state.page + 1;\n    const extra = [\n      <Button\n        type=\"link\"\n        icon={<SyncOutlined />}\n        disabled={this.state.loading}\n        onClick={() => {\n          this.fetchRecords();\n        }}\n      >\n        Sync\n      </Button>,\n      <AddAddressesButton\n        records={this.state.records}\n        session={this.props.session}\n        addToRecordsInState={this.addToRecordsInState}\n      />,\n    ];\n    return (\n      <Card title={\"Saved Addresses\"} extra={extra} bordered={true}>\n        {this.state.loading ? (\n          this.renderLoading()\n        ) : (\n          <div>\n            <Table\n              dataSource={this.state.records}\n              tableLayout=\"fixed\"\n              pagination={{\n                position: [\"bottomCenter\"],\n                pageSize: RECORDS_PER_PAGE,\n                defaultCurrent: displayPage,\n                showSizeChanger: false,\n              }}\n            >\n              <Table.Column\n                title=\"Name\"\n                dataIndex=\"val\"\n                key=\"val\"\n                defaultSortOrder=\"ascend\"\n                sorter={(a: any, b: any) => a.val.localeCompare(b.val)}\n                render={(val) => (\n                  <div>\n                    <b>{val}</b>\n                  </div>\n                )}\n              />\n              <Table.Column\n                title=\"Address\"\n                dataIndex=\"key\"\n                key=\"key\"\n                render={(key) => (\n                  <a\n                    className=\"lattice-a\"\n                    href={`https://etherscan.io/address/${key}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {`${key.slice(0, 10)}...${key.slice(\n                      key.length - 8,\n                      key.length\n                    )}`}\n                  </a>\n                )}\n              />\n              <Table.Column\n                title=\"\"\n                dataIndex=\"id\"\n                key=\"id\"\n                width={50}\n                render={(id) => (\n                  <Checkbox\n                    checked={this.recordIsChecked(id)}\n                    onChange={() => {\n                      this.changeRecordChecked(id);\n                    }}\n                    key={id}\n                  />\n                )}\n              />\n            </Table>\n            <Row justify=\"center\">\n              {this.getNumSelected() > 0 ? (\n                <Button\n                  //@ts-expect-error\n                  type=\"danger\"\n                  onClick={this.removeSelected.bind(this)}\n                  style={{ margin: \"5px 0 0 0\" }}\n                >\n                  Remove Selected\n                </Button>\n              ) : null}\n            </Row>\n          </div>\n        )}\n      </Card>\n    );\n  }\n\n  renderCard() {\n    if (this.state.isAdding) {\n      return this.renderAddCard();\n    } else {\n      return this.renderDisplayCard();\n    }\n  }\n\n  render() {\n    const content = (\n      <div>\n        {this.renderError()}\n        {this.renderCard()}\n      </div>\n    );\n    return <PageContent content={content} isMobile={this.props.isMobile} />;\n  }\n}\n\nexport default KVFiles;\n","import React from 'react';\nimport 'antd/dist/antd.dark.css'\nimport { AuditOutlined, DesktopOutlined, TagsOutlined } from '@ant-design/icons';\nimport { PageContent } from './index'\nimport { constants } from '../util/helpers';\nimport { Card, Col, Divider, Row } from 'antd'\n\nclass Landing extends React.Component<any, any> {\n  renderCard() {\n    return (\n      <Card bordered={true} style={{textAlign: \"center\"}}>\n        <Row justify='center'>\n          <Col span={20}>\n            <p className='lattice-h1'><DesktopOutlined/>&nbsp;Lattice Manager</p>\n            <p className='lattice-h4'>\n              Manage secure data on your Lattice hardware wallet device for a better web3 experience:\n            </p>\n            <br/>\n          </Col>\n        </Row>\n        <Row justify='center'>\n          <Col span={20}>\n            <p>\n              <a  href={constants.TAGS_HELP_LINK}\n                  className='lattice-a'\n                  target='_blank'\n                  rel='noopener noreferrer'\n              >\n                <TagsOutlined/>&nbsp;\n                <b>Address Tags</b>&nbsp;\n              </a>\n              <br/>\n              <i>Give names to your favorite contracts or recipient addresses.</i>\n            </p>\n            <br/>\n          </Col>\n        </Row>\n        <Row justify='center'>\n          <Col span={20}>\n            <p>\n              <a  href={constants.CONTRACTS_HELP_LINK}\n                  className='lattice-a'\n                  target='_blank'\n                  rel='noopener noreferrer'\n              >\n                <AuditOutlined/>&nbsp;\n                <b>Contracts</b>&nbsp;\n              </a>\n              <br/>\n              <i>Add your favorite smart contracts for better transaction request readability.</i>\n            </p>\n          </Col>\n        </Row>\n        <Divider/>\n        <img\n          src=\"lattice-landing.jpg\"\n          style={{ maxHeight: \"500px\", maxWidth: \"100%\" }}\n          alt=\"lattice-one-device\"\n        />\n      </Card>\n    )\n  }\n\n\n  render() {\n    return (\n      <PageContent content={this.renderCard()} isMobile={this.props.isMobile}/>\n    )\n  }\n}\n\nexport default Landing","import React from 'react';\nimport 'antd/dist/antd.dark.css'\nimport { Button, Card, Spin } from 'antd'\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { PageContent } from './index'\n\nclass Loading extends React.Component<any, any> {\n  render() {\n    const content = (\n      <center>\n        <Card title=\"Loading\" bordered={true}>\n          {this.props.spin !== false ? (\n            <Spin indicator={<LoadingOutlined/>} />\n          ) : null}\n          <p>{this.props.msg ? this.props.msg : \"Waiting for data from your Lattice\"}</p>\n          {this.props.onCancel ? (\n            <Button type='link' onClick={this.props.onCancel}>\n              Cancel\n            </Button>\n          ) : null}\n        </Card>\n      </center>\n    )\n    return (\n      <PageContent content={content} isMobile={this.props.isMobile}/>\n    )\n  }\n}\n\nexport default Loading","import React from 'react';\nimport 'antd/dist/antd.dark.css'\nimport { Card, Button } from 'antd'\n\nclass Error extends React.Component<any, any> {\n  constructor(props) {\n    super(props);\n    this.keyPressListener = this.keyPressListener.bind(this);\n    this.submit = this.submit.bind(this)\n   }\n\n  componentDidMount() {\n    window.addEventListener('keypress', this.keyPressListener)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keypress', this.keyPressListener)\n  }\n\n  keyPressListener(e) {\n    if (e.key === 'Enter')\n      this.submit()\n  }\n\n  submit() {\n    this.props.retryCb()\n  }\n\n  render() {\n    return (\n      <center>\n        <Card title=\"Error\" bordered={true}>\n          <p>{this.props.msg}</p>\n          {this.props.retryCb ? (\n            <Button id=\"submitButton\"\n              //@ts-expect-error\n              onClick={this.submit} type=\"danger\">\n              {this.props.btnMsg || \"Retry\"}\n            </Button>\n          ): null}\n        </Card>\n      </center>\n    )\n  }\n}\n\nexport default Error","\nimport React from 'react';\nimport 'antd/dist/antd.dark.css'\nimport { Button, Avatar, Divider, Statistic, List, Row, Card, Tag} from 'antd';\nimport { \n  CaretLeftOutlined, CaretRightOutlined, ClockCircleOutlined, \n  ArrowDownOutlined, ArrowUpOutlined, ReloadOutlined\n} from '@ant-design/icons';\nimport { PageContent } from '../index'\nimport { constants } from '../../util/helpers'\n\nclass Wallet extends React.Component<any, any> {\n  componentDidMount() {\n    if (this.props.session) {\n      this.props.session.getBtcWalletData()\n    }\n  }\n\n  getInnerWidth() {\n    return document.getElementById('main-content-inner')?.offsetWidth;\n  }\n\n  // Make sure text doesn't overflow on smaller screens. We need to trim larger strings\n  ensureTrimmedText(text) {\n    if (!this.props.isMobile()) return text;\n    const maxChars = this.getInnerWidth() / 22;\n    if (text.length > maxChars) return `${text.slice(0, maxChars)}...`\n    return text;\n  }\n\n  // Render a transaction in a list\n  renderListItem(item) {\n    // Label to view transaction on explorer\n    const label = (\n      //@ts-expect-error\n      <div align={this.props.isMobile() ? \"left\" : \"right\"}>\n        {item.confirmed ? (\n          <p>\n            {item.incoming ? 'Received ' : 'Sent '}\n            {getDateDiffStr(item.timestamp)} ago\n          </p>) : null}\n        <Button size=\"small\" \n                href={`${constants.BTC_TX_BASE_URL}/${item.id}`} \n                target=\"_blank\"\n          >View</Button>\n      </div>\n    );\n    if (item.value === 0) {\n      // This is an internal transaction, meaning all spenders and recipients\n      // are addresses we control\n      return (\n        <List.Item key={item.hash}>\n          <List.Item.Meta avatar={<Avatar src={'/BTC.png'}/>}\n                          title='Internal Transaction'\n                          description='This transaction sender and recipient are your addresses.'\n          />\n          {label}\n        </List.Item>\n      )\n    }\n    // Information about the transaction\n    const title = `${item.value / Math.pow(10, 8)} BTC`\n    const subtitle = `\\t${this.ensureTrimmedText(item.recipient)}`;\n    const itemMeta = (\n      <List.Item.Meta avatar={<Avatar src={'/BTC.png'}/>}\n                      title={item.confirmed ? (\n                        <p>{`${title}`}</p>\n                      ) : (\n                        <p><i>{`${title}`}</i></p>\n                      )}\n                      description={item.confirmed ? (\n                        <p>\n                          {item.incoming ? (\n                            <ArrowDownOutlined/>\n                          ) : (\n                            <ArrowUpOutlined/>\n                          )}\n                          {`${subtitle}`}\n                        </p>\n                      ) : (\n                        <p>\n                          {item.incoming ? (\n                            <ArrowDownOutlined/>\n                          ) : (\n                            <ArrowUpOutlined/>\n                          )}\n                          <i>{`${subtitle}`}</i>\n                        </p>\n                      )}\n      />\n    )\n    if (this.props.isMobile()) {\n      return (\n        <List.Item key={item.hash}>\n          <Row justify='center'>{itemMeta}</Row>\n          <Row justify='center'>{label}</Row>\n        </List.Item>\n      )    \n    } else {\n      return(\n        <List.Item key={item.hash}>\n          {itemMeta}\n          {label}\n        </List.Item>\n      )\n    }\n  }\n\n  renderLastUpdatedTag() {\n    if (!this.props.session)\n      return;\n    const lastUpdated = this.props.session.lastFetchedBtcData;\n    if (!lastUpdated) {\n      return (\n        <Tag color={'red'}>Never</Tag>\n      )\n    }\n    //@ts-expect-error\n    const elapsedSec = Math.floor((new Date() - lastUpdated) / 1000);\n    let elapsed, timeType, color;\n    if (elapsedSec < 60) {\n      // Just display that it was updated \"seconds\" ago if we're under a minute\n      elapsed = '';\n      timeType = 'seconds';\n      color = 'green';\n    } else if (elapsedSec < 3600) {\n      // A couple minutes is fine, but more than 10 and there's probably a connectivity\n      // problem -- display orange warning tag\n      elapsed = Math.floor(elapsedSec / 60);\n      timeType = elapsed === 1 ? 'min' : 'mins';\n      color = 'green'\n    } else if (elapsedSec < 172800) {\n      // Less than a 2 days we display hours \n      elapsed = Math.floor(elapsedSec / 3600);\n      timeType = elapsed === 1 ? 'hour' : 'hours';\n      color = 'orange';\n    } else { \n      // Otherwise display days\n      elapsed = Math.floor(elapsedSec / 86400);\n      timeType = 'days';\n      color = 'red';\n    }\n    return (\n      <Tag color={color}>{`${elapsed} ${timeType} ago`}</Tag>\n    )\n  }\n\n  renderList() {\n    const txs = {\n      confirmed: this.props.session.getBtcTxs(),\n      pending: this.props.session.getBtcTxs(false),\n    }\n    return (\n      <div>\n        {txs.pending.length > 0 ? (\n          <Card title={<p><ClockCircleOutlined/> Pending</p>} \n                bordered={true}\n                style={{ margin: '0 0 30px 0'}}>\n            <List\n              itemLayout=\"horizontal\"\n              dataSource={txs.pending}\n              renderItem={item => (\n                this.renderListItem(item)\n              )}\n            />\n          </Card>\n        ): null}\n        <Card title=\"Transactions\" bordered={true}>\n          <List\n            itemLayout=\"horizontal\"\n            dataSource={txs.confirmed}\n            renderItem={item => (\n              this.renderListItem(item)\n            )}\n          />\n        </Card>\n      </div>\n    )\n  }\n\n  renderHeader() {\n    const btcBalance = this.props.session.getBtcBalance() / constants.SATS_TO_BTC;\n    const btcPrice = this.props.session.btcPrice;\n    return (\n      <div>\n        <Row justify='center' style={{margin: \"20px 0 0 0\"}}>\n            <Statistic title=\"Balance\" value={`${btcBalance} BTC`} />\n        </Row>\n        <Row justify='center'>\n          <Statistic title=\"USD Value\" value={btcBalance * btcPrice} precision={2} />\n        </Row>\n      </div>\n    )\n  }\n\n  renderPages() {\n    const page = this.props.session.getPage();\n    const txs = this.props.session.getBtcTxs();\n    return (\n      <center style={{margin: \"20px 0 0 0\"}}>\n        {page > 1 ? (\n          <Button onClick={() => {this.props.pageTurnCb(page-1)}}>\n            <CaretLeftOutlined/>\n          </Button>\n        ) : null}\n        {txs.length >= constants.PAGE_SIZE ? (\n          <Button onClick={() => { this.props.pageTurnCb(page+1)}}>\n            <CaretRightOutlined/>\n          </Button>\n        ): null}\n      </center>\n    )\n  }\n\n  renderStartCard() {\n    return (\n      <Card title={`BTC Wallet`} bordered={true}>\n        <center>\n          <p>You have not loaded any addresses yet.</p>\n          <Button size=\"large\" \n                  type=\"primary\" \n                  ghost \n                  onClick={() => {this.props.refreshData()}}\n          >\n            Start\n          </Button>\n        </center>\n      </Card>\n    )\n  }\n\n  renderContent() {\n    const lastUpdated = this.props.session.lastFetchedBtcData;\n    if (!lastUpdated) {\n      return this.renderStartCard();\n    }\n    return (\n      <div>\n        <Card title={`BTC Wallet`} bordered={true}>\n          <Row justify='center'>\n            Last Update&nbsp;{this.renderLastUpdatedTag()}\n            <Button size=\"small\" \n                    type=\"primary\" \n                    ghost \n                    onClick={() => {this.props.refreshData()}}\n            >\n              Refresh <ReloadOutlined/>\n            </Button>\n          </Row>\n          <Row justify='center' style={{margin: \"20px 0 0 0\"}}>\n            {this.renderHeader()}\n          </Row>\n        </Card>\n        <Divider/>\n        <div>\n          {this.renderList()}\n          {this.renderPages()}\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const content = (\n      <center>\n        {this.renderContent()}\n      </center>      \n    )\n    return (\n      <PageContent content={content} isMobile={this.props.isMobile}/>\n    )\n  }\n}\n\nexport default Wallet\n\n// Get a human readable, string representation of the difference\n// between two dates\nfunction getDateDiffStr(ts) {\n  const then = new Date(ts);\n  const now = new Date();\n  const min = 1000 * 60;\n  const hour = min * 60;\n  const day = hour * 24;\n  const week = day * 7;\n  const month = week * 4;\n  const year = month * 12;\n\n  //@ts-expect-error\n  const diff = now - then;\n\n  if (diff / min < 1) {\n    return 'seconds';\n  } else if (diff / hour < 1) {\n    return `${Math.floor(diff/min)} minutes`;\n  } else if (diff / day < 1) {\n    return `${Math.floor(diff/hour)} hours`;\n  } else if (diff / week < 1) {\n    return `${Math.floor(diff/day)} days`;\n  } else if (diff / month < 1) {\n    return `${Math.floor(diff/week)} weeks`;\n  } else if (diff / year < 1) {\n    return `${Math.floor(diff/month)} months`;\n  } else {\n    return `${Math.floor(diff/year)} years`\n  }\n\n}","import React from 'react';\nimport 'antd/dist/antd.dark.css'\nimport { Alert, Button, Card, Row, Input, InputNumber, Empty, Statistic, notification } from 'antd'\nimport { CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { PageContent } from '../index'\nimport { allChecks } from '../../util/sendChecks';\nimport { constants, buildBtcTxReq, getBtcNumTxBytes } from '../../util/helpers'\nimport '../styles.css'\nconst RECIPIENT_ID = \"recipient\";\nconst VALUE_ID = \"value\";\n\nclass Send extends React.Component<any, any> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      recipient: '',\n      value: null,\n      recipientCheck: null,\n      valueCheck: null,\n      error: null,\n      isLoading: false,\n      txHash: null,\n      btcFeeRate: constants.BTC_DEFAULT_FEE_RATE,\n      ensResolvedAddress: null,\n    }\n\n    this.handleENSResolution = this.handleENSResolution.bind(this);\n    this.renderBanner = this.renderBanner.bind(this);\n    this.renderSubmitButton = this.renderSubmitButton.bind(this);\n    this.renderValueLabel = this.renderValueLabel.bind(this);\n    this.submit = this.submit.bind(this);\n    this.buildBtcRequest = this.buildBtcRequest.bind(this);\n    this.updateBtcFeeRate = this.updateBtcFeeRate.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://blockstream.info/api/fee-estimates')\n    .then((response) => response.json())\n    .then((resp) => {\n      if (resp['1']) { // Expected confirmation in 1 block\n        this.setState({ btcFeeRate: Math.ceil(Number(resp['1'])) })\n      }\n      if (this.props.session) {\n        this.props.session.getBtcWalletData()\n      }\n    })\n    .catch((err) => {\n      console.error(`Error from fetching fee rates: ${err.toString()}`)\n    })\n  }\n\n  //========================================================\n  // STATE MANAGERS\n  //========================================================\n\n  handleENSResolution(err, address) {\n    if (err || address === null)\n      return this.setState({ recipientCheck: false, ensResolvedAddress: null })\n    // If we got an address, stash that under \"ensResolvedAddress\" so as to not\n    // overwrite the text in the display component.\n    return this.setState({ recipientCheck: true, ensResolvedAddress: address })\n  }\n\n  updateRecipient(evt) {\n    const val = evt.target.value;\n    const check = allChecks.BTC.recipient(val);\n    this.setState({ \n      recipient: val,\n      ensResolvedAddress: null,\n      recipientCheck: check, \n    });\n  }\n\n  checkValue(val) {\n    // Verify that it is smaller than the balance\n    const balance = this.props.session.getBtcBalance() / constants.SATS_TO_BTC;\n    if (val === '' || val === null || val === undefined)\n      return null;\n    return (Number(balance) >= Number(val));\n  }\n\n  updateValue(evt) {\n    let val = evt.target.value;\n    let numberVal = Number(val);\n    const isZeroPrefixed = val[0] === '0';\n    const isLessThanOne = isZeroPrefixed && val[1] === '.';\n    // Only update state if the value can be converted to a number!\n    if (val === '0') {\n      // Plain zero is fine\n      ;\n    } else if (!isNaN(numberVal)) {\n      // We want to save the string, as it may contain a period\n      // which is necessary for forming decimal numbers\n      // Because we will be saving the string and not the number,\n      // we should make sure we strip out leading zeros for numbers\n      // larger than zero (i.e. 0.4 is good, 01.4 is not)\n      if (isZeroPrefixed && !isLessThanOne) val = val.slice(1);\n    } else if (val === '.') {\n      // If the user is trying to make a decimal value <1, prefix\n      // with a 0\n      val = '0' + val;\n    } else {\n      return;\n    }\n    this.setState({ \n      value: val,\n      valueCheck: this.checkValue(val) \n    });\n  }\n\n  updateBtcFeeRate(value) {\n    this.setState({ btcFeeRate: value })\n  }\n\n  //========================================================\n  // TRANSACTION-RELATED BUILDERS AND HOOKS\n  //========================================================\n  buildBtcRequest() {\n    const req = buildBtcTxReq(this.state.recipient, \n                              this.state.value,\n                              this.props.session.btcUtxos, \n                              this.props.session.addresses['BTC'],  \n                              this.props.session.addresses['BTC_CHANGE'],\n                              this.state.btcFeeRate,\n                              this.state.value === this.calculateMaxValue());\n    if (req.error) {\n      this.setState({ error: req.error });\n      return null;\n    } else if (!req.data) {\n      this.setState({ error: 'Invalid response when building BTC transaction request. '});\n      return null;\n    }\n    return req;\n  }\n\n  submit() {\n    const req = this.buildBtcRequest();\n    if (req) {\n      notification.open({\n        message: \"Waiting for signature...\",\n        key: 'signNotification',\n        description: `We have sent the transaction to your Lattice for signing.\n                      After approval, the transaction will be broadcast.`,\n        duration: 0,\n      });\n      this.setState({ isLoading: true });\n      this.props.session.sign(req, (err, txHash) => {\n        notification.close('signNotification');\n        if (err) {\n          // Display an error banner\n          this.setState({ \n            error: err, \n            isLoading: false, \n            txHash: null \n          })\n        } else {\n          // Start watching this new tx hash for confirmation\n          this.setState({ \n            recipient: '',\n            recipientCheck: null,\n            value: null,\n            valueCheck: null,\n            txHash, \n            error: null, \n            isLoading: false \n          })\n        }\n      })\n    }\n  }\n\n  //========================================================\n  // HELPERS\n  //========================================================\n\n  getUrl() {\n    return `${constants.BTC_TX_BASE_URL}/${this.state.txHash}`;\n  }\n\n  //========================================================\n  // RENDERERS\n  //========================================================\n\n  renderValueLabelTitle() {\n    return (\n      <p style={{textAlign: 'left'}}>\n        <b>Value</b>\n        <Button type=\"link\"\n                onClick={() => { \n                  this.updateValue({ \n                    target: { \n                      value: this.calculateMaxValue(),\n                    } \n                  }) \n                }}>\n          Max\n        </Button>\n        {this.renderIcon(VALUE_ID)}\n      </p>\n    )\n  }\n\n  renderValueLabel() {\n    const input = (\n      <Input type=\"text\"\n              id={VALUE_ID} \n              value={this.state.value} \n              onChange={this.updateValue.bind(this)}\n      />\n    );\n    return (\n      <Row justify='center'>\n        {this.renderValueLabelTitle()}\n        {input}\n      </Row>\n    );\n  }\n\n  renderRecipientLabel() {\n    return (          \n      <Row justify='center'>  \n        <p style={{textAlign:'left'}}>\n          <b>Recipient</b>\n          &nbsp;&nbsp;&nbsp;{this.renderIcon(RECIPIENT_ID)}\n        </p>\n        <Input type=\"text\" \n                id={RECIPIENT_ID} \n                value={this.state.recipient} \n                onChange={this.updateRecipient.bind(this)}\n        />\n      </Row>\n    )\n  }\n\n  renderIcon(id) {\n    const name = `${id}Check`;\n    const isValid = this.state[name];\n    if (isValid === true) {\n      return (<CheckCircleOutlined style={{color: 'green'}}/>)\n    } else if (isValid === false) {\n      return (<CloseCircleOutlined style={{color: 'red'}}/>)\n    } else {\n      return;\n    }\n  }\n\n  renderBanner() {\n    if (this.state.error) {\n      return (\n        <Alert\n          message=\"Failed to Send Transaction\"\n          description={this.state.error}\n          type=\"error\"\n          closable\n          onClose={() => { this.setState({ error: null })}}\n        />\n      )\n    } else if (this.state.txHash) {\n      const desc = this.props.isMobile() ? (\n        <p>Transaction signed and broadcast successfully.&nbsp;\n        <a className='lattice-a' target='_blank' rel='noopener noreferrer' href={this.getUrl()}>View</a></p>\n      ) : (\n        <p>Your transaction was signed and broadcast successfully. \n        Your hash is: <a className='lattice-a' target='_blank' rel='noopener noreferrer' href={this.getUrl()}>\n          {this.state.txHash}\n        </a></p>\n      )\n      return (\n        <Alert\n          type=\"success\"\n          message=\"Success\"\n          description={desc}\n        />\n      )\n    } else {\n      return;\n    }\n  }\n\n  renderExtra() {\n    return (\n      <div>\n        <Row justify='center'>\n          <b><p>Fee (sat/byte):</p></b>\n        </Row>\n        <Row justify='center'>        \n          <InputNumber\n            min={1}\n            max={100}\n            onChange={this.updateBtcFeeRate}\n            value={this.state.btcFeeRate}\n          />\n        </Row>\n      </div>\n    )\n  }\n\n  calculateMaxValue() {\n    const balance = this.props.session.getBtcBalance();\n    const utxos = this.props.session.getBtcUtxos();\n    // To spend all BTC, get the size of all UTXOs and calculate the fee required\n    const txBytes = getBtcNumTxBytes(utxos.length);\n    const feeSat = Math.floor(this.state.btcFeeRate * txBytes);\n    // @ts-expect-error\n    return Math.max(((balance - feeSat) / constants.SATS_TO_BTC).toFixed(8), 0);\n  }\n\n  renderSubmitButton() {\n    // If all checks have passed, display the button\n    const isValidReq = (\n      (true === this.state.valueCheck) &&\n      (allChecks.BTC.full(this.state) || this.state.ensResolvedAddress !== null)\n    );\n\n    if (this.state.isLoading) {\n      return (\n        <Button type=\"primary\"\n                style={{ margin: '30px 0 0 0'}}\n                loading>\n          Waiting...\n        </Button>\n      )\n    } else if (isValidReq) {\n      return (\n        <Button type=\"primary\" \n                onClick={this.submit} \n                style={{ margin: '30px 0 0 0'}}>\n          Send\n        </Button>\n      )\n    } else {\n      return (\n        <Button type=\"primary\"\n                style={{ margin: '30px 0 0 0'}}\n                disabled>\n          Send\n        </Button>\n      )\n    }\n  }\n\n  renderBalance() {\n    let balance = this.props.session.getBtcBalance() / constants.SATS_TO_BTC;\n    return (\n      <Row justify='center' style={{margin: \"0 0 20px 0\"}}>\n        <Statistic title=\"Balance\" value={`${balance} BTC`} />\n      </Row>\n    )\n  }\n\n  renderCard() {\n    const hasAddressesSlot = this.props.session.addresses.BTC;\n    const hasAddresses =  hasAddressesSlot ? \n                          this.props.session.addresses.BTC.length > 0 : \n                          false;\n    if (hasAddresses) {\n      return (\n        <div>\n          {this.renderBalance()}\n          <div>\n            {this.renderRecipientLabel()}\n          </div>\n          <div style={{margin: \"20px 0 0 0\"}}>\n            {this.renderValueLabel()}\n          </div>\n          <div style={{margin: \"20px 0 0 0\"}}>\n            {this.renderExtra()}\n          </div>\n          {this.renderSubmitButton()}\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <p>No addresses found from your Lattice. If you have your wallet setup, please try logging out and reconnecting.</p>\n          <Empty image={Empty.PRESENTED_IMAGE_SIMPLE}/>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    const content = (\n      <center>\n        {this.renderBanner()}\n        <Card title={'Send BTC'} bordered={true}>\n          {this.renderCard()}\n        </Card>\n      </center>      \n    )\n    return (\n      <PageContent content={content} isMobile={this.props.isMobile}/>\n    )\n  }\n}\n\nexport default Send\n","import React from 'react';\nimport 'antd/dist/antd.dark.css'\nimport { Button, Card, Row, Input, Empty } from 'antd'\nimport { CopyOutlined } from '@ant-design/icons';\nimport { PageContent } from '../index'\nimport { validateBtcAddr } from '../../util/helpers'\nconst QRCode = require('qrcode.react');\nconst { Search, TextArea } = Input;\nconst SEARCH_ID = \"address-data\";\n\nclass Receive extends React.Component<any, any> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      address: null,\n      windowWidth: document.getElementById('main-content-inner')?.offsetWidth,\n    }\n\n    this.updateWidth = this.updateWidth.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateDisplayAddress();\n    if (this.props.session) {\n      this.props.session.getBtcWalletData()\n    }\n    window.addEventListener('resize', this.updateWidth);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWidth);\n  }\n\n  updateWidth() {\n    this.setState({ windowWidth:  document.getElementById('main-content-inner')?.offsetWidth });\n  }\n\n  updateDisplayAddress() {\n    const displayAddr = this.props.session.getBtcDisplayAddress();\n    if (displayAddr) this.setState({ address:  displayAddr });\n  }\n\n  copyAddress() {\n    const copy = document.getElementById(SEARCH_ID);\n    //@ts-expect-error\n    copy.select();\n    document.execCommand(\"copy\")\n  }\n\n\n  renderAddrBox() {\n    if (this.props.isMobile()) {\n      return (\n        <div>\n          <TextArea id={SEARCH_ID}\n                    value={this.state.address}\n                    autoSize={{minRows: 1, maxRows: 3}}\n                    style={{margin: \"30px 0 0 0\", \"textAlign\": \"center\"}}/>\n          <Button type=\"primary\"\n                  style={{margin: \"20px 0 0 0\"}}\n                  onClick={this.copyAddress}>\n            Copy <CopyOutlined/>\n          </Button>\n        </div>\n      )\n    } else {\n      return (\n         <Search type=\"text\" \n                  id={SEARCH_ID} \n                  value={this.state.address} \n                  enterButton={<CopyOutlined/>}\n                  onSearch={this.copyAddress}\n                  style={{margin: \"30px 0 0 0\", \"textAlign\": \"center\"}}\n          />\n      );\n    }\n  }\n\n  renderCard() {\n    if (this.state.address) {\n      // Sanity check on BTC address checksum\n      if (!validateBtcAddr(this.state.address))\n        return;\n      const cardW = document.getElementById(\"receive-card\")?.offsetWidth;\n      const w = Math.min(300, 0.8 * cardW);\n      return (\n        <div>\n          <Row justify='center'>\n            <QRCode value={this.state.address} \n                    size={w}\n                    style={{margin: \"30px 0 0 0\"}}\n            />\n          </Row>\n          <Row justify='center'>\n            {this.renderAddrBox()}\n          </Row>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <p>No addresses found</p>\n          <Empty image={Empty.PRESENTED_IMAGE_SIMPLE}/>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    const content = (\n      <center>\n        <Card title={'Receive BTC'} bordered={true} id=\"receive-card\">\n          <center>\n            {this.renderCard()}\n          </center>\n        </Card>\n      </center>      \n    )\n    return (\n      <PageContent content={content} isMobile={this.props.isMobile}/>\n    )\n  }\n}\n\nexport default Receive","import React from 'react';\nimport 'antd/dist/antd.dark.css'\nimport { Main } from './components'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","\nimport localStorage from \"./localStorage\";\n\nconst bs58check = require('bs58check');\nconst bech32 = require('bech32').bech32;\nconst HARDENED_OFFSET = 0x80000000;\nexport const constants = {\n    DEFAULT_APP_NAME: 'Lattice Manager',\n    ENV: process.env.REACT_APP_ENV || 'prod',\n    BASE_SIGNING_URL: process.env.REACT_APP_BASE_SIGNING_URL || 'https://signing.gridpl.us',\n    BTC_PROD_DATA_API: 'https://blockchain.info',\n    BTC_BROADCAST_ENDPOINT: 'https://blockstream.info/api/tx',\n    HARDENED_OFFSET,\n    ASYNC_SDK_TIMEOUT: 60000,\n    SHORT_TIMEOUT: 30000,\n    BTC_COIN: parseInt(process.env.REACT_APP_BTC_COIN) || HARDENED_OFFSET,\n    SATS_TO_BTC: Math.pow(10, 8),\n    BTC_MAIN_GAP_LIMIT: 20,\n    BTC_CHANGE_GAP_LIMIT: 1,\n    BTC_ADDR_BLOCK_LEN: 10,\n    BTC_CHANGE_ADDR_BLOCK_LEN: 1,\n    BTC_DEFAULT_FEE_RATE: process.env.REACT_APP_BTC_DEFAULT_FEE_RATE || 10, // 10 sat/byte\n    BTC_TX_BASE_URL: process.env.REACT_APP_BTC_TX_BASE_URL || 'https://www.blockchain.com/btc/tx',\n    PAGE_SIZE: 20, // 20 transactions per requested page, per `gridplus-cloud-services`\n    CONTRACT_PAGE_SIZE: 6,\n    LOST_PAIRING_ERR: \"NOT_PAIRED\",\n    LOST_PAIRING_MSG: \"Cannot find Lattice connection. Please re-connect.\",\n    BTC_TESTNET: process.env.REACT_APP_BTC_TESTNET || null,\n    KEYRING_LOGOUT_MS: process.env.KEYRING_LOGOUT_MS || 2592000000, // default 30 days\n    KEYRING_DATA_PATH: 'gridplus_web_wallet_keyring_logins', // item in localStorage\n    ABI_PACK_URL: \"https://gridplus.github.io/abi-pack-framework\",\n    LATTICE_CERT_SIGNER: process.env.REACT_APP_LATTICE_CERT_SIGNER || '0477816e8e83bb17c4309cc2e5aa134c573a5943154940095a423149f7cc0384ad52d33f1b4cd89c967bf211c039202df3a7899cb7543de4738c96a81cfde4b117',\n    CONTRACTS_HELP_LINK: 'https://docs.gridplus.io/gridplus-web-wallet/use-ethereum-smart-contract-abi-function-definitions',\n    TAGS_HELP_LINK: 'https://docs.gridplus.io/gridplus-web-wallet/address-tags',\n    PERMISSIONS_HELP_LINK: 'https://docs.gridplus.io/gridplus-web-wallet/how-to-set-and-use-spending-limits',\n    BTC_WALLET_STORAGE_KEY: 'btc_wallet',\n    BTC_PURPOSE_NONE: -1,\n    BTC_PURPOSE_NONE_STR: 'Hide BTC Wallet',\n    BTC_PURPOSE_LEGACY: HARDENED_OFFSET + 44,\n    BTC_PURPOSE_LEGACY_STR: 'Legacy (1)',\n    BTC_PURPOSE_WRAPPED_SEGWIT: HARDENED_OFFSET + 49,\n    BTC_PURPOSE_WRAPPED_SEGWIT_STR: 'Wrapped Segwit (3)',\n    BTC_PURPOSE_SEGWIT: HARDENED_OFFSET + 84,\n    BTC_PURPOSE_SEGWIT_STR: 'Segwit (bc1)',\n    BTC_SEGWIT_NATIVE_V0_PREFIX: 'bc',\n    BTC_WRAPPED_SEGWIT_VERSION: 0x05,\n    RATE_LIMIT: 1000, // 1s between requests\n    GET_ABI_URL: 'https://api.etherscan.io/api?module=contract&action=getabi&address=',\n    DEFAULT_CONTRACT_NETWORK: 'ethereum',\n    CONTRACT_NETWORKS: {\n        ethereum: {\n          label: \"Ethereum\",\n          url: \"https://etherscan.io\",\n          baseUrl: \"https://api.etherscan.io\",\n          apiRoute: \"api?module=contract&action=getabi&address=\",\n        },\n        polygon: {\n          label: \"Polygon\",\n          url: \"https://polygonscan.com\",\n          baseUrl: \"https://api.polygonscan.com\",\n          apiRoute: \"api?module=contract&action=getabi&address=\",\n        },\n        binance: {\n          label: \"Binance\",\n          url: \"https://bscscan.com/\",\n          baseUrl: \"https://api.bscscan.com\",\n          apiRoute: \"api?module=contract&action=getabi&address=\",\n        },\n        avalanche: {\n          label: \"Avalanche\",\n          url: \"https://snowtrace.io\",\n          baseUrl: \"https://api.snowtrace.io\",\n          apiRoute: \"api?module=contract&action=getabi&address=\",\n        },\n      },\n};\n\nconst devConstants = {\n    BTC_DEV_DATA_API: 'https://blockstream.info/testnet/api',\n    BTC_BROADCAST_ENDPOINT : 'https://blockstream.info/testnet/api/tx',\n    BASE_SIGNING_URL: 'https://signing.staging-gridpl.us',\n    // Deprecating because using two different stores was very tricky and we don't\n    // need the second one anyway\n    // ROOT_STORE: 'gridplus-dev', \n    BTC_COIN: HARDENED_OFFSET + 1,\n    BTC_DEFAULT_FEE_RATE: 10,\n    BTC_TX_BASE_URL: 'https://www.blockchain.com/btc-testnet/tx',\n    BTC_TESTNET: 'Testnet3',\n    LATTICE_CERT_SIGNER: '045cfdf77a00b4b6b4a5b8bb26b5497dbc7a4d01cbefd7aaeaf5f6f8f8865976e7941ab0ec1651209c444009fd48d925a17de5040ba47eaf3f5b51720dd40b2f9d',\n    BTC_SEGWIT_NATIVE_V0_PREFIX: 'tb',\n    BTC_WRAPPED_SEGWIT_VERSION: 0xC4,\n}\n\n// NEW: If you have checked the \"Using Dev Lattice\" box in settings, the constants\n// are swapped out here\nconst localSettings = localStorage.getSettings();\nif (localSettings.devLattice) {\n    Object.keys(devConstants).forEach((key) => {\n        constants[key] = devConstants[key];\n    })\n}\n\n\n//--------------------------------------------\n// CHAIN DATA SYNCING HELPERS\n//--------------------------------------------\nfunction fetchJSON(url, opts, cb) {\n    fetch(url, opts)\n    .then((response) => response.json())\n    .then((resp) => cb(null, resp))\n    .catch((err) => cb(err))\n}\n\n//====== UTXOS ==================\n// For mainnet (production env) we can bulk request data from the blockchain.com API\nfunction _fetchBtcUtxos(addresses, cb, utxos=[], offset=0) {\n    if (addresses.length === 0) {\n        // No more addresses left to check. We are done.\n        return cb(null, utxos);\n    }\n    const ADDRS_PER_CALL = 20;\n    const MAX_UTOXS_RET = 50;\n    const addrsToCheck = addresses.slice(0, ADDRS_PER_CALL);\n    let url = `${constants.BTC_PROD_DATA_API}/unspent?active=`;\n    for (let i = 0; i < addrsToCheck.length; i++) {\n        if (i === 0) {\n            url = `${url}${addrsToCheck[i]}`\n        } else {\n            url = `${url}|${addrsToCheck[i]}`\n        }\n    }\n    url = `${url}&limit=${MAX_UTOXS_RET}&confirmations=1`;\n    if (offset > 0) {\n        // If this is a follow up, fetch txs after an offset\n        url = `${url}&offset=${offset}`\n    }\n    fetchJSON(url, null, (err, data) => {\n        if (err)\n            return cb(err);\n        // Add confirmed UTXOs\n        data.unspent_outputs.forEach((u) => {\n            if (u.confirmations > 0) {\n                utxos.push({\n                    id: u.tx_hash_big_endian,\n                    vout: u.tx_output_n,\n                    value: u.value,\n                    address: _blockchainDotComScriptToAddr(u.script),\n                })\n            }\n        })\n        // Determine if we need to recurse on this set of addresses\n        if (data.unspent_outputs.length >= MAX_UTOXS_RET) {\n            return setTimeout(() => {\n                _fetchBtcUtxos(addresses, cb, utxos, offset+MAX_UTOXS_RET);\n            }, constants.RATE_LIMIT);\n        }\n        // Otherwise we are done with these addresses. Clip them and recurse.\n        addresses = addresses.slice(ADDRS_PER_CALL);\n        setTimeout(() => {\n            _fetchBtcUtxos(addresses, cb, utxos, 0);\n        }, constants.RATE_LIMIT);\n    })\n}\n\n// For testnet we cannot use blockchain.com - we have to request stuff from each\n// address individually.\nfunction _fetchBtcUtxosTestnet(addresses, cb, utxos=[]) {\n    const address = addresses.pop()\n    //@ts-expect-error\n    const url = `${constants.BTC_DEV_DATA_API}/address/${address}/utxo`;\n    fetchJSON(url, null, (err, data) => {\n        if (err)\n            return cb(err)\n        data.forEach((u) => {\n            // Add confirmed UTXOs\n            if (u.status.confirmed) {\n                utxos.push({\n                    id: u.txid,\n                    vout: u.vout,\n                    value: u.value,\n                    address,\n                })\n            }\n        })\n        if (addresses.length === 0) {\n            return cb(null, utxos);\n        }\n        setTimeout(() => {\n            _fetchBtcUtxosTestnet(addresses, cb, utxos)\n        }, constants.RATE_LIMIT)\n    })\n}\n\nexport function fetchBtcUtxos(addresses, cb) {\n    if (!addresses)\n        return cb('Cannot fetch UTXOs - bad input');\n    else if (addresses.length < 1)\n        return cb(null, []);\n    const addrsCopy = JSON.parse(JSON.stringify(addresses));\n    //@ts-expect-error\n    const f = constants.BTC_DEV_DATA_API ? _fetchBtcUtxosTestnet : _fetchBtcUtxos;\n    f(addrsCopy, cb);\n}\n//====== END UTXOS ==================\n\n//====== TXS ==================\n// For mainnet (production env) we can bulk request data from the blockchain.com API\nfunction _fetchBtcTxs(addresses, cb, txs=[], offset=0, isFirstCall=true) {\n    if (addresses.length === 0) {\n        // No more addresses left to check. We are done.\n        return cb(null, txs);\n    }\n\n    let url = `${constants.BTC_PROD_DATA_API}/multiaddr?active=`;\n    const isSingleAddr = isFirstCall && addresses.length === 1;\n    if (isSingleAddr) {\n        // Edge case when getting transactions from the blockchain.com API with\n        // only one address -- it appears when you call multiaddr with only one\n        // address you get only the output(s) associated with that one address,\n        // but if you call with multiple addresses that is no longer a problem.\n        // See: https://www.blockchain.com/btc/tx/ffc83686c911bcf7aa31a3d3ca014bae3b1044b2ec280c877758aa6b384cde0b\n        // 1. https://blockchain.info/rawaddr/3BrvBeRy8qMijfZHzo8VJ77gdL1W9EvgHj\n        // 2. https://blockchain.info/multiaddr?active=3C8BhX4CGeyH3nXrYqRL89jvpakTPW1z8k|3BrvBeRy8qMijfZHzo8VJ77gdL1W9EvgHj\n        url = `${constants.BTC_PROD_DATA_API}/rawaddr/`\n    }\n    const ADDRS_PER_CALL = 20;\n    const MAX_TXS_RET = 50;\n    const addrsToCheck = addresses.slice(0, ADDRS_PER_CALL);\n    for (let i = 0; i < addrsToCheck.length; i++) {\n        if (i === 0) {\n            url = `${url}${addrsToCheck[i]}`\n        } else {\n            url = `${url}|${addrsToCheck[i]}`\n        }\n    }\n    if (isSingleAddr) {\n        url = `${url}?limit=${MAX_TXS_RET}`;\n    } else {\n        url = `${url}&n=${MAX_TXS_RET}`;\n    }\n    if (offset > 0) {\n        // If this is a follow up, fetch txs after an offset\n        url = `${url}&offset=${offset}`\n    }\n    fetchJSON(url, null, (err, data) => {\n        if (err)\n            return cb(err);\n        // Add the new txs\n        const formattedTxs: any[] = [];\n        data.txs.forEach((t) => {\n            const ftx = {\n                timestamp: t.time * 1000,\n                confirmed: !!t.block_index,\n                id: t.hash,\n                fee: t.fee,\n                inputs: [],\n                outputs: [],\n            };\n            t.inputs.forEach((input) => {\n                ftx.inputs.push({\n                    addr: input.prev_out.addr,\n                    value: input.prev_out.value,\n                })\n            })\n            t.out.forEach((output) => {\n                ftx.outputs.push({\n                    addr: output.addr,\n                    value: output.value,\n                })\n            })\n            if (!ftx.confirmed) {\n                ftx.timestamp = -1;\n            }\n            formattedTxs.push(ftx);\n        })\n        txs = txs.concat(formattedTxs)\n        // Determine if we need to recurse on this set of addresses\n        if (formattedTxs.length >= MAX_TXS_RET) {\n            return setTimeout(() => {\n                _fetchBtcTxs(addresses, cb, txs, offset+MAX_TXS_RET, false);\n            }, constants.RATE_LIMIT);\n        }\n        // Otherwise we are done with these addresses. Clip them and recurse.\n        addresses = addresses.slice(ADDRS_PER_CALL);\n        setTimeout(() => {\n            _fetchBtcTxs(addresses, cb, txs, 0, false);\n        }, constants.RATE_LIMIT);\n    })\n}\n\n// For testnet we cannot use blockchain.com - we have to request stuff from each\n// address individually.\nfunction _fetchBtcTxsTestnet(addresses, cb, txs=[], lastSeenId=null) {\n    const address = addresses.pop()\n    //@ts-expect-error\n    let url = `${constants.BTC_DEV_DATA_API}/address/${address}/txs`;\n    if (lastSeenId) {\n        url = `${url}/chain/${lastSeenId}`\n    }\n    fetchJSON(url, null, (err, data) => {\n        if (err)\n            return cb(err)\n        const formattedTxs: any[] = [];\n        let confirmedCount = 0;\n        data.forEach((t) => {\n            const ftx = {\n                timestamp: t.status.block_time * 1000,\n                confirmed: t.status.confirmed,\n                id: t.txid,\n                fee: t.fee,\n                inputs: [],\n                outputs: [],                \n            }\n            t.vin.forEach((input) => {\n                ftx.inputs.push({\n                    addr: input.prevout.scriptpubkey_address,\n                    value: input.prevout.value\n                })\n            })\n            t.vout.forEach((output) => {\n                ftx.outputs.push({\n                    addr: output.scriptpubkey_address,\n                    value: output.value\n                })\n            })\n            if (!ftx.confirmed) {\n                ftx.timestamp = -1;\n            }\n            formattedTxs.push(ftx)\n            if (ftx.confirmed) {\n                confirmedCount += 1;\n            }\n\n        })\n        txs = txs.concat(formattedTxs)\n        if (confirmedCount >= 25) {\n            // Blockstream only returns up to 25 confirmed transactions per request\n            // https://github.com/Blockstream/esplora/blob/master/API.md#get-addressaddresstxs\n            // We need to re-request with the last tx\n            addresses.push(address)\n            return _fetchBtcTxsTestnet(addresses, cb, txs, txs[confirmedCount-1].id)\n        }\n        if (addresses.length === 0) {\n            return cb(null, txs);\n        }\n        setTimeout(() => {\n            _fetchBtcTxsTestnet(addresses, cb, txs)\n        }, constants.RATE_LIMIT)\n    })\n}\n\nexport function fetchBtcTxs(addresses, cb) {\n    if (!addresses)\n        return cb('Cannot fetch transactions - bad input');\n    else if (addresses.length < 1)\n        return cb(null, []);\n    const addrsCopy = JSON.parse(JSON.stringify(addresses));\n    //@ts-expect-error\n    const f = constants.BTC_DEV_DATA_API ? _fetchBtcTxsTestnet : _fetchBtcTxs;\n    f(addrsCopy, cb);\n}\n//====== END TXS ==================\n\nexport function fetchBtcPrice(cb) {\n    const url = 'https://api.blockchain.com/v3/exchange/tickers/BTC-USD'\n    fetchJSON(url, null, (err, data) => {\n        if (err)\n            return cb(err)\n        else if (!data || !data.last_trade_price)\n            return cb('Invalid price data returned');\n        return cb(null, data.last_trade_price)\n    })\n}\n\nexport function broadcastBtcTx(rawTx, cb) {\n    const opts = {\n        method: 'POST',\n        body: rawTx\n    };\n    fetch(constants.BTC_BROADCAST_ENDPOINT, opts)\n    .then((response) => response.text())\n    .then((resp) => cb(null, resp))\n    .catch((err) => cb(err))\n}\n//--------------------------------------------\n// END CHAIN DATA SYNCING HELPERS\n//--------------------------------------------\n\n//--------------------------------------------\n// OTHER HELPERS\n//--------------------------------------------\nexport function harden(x) {\n  return x + HARDENED_OFFSET;\n}\n\n// Determine how many inputs (utxos) need to be included in a transaction\n// given the desired value and fee rate\n// Returns the number of inputs to include or -1 if there isn't enough\n// value in the inputs provided to cover value + fee\nfunction _calcBtcTxNumInputs(utxos, value, feeRate, inputIdx=0, currentValue=0) {\n    if (inputIdx >= utxos.length) {\n        return -1; // indicates error\n    }\n    currentValue += utxos[inputIdx].value;\n    const numInputs = inputIdx + 1;\n    const numBytes = getBtcNumTxBytes(numInputs);\n    const fee = Math.floor(feeRate * numBytes);\n    if (currentValue >= (value + fee)) {\n        return numInputs;\n    }\n    inputIdx = numInputs;\n    return _calcBtcTxNumInputs(utxos, value, feeRate, inputIdx, currentValue);\n}\n\n// Convert a script from blockchain.com's API into an address\n// For some reason, they only return the script in the UTXO object.\n// We need to convert the script to a an address.\n// Since we know the purpose, we know the format of the address,\n// so we can slice out the pubkeyhash from the script and convert.\nfunction _blockchainDotComScriptToAddr(_scriptStr) {\n    const purpose = getBtcPurpose();\n    if (purpose === constants.BTC_PURPOSE_SEGWIT) {\n        const bech32Prefix = constants.BTC_SEGWIT_NATIVE_V0_PREFIX;\n        const bech32Version = 0; // Only v0 currently supported\n        // Script: |OP_0|0x20|pubkeyhash|\n        const pubkeyhash = Buffer.from(_scriptStr, 'hex').slice(-20)\n        const words = bech32.toWords(pubkeyhash);\n        words.unshift(bech32Version);\n        return bech32.encode(bech32Prefix, words);\n    } else if (purpose === constants.BTC_PURPOSE_WRAPPED_SEGWIT) {\n        const version = constants.BTC_WRAPPED_SEGWIT_VERSION;\n        // Script: |OP_HASH160|0x20|pubkeyhash|OP_EQUAL|\n        const pubkeyhash = Buffer.from(_scriptStr, 'hex').slice(2, 22);\n        return bs58check.encode(Buffer.concat([Buffer.from([version]), pubkeyhash]));\n    } else if (purpose === constants.BTC_PURPOSE_LEGACY) {\n        // Script: |OP_DUP|OP_HASH160|0x20|pubkeyhash|OP_EQUALVERIFY|OP_CHECKSIG|\n        const version = constants.BTC_WRAPPED_SEGWIT_VERSION;\n        const pubkeyhash = Buffer.from(_scriptStr, 'hex').slice(3, 23);\n        return bs58check.encode(Buffer.concat([Buffer.from([version]), pubkeyhash]));\n    }\n}\n\nexport function getBtcPurpose() {\n    const localSettings = localStorage.getSettings();\n    return  localSettings.btcPurpose ? \n            localSettings.btcPurpose : \n            constants.BTC_PURPOSE_NONE;\n}\n\n// Calculate how many bytes will be in a transaction given purpose and input count\n// Calculations come from: https://github.com/jlopp/bitcoin-transaction-size-calculator/blob/master/index.html\n// Not a perfect calculation but pretty close\nexport function getBtcNumTxBytes(numInputs) {\n    let inputSize, outputSize, inputWitnessSize\n    const purpose = getBtcPurpose();\n    if (purpose === constants.BTC_PURPOSE_LEGACY) {\n        inputSize = 148;\n        outputSize = 32;\n        inputWitnessSize = 0;\n    } else if (purpose === constants.BTC_PURPOSE_SEGWIT) {\n        inputSize = 91;\n        outputSize = 32;\n        inputWitnessSize = 107; // size(signature) + signature + size(pubkey) + pubkey\n    } else {\n        inputSize = 67.75;\n        outputSize = 31;\n        inputWitnessSize = 107; // size(signature) + signature + size(pubkey) + pubkey\n    }\n    const vFactor = purpose === constants.BTC_PURPOSE_LEGACY ? 0 : 0.75;\n    // Hardcode 2 outputs to avoid complexity in app state\n    const txVBytes =  10 + vFactor + inputSize * numInputs + outputSize * 2;\n  return (3 * vFactor) + txVBytes + inputWitnessSize * numInputs;\n}\n\nexport function buildBtcTxReq (   recipient, \n                                    btcValue, \n                                    utxos, \n                                    addrs, \n                                    changeAddrs, \n                                    feeRate=constants.BTC_DEFAULT_FEE_RATE,\n                                    isFullSpend=false) {\n    if (!addrs || !changeAddrs || addrs.length < 1 || changeAddrs.length < 1) {\n        return { error: 'No addresses (or change addresses). Please wait to sync.' };\n    }\n    // Convert value to satoshis\n    const satValue = Math.round(Number(btcValue) * constants.SATS_TO_BTC);\n    const numInputs = isFullSpend ? utxos.length : _calcBtcTxNumInputs(utxos, satValue, feeRate);\n    if (numInputs < 0) {\n        return { error: 'Balance too low.' }\n    } else if (numInputs > utxos.length) {\n        return { error: 'Failed to build transaction.' }\n    }\n    const bytesUsed = getBtcNumTxBytes(numInputs);\n    //@ts-expect-error\n    const fee = Math.floor(bytesUsed * feeRate);\n    // Build the request inputs\n    const BASE_SIGNER_PATH = [getBtcPurpose(), constants.BTC_COIN, constants.HARDENED_OFFSET];\n    const prevOuts: any[] = [];\n    for (let i = 0; i < numInputs; i++) {\n        const utxo = utxos[i];\n        let signerPath = null;\n        if (addrs.indexOf(utxo.address) > -1) {\n            signerPath = BASE_SIGNER_PATH.concat([0, addrs.indexOf(utxo.address)]);\n        } else if (changeAddrs.indexOf(utxo.address) > -1) {\n            signerPath = BASE_SIGNER_PATH.concat([1, changeAddrs.indexOf(utxo.address)]);\n        } else {\n            return { error: 'Failed to find holder of UTXO. Syncing issue likely.' };\n        }\n        const prevOut = {\n            txHash: utxo.id,\n            value: utxo.value,\n            index: utxo.vout,\n            signerPath,\n        }\n        prevOuts.push(prevOut);\n    }\n    // Return the request (i.e. the whole object)\n    const req = {\n        prevOuts,\n        recipient,\n        value: satValue,\n        fee,\n        // Send change to the latest change address\n        changePath: BASE_SIGNER_PATH.concat([1, changeAddrs.length -1]),\n    };\n    return { currency: 'BTC', data: req }\n}\n\nexport function validateBtcAddr(addr) {\n    if (addr === '') return null;\n    try {\n        bs58check.decode(addr);\n        return true;\n    } catch (e) {\n        try {\n            bech32.decode(addr);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n}\n\nexport function toHexStr(bn) {\n    const s = bn.toString(16);\n    const base = s.length % 2 === 0 ? s : `0${s}`;\n    return `0x${base}`; \n}\n\n// Filter out any duplicate objects based on `keys`\nexport function filterUniqueObjects(objs, keys) {\n    const filtered: any[] = [];\n    // Copy the objects in reversed order so that newer instances\n    // are applied first\n    const objsCopy = JSON.parse(JSON.stringify(objs)).reverse()\n    objsCopy.forEach((obj) => {\n        let isDup = false;\n        filtered.forEach((fobj) => {\n            let matchedKeys = 0\n            keys.forEach((key) => {\n                if (fobj[key] === obj[key]) {\n                    matchedKeys += 1;\n                }\n            })\n            if (matchedKeys >= keys.length) {\n                isDup = true;\n            }\n        })\n        if (!isDup) {\n            filtered.push(obj);\n        }\n    })\n    // Return in the original order\n    return filtered.reverse();\n}\n//--------------------------------------------\n// END OTHER HELPERS\n//--------------------------------------------"],"sourceRoot":""}