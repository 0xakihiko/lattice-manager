{"version":3,"sources":["util/helpers.ts","components/main.tsx","components/validateSig.tsx","util/storageSession.ts","sdk/sdkSession.ts","util/localStorage.ts","App.tsx","index.tsx","components/formatting/pageContent.tsx","components/connect.tsx","components/pair.tsx","components/ContractCard.tsx","components/SelectNetwork.tsx","components/ContractCardList.tsx","components/SearchCard.tsx","components/ethContracts.tsx","components/permissions.tsx","components/settings.tsx","util/sendChecks.ts","components/AddAddressesButton.tsx","components/kvFiles.tsx","components/landing.tsx","components/loading.tsx","components/error.tsx","components/btc-wallet/wallet.tsx","components/btc-wallet/send.tsx","components/btc-wallet/receive.tsx"],"names":["bs58check","require","bech32","constants","DEFAULT_APP_NAME","ENV","process","REACT_APP_ENV","BASE_SIGNING_URL","REACT_APP_BASE_SIGNING_URL","BTC_PROD_DATA_API","BTC_BROADCAST_ENDPOINT","HARDENED_OFFSET","ASYNC_SDK_TIMEOUT","SHORT_TIMEOUT","BTC_COIN","parseInt","REACT_APP_BTC_COIN","SATS_TO_BTC","Math","pow","BTC_MAIN_GAP_LIMIT","BTC_CHANGE_GAP_LIMIT","BTC_ADDR_BLOCK_LEN","BTC_CHANGE_ADDR_BLOCK_LEN","BTC_DEFAULT_FEE_RATE","REACT_APP_BTC_DEFAULT_FEE_RATE","BTC_TX_BASE_URL","REACT_APP_BTC_TX_BASE_URL","PAGE_SIZE","CONTRACT_PAGE_SIZE","LOST_PAIRING_ERR","LOST_PAIRING_MSG","BTC_TESTNET","REACT_APP_BTC_TESTNET","KEYRING_LOGOUT_MS","KEYRING_DATA_PATH","ABI_PACK_URL","LATTICE_CERT_SIGNER","REACT_APP_LATTICE_CERT_SIGNER","CONTRACTS_HELP_LINK","TAGS_HELP_LINK","PERMISSIONS_HELP_LINK","BTC_WALLET_STORAGE_KEY","BTC_PURPOSE_NONE","BTC_PURPOSE_NONE_STR","BTC_PURPOSE_LEGACY","BTC_PURPOSE_LEGACY_STR","BTC_PURPOSE_WRAPPED_SEGWIT","BTC_PURPOSE_WRAPPED_SEGWIT_STR","BTC_PURPOSE_SEGWIT","BTC_PURPOSE_SEGWIT_STR","BTC_SEGWIT_NATIVE_V0_PREFIX","BTC_WRAPPED_SEGWIT_VERSION","RATE_LIMIT","GET_ABI_URL","DEFAULT_CONTRACT_NETWORK","CONTRACT_NETWORKS","ethereum","label","url","baseUrl","apiRoute","polygon","binance","avalanche","devConstants","BTC_DEV_DATA_API","fetchJSON","opts","cb","fetch","then","response","json","resp","catch","err","_fetchBtcUtxos","addresses","utxos","offset","length","ADDRS_PER_CALL","MAX_UTOXS_RET","addrsToCheck","slice","i","data","unspent_outputs","forEach","u","confirmations","push","id","tx_hash_big_endian","vout","tx_output_n","value","address","_blockchainDotComScriptToAddr","script","setTimeout","_fetchBtcUtxosTestnet","pop","status","confirmed","txid","fetchBtcUtxos","addrsCopy","JSON","parse","stringify","_fetchBtcTxs","txs","isFirstCall","isSingleAddr","MAX_TXS_RET","formattedTxs","t","ftx","timestamp","time","block_index","hash","fee","inputs","outputs","input","addr","prev_out","out","output","concat","_fetchBtcTxsTestnet","lastSeenId","confirmedCount","block_time","vin","prevout","scriptpubkey_address","fetchBtcTxs","fetchBtcPrice","last_trade_price","broadcastBtcTx","rawTx","method","body","text","harden","x","_calcBtcTxNumInputs","feeRate","inputIdx","currentValue","numInputs","numBytes","getBtcNumTxBytes","floor","_scriptStr","purpose","getBtcPurpose","bech32Prefix","pubkeyhash","Buffer","from","words","toWords","unshift","encode","version","localSettings","localStorage","getSettings","btcPurpose","inputSize","outputSize","inputWitnessSize","vFactor","buildBtcTxReq","recipient","btcValue","addrs","changeAddrs","isFullSpend","error","satValue","round","Number","bytesUsed","BASE_SIGNER_PATH","prevOuts","utxo","signerPath","indexOf","prevOut","txHash","index","req","changePath","currency","validateBtcAddr","decode","e","toHexStr","bn","s","toString","base","filterUniqueObjects","objs","keys","filtered","reverse","obj","isDup","fobj","matchedKeys","key","devLattice","Object","Content","Layout","Footer","Sider","Main","props","state","name","menuItem","session","collapsed","msg","pendingMsg","waiting","deviceID","password","lastUpdated","Date","windowWidth","window","innerWidth","walletIsExternal","keyringName","hwCheck","handleMenuChange","bind","handleLogout","handleKeyringOpener","syncActiveWalletState","cancelConnect","connectSession","handlePair","fetchBtcData","setError","refreshWallets","handlePageTurn","retry","updateWidth","addEventListener","this","isMobile","setState","params","URLSearchParams","location","search","get","forceLogin","onload","prevKeyringLogin","getKeyringItem","keyringTimeoutBoundary","getTime","lastLogin","connect","removeKeyringItem","getLogin","removeEventListener","updates","settings","SDKSession","client","pair","unwait","isConnected","openedByKeyring","setKeyringItem","endpoint","customEndpoint","opener","postMessage","close","enc","href","onCancel","page","setPage","stateUpdate","disconnect","removeLogin","handleLostPairing","loading","showLoading","wait","isPaired","setLogin","returnKeyringData","isRecursion","fetchBtcAddresses","newAddrCounts","console","regular","change","clearUtxos","fetchBtcStateData","bypassRefresh","activeWallet","getActiveWallet","isExternal","external","shouldRefresh","hideWallet","collapsedWidth","theme","mode","onSelect","Item","title","SubMenu","renderMenu","onClick","type","size","icon","style","backgroundColor","marginRight","className","target","rel","alt","src","height","extra","walletTag","ghost","renderHeaderText","retryCb","refreshData","pageTurnCb","hasActiveWallet","spin","renderMenuItem","submit","submitCb","errMsg","textAlign","color","margin","renderContent","minHeight","renderHeader","renderSidebar","renderErrorHeader","renderPage","renderFooter","React","Component","ReactCrypto","default","EC","ec","ValidateSig","signer","sig","curve","crypto","msgHash","createHash","update","digest","keyFromPublic","verify","_certData","PREIMAGE_LEN","start","preimage","METADATA_LEN","pubkey","_sig","cert","getCert","_validate","validateCert","getPreimage","message","result","subTitle","validateSig","spanLength","spanOffset","span","bordered","renderResult","StorageSession","device_id","pass","store","getRootStore","o","Array","isArray","newData","oldData","isObject","newKey","updateBranch","wallet_uid","k","setRootStore","stateUpdateHandler","storageSession","btcTxs","btcUtxos","lastFetchedBtcData","btcPrice","getBtcWalletData","saveBtcWalletData","lastUsed","_getLastUsedBtcAddrIdx","BTC","newPage","driedAddrs","hasBTCAddrs","hasBTCChangeAddrs","BTC_CHANGE","BTC_PURPOSE","allAddrs","rehydratedAddrs","walletData","dryAddresses","uid","save","getWalletData","purposeSpecificData","rehydrateAddresses","pw","_triedLocal","tmpTimeout","_genPrivKey","Client","privKey","timeout","warn","_tryConnect","log","prevWallet","resetStateData","defs","addAbiDefs","addPermissionV0","secret","sign","res","tx","balance","isChange","totalFetched","lastUsedIdx","currentAddrs","GAP_LIMIT","targetIdx","maxToFetch","nToFetch","min","changeIdx","startPath","n","skipCache","_getAddresses","_txs","_utxos","now","newTxs","_processBtcTxs","newUtxos","sort","a","b","getAddresses","coin","maxUsed","processedTxs","incoming","sentFromAddrs","totalValue","sortedTxs","ROOT_STORE","REACT_APP_ROOT_STORE","getItem","setItem","removeItem","getRootStoreItem","setRootStoreItem","getKeyring","getLoginId","setLoginId","removeLoginId","getLoginPassword","setLoginPassword","removeLoginPassword","removeRootStore","removeRootStoreItem","omit","setSettings","App","ReactDOM","render","document","getElementById","PageContent","content","justify","Connect","isLoading","modal","showSettings","handleCancel","handleSubmit","renderMsg","showModal","focus","getFieldDecorator","placeholder","ref","width","Password","onPressEnter","renderConnectButton","footer","visible","onOk","hideModal","_isMobile","inModal","renderSetupInfo","closable","spanWidth","tooLong","renderModal","LinkOutlined","DesktopOutlined","renderForm","Pair","code","toUpperCase","clientWidth","w","getBoxWidth","fontSize","getBoxFontHeight","onChange","handleUpdate","ContractCard","pack","useState","contract","setContract","isModalVisible","setIsModalVisible","isAdded","setIsAdded","isAdding","setIsAdding","network","loadContractData","useCallback","fname","useEffect","AddDefsButton","CheckCircleOutlined","disabled","PlusCircleOutlined","flex","maxWidth","actions","website","bodyStyle","desc","dataSource","Column","dataIndex","Option","Select","SelectNetwork","setNetwork","minWidth","showSearch","defaultValue","optionFilterProp","filterOption","option","children","toLowerCase","entries","map","pageSize","ContractCardList","packs","setPacks","filteredPacks","setFilteredPacks","paginatedPacks","setPaginatedPacks","filterPacksByNetwork","filter","loadPackIndex","pageZeroIndexed","chunkedList","chunk","direction","Group","compact","fuzzyFilteredPacks","fuzzysort","go","fuzzyFilterPacksByName","marginLeft","current","defaultCurrent","defaultPageSize","total","display","flexWrap","gap","defaultNetwork","SearchCard","setLoading","installing","setInstalling","success","setSuccess","setDefs","resetData","fetchContractData","test","getNetwork","parseAbi","throttledFetch","useMemo","throttle","SuccessAlert","ErrorAlert","NetworkLinkList","networks","last","NetworkLink","Search","allowClear","enterButton","onSearch","val","marginTop","DownloadOutlined","defaultState","customDefs","customDefsStr","TAB_KEYS","PACK","SINGLE_ADDR","CUSTOM","EthContracts","tab","PATH","selectedPackKey","addDefs","onSmartContractAddress","renderSuccessAlert","renderPackCard","renderCustomCard","renderSearchCard","TMP_REMOVE_ZERO_LEN_PARAMS","description","onClose","buttonTxt","activeKey","onTabChange","TabPane","newDefs","def","shouldAdd","param","TextArea","autoSize","minRows","maxRows","parsed","f","renderTabs","renderBanner","QuestionCircleOutlined","renderCard","BN","assets","ETH","decimals","Settings","keyring","getBtcPurposeName","reload","evt","checked","updateCustomEndpoint","handleChangeBitcoinVersionSetting","resetState","WarningOutlined","updateUseDevLattice","cols","record","removeKeyring","Panel","header","columns","renderKeyringsSetting","renderCustomEndpointSetting","renderBitcoinVersionSetting","renderDevLatticeSetting","allChecks","full","fullCheck","checkEthRecipient","checkNumericValue","recipientCheck","isPrefixed","correctLength","num","isNaN","validAddressRegex","AddAddressesButton","records","addToRecordsInState","Form","useForm","form","setIsLoading","resetFields","PlusOutlined","maskClosable","onFinish","validateFields","recordsToAdd","caseSensitive","_","chain","keyBy","mapValues","addKvRecords","onFinishFailed","onFieldsChange","autoComplete","preserve","layout","List","initialValue","fields","add","remove","restField","flexDirection","marginBottom","flexGrow","validateTrigger","rules","required","pattern","validator","rule","some","r","Promise","reject","Error","resolve","addonBefore","data-testid","MinusSquareFilled","block","KVFiles","totalRecords","retryFunc","recordToAdd","updateAddKey","updateAddVal","fetchRecords","isChecked","_record","selected","unionBy","recordsToRemove","differenceBy","retries","getKvRecords","ids","removeKvRecords","removeFromRecordsInState","action","tip","indicator","LoadingOutlined","isValidAddress","isValidLen","extraLink","renderLoading","shouldDisplaySend","addRecord","displayPage","SyncOutlined","tableLayout","pagination","position","showSizeChanger","defaultSortOrder","sorter","localeCompare","recordIsChecked","changeRecordChecked","getNumSelected","removeSelected","renderAddCard","renderDisplayCard","renderError","Landing","TagsOutlined","AuditOutlined","maxHeight","Loading","keyPressListener","btnMsg","Wallet","offsetWidth","maxChars","getInnerWidth","item","align","ts","day","hour","diff","week","month","getDateDiffStr","Meta","avatar","subtitle","ensureTrimmedText","itemMeta","ArrowDownOutlined","ArrowUpOutlined","elapsed","timeType","elapsedSec","getBtcTxs","pending","ClockCircleOutlined","itemLayout","renderItem","renderListItem","btcBalance","getBtcBalance","precision","getPage","CaretLeftOutlined","CaretRightOutlined","renderLastUpdatedTag","ReloadOutlined","renderList","renderPages","renderStartCard","Send","valueCheck","btcFeeRate","ensResolvedAddress","handleENSResolution","renderSubmitButton","renderValueLabel","buildBtcRequest","updateBtcFeeRate","ceil","check","undefined","numberVal","isZeroPrefixed","isLessThanOne","checkValue","calculateMaxValue","notification","open","duration","updateValue","renderIcon","renderValueLabelTitle","updateRecipient","isValid","CloseCircleOutlined","getUrl","max","getBtcUtxos","txBytes","feeSat","toFixed","isValidReq","renderBalance","renderRecipientLabel","renderExtra","image","Empty","PRESENTED_IMAGE_SIMPLE","QRCode","Input","Receive","updateDisplayAddress","displayAddr","getBtcDisplayAddress","select","execCommand","copyAddress","CopyOutlined","cardW","renderAddrBox"],"mappings":"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","file":"static/js/main.0575c587.chunk.js","sourcesContent":["\nimport localStorage from \"./localStorage\";\n\nconst bs58check = require('bs58check');\nconst bech32 = require('bech32').bech32;\nconst HARDENED_OFFSET = 0x80000000;\nexport const constants = {\n    DEFAULT_APP_NAME: 'Lattice Manager',\n    ENV: process.env.REACT_APP_ENV || 'prod',\n    BASE_SIGNING_URL: process.env.REACT_APP_BASE_SIGNING_URL || 'https://signing.gridpl.us',\n    BTC_PROD_DATA_API: 'https://blockchain.info',\n    BTC_BROADCAST_ENDPOINT: 'https://blockstream.info/api/tx',\n    HARDENED_OFFSET,\n    ASYNC_SDK_TIMEOUT: 60000,\n    SHORT_TIMEOUT: 30000,\n    BTC_COIN: parseInt(process.env.REACT_APP_BTC_COIN) || HARDENED_OFFSET,\n    SATS_TO_BTC: Math.pow(10, 8),\n    BTC_MAIN_GAP_LIMIT: 20,\n    BTC_CHANGE_GAP_LIMIT: 1,\n    BTC_ADDR_BLOCK_LEN: 10,\n    BTC_CHANGE_ADDR_BLOCK_LEN: 1,\n    BTC_DEFAULT_FEE_RATE: process.env.REACT_APP_BTC_DEFAULT_FEE_RATE || 10, // 10 sat/byte\n    BTC_TX_BASE_URL: process.env.REACT_APP_BTC_TX_BASE_URL || 'https://www.blockchain.com/btc/tx',\n    PAGE_SIZE: 20, // 20 transactions per requested page, per `gridplus-cloud-services`\n    CONTRACT_PAGE_SIZE: 6,\n    LOST_PAIRING_ERR: \"NOT_PAIRED\",\n    LOST_PAIRING_MSG: \"Cannot find Lattice connection. Please re-connect.\",\n    BTC_TESTNET: process.env.REACT_APP_BTC_TESTNET || null,\n    KEYRING_LOGOUT_MS: process.env.KEYRING_LOGOUT_MS || 2592000000, // default 30 days\n    KEYRING_DATA_PATH: 'gridplus_web_wallet_keyring_logins', // item in localStorage\n    ABI_PACK_URL: \"https://gridplus.github.io/abi-pack-framework\",\n    LATTICE_CERT_SIGNER: process.env.REACT_APP_LATTICE_CERT_SIGNER || '0477816e8e83bb17c4309cc2e5aa134c573a5943154940095a423149f7cc0384ad52d33f1b4cd89c967bf211c039202df3a7899cb7543de4738c96a81cfde4b117',\n    CONTRACTS_HELP_LINK: 'https://docs.gridplus.io/gridplus-web-wallet/use-ethereum-smart-contract-abi-function-definitions',\n    TAGS_HELP_LINK: 'https://docs.gridplus.io/gridplus-web-wallet/address-tags',\n    PERMISSIONS_HELP_LINK: 'https://docs.gridplus.io/gridplus-web-wallet/how-to-set-and-use-spending-limits',\n    BTC_WALLET_STORAGE_KEY: 'btc_wallet',\n    BTC_PURPOSE_NONE: -1,\n    BTC_PURPOSE_NONE_STR: 'Hide BTC Wallet',\n    BTC_PURPOSE_LEGACY: HARDENED_OFFSET + 44,\n    BTC_PURPOSE_LEGACY_STR: 'Legacy (1)',\n    BTC_PURPOSE_WRAPPED_SEGWIT: HARDENED_OFFSET + 49,\n    BTC_PURPOSE_WRAPPED_SEGWIT_STR: 'Wrapped Segwit (3)',\n    BTC_PURPOSE_SEGWIT: HARDENED_OFFSET + 84,\n    BTC_PURPOSE_SEGWIT_STR: 'Segwit (bc1)',\n    BTC_SEGWIT_NATIVE_V0_PREFIX: 'bc',\n    BTC_WRAPPED_SEGWIT_VERSION: 0x05,\n    RATE_LIMIT: 1000, // 1s between requests\n    GET_ABI_URL: 'https://api.etherscan.io/api?module=contract&action=getabi&address=',\n    DEFAULT_CONTRACT_NETWORK: 'ethereum',\n    CONTRACT_NETWORKS: {\n        ethereum: {\n          label: \"Ethereum\",\n          url: \"https://etherscan.io\",\n          baseUrl: \"https://api.etherscan.io\",\n          apiRoute: \"api?module=contract&action=getabi&address=\",\n        },\n        polygon: {\n          label: \"Polygon\",\n          url: \"https://polygonscan.com\",\n          baseUrl: \"https://api.polygonscan.com\",\n          apiRoute: \"api?module=contract&action=getabi&address=\",\n        },\n        binance: {\n          label: \"Binance\",\n          url: \"https://bscscan.com/\",\n          baseUrl: \"https://api.bscscan.com\",\n          apiRoute: \"api?module=contract&action=getabi&address=\",\n        },\n        avalanche: {\n          label: \"Avalanche\",\n          url: \"https://snowtrace.io\",\n          baseUrl: \"https://api.snowtrace.io\",\n          apiRoute: \"api?module=contract&action=getabi&address=\",\n        },\n      },\n};\n\nconst devConstants = {\n    BTC_DEV_DATA_API: 'https://blockstream.info/testnet/api',\n    BTC_BROADCAST_ENDPOINT : 'https://blockstream.info/testnet/api/tx',\n    BASE_SIGNING_URL: 'https://signing.staging-gridpl.us',\n    // Deprecating because using two different stores was very tricky and we don't\n    // need the second one anyway\n    // ROOT_STORE: 'gridplus-dev', \n    BTC_COIN: HARDENED_OFFSET + 1,\n    BTC_DEFAULT_FEE_RATE: 10,\n    BTC_TX_BASE_URL: 'https://www.blockchain.com/btc-testnet/tx',\n    BTC_TESTNET: 'Testnet3',\n    LATTICE_CERT_SIGNER: '045cfdf77a00b4b6b4a5b8bb26b5497dbc7a4d01cbefd7aaeaf5f6f8f8865976e7941ab0ec1651209c444009fd48d925a17de5040ba47eaf3f5b51720dd40b2f9d',\n    BTC_SEGWIT_NATIVE_V0_PREFIX: 'tb',\n    BTC_WRAPPED_SEGWIT_VERSION: 0xC4,\n}\n\n// NEW: If you have checked the \"Using Dev Lattice\" box in settings, the constants\n// are swapped out here\nconst localSettings = localStorage.getSettings();\nif (localSettings.devLattice) {\n    Object.keys(devConstants).forEach((key) => {\n        constants[key] = devConstants[key];\n    })\n}\n\n\n//--------------------------------------------\n// CHAIN DATA SYNCING HELPERS\n//--------------------------------------------\nfunction fetchJSON(url, opts, cb) {\n    fetch(url, opts)\n    .then((response) => response.json())\n    .then((resp) => cb(null, resp))\n    .catch((err) => cb(err))\n}\n\n//====== UTXOS ==================\n// For mainnet (production env) we can bulk request data from the blockchain.com API\nfunction _fetchBtcUtxos(addresses, cb, utxos=[], offset=0) {\n    if (addresses.length === 0) {\n        // No more addresses left to check. We are done.\n        return cb(null, utxos);\n    }\n    const ADDRS_PER_CALL = 20;\n    const MAX_UTOXS_RET = 50;\n    const addrsToCheck = addresses.slice(0, ADDRS_PER_CALL);\n    let url = `${constants.BTC_PROD_DATA_API}/unspent?active=`;\n    for (let i = 0; i < addrsToCheck.length; i++) {\n        if (i === 0) {\n            url = `${url}${addrsToCheck[i]}`\n        } else {\n            url = `${url}|${addrsToCheck[i]}`\n        }\n    }\n    url = `${url}&limit=${MAX_UTOXS_RET}&confirmations=1`;\n    if (offset > 0) {\n        // If this is a follow up, fetch txs after an offset\n        url = `${url}&offset=${offset}`\n    }\n    fetchJSON(url, null, (err, data) => {\n        if (err)\n            return cb(err);\n        // Add confirmed UTXOs\n        data.unspent_outputs.forEach((u) => {\n            if (u.confirmations > 0) {\n                utxos.push({\n                    id: u.tx_hash_big_endian,\n                    vout: u.tx_output_n,\n                    value: u.value,\n                    address: _blockchainDotComScriptToAddr(u.script),\n                })\n            }\n        })\n        // Determine if we need to recurse on this set of addresses\n        if (data.unspent_outputs.length >= MAX_UTOXS_RET) {\n            return setTimeout(() => {\n                _fetchBtcUtxos(addresses, cb, utxos, offset+MAX_UTOXS_RET);\n            }, constants.RATE_LIMIT);\n        }\n        // Otherwise we are done with these addresses. Clip them and recurse.\n        addresses = addresses.slice(ADDRS_PER_CALL);\n        setTimeout(() => {\n            _fetchBtcUtxos(addresses, cb, utxos, 0);\n        }, constants.RATE_LIMIT);\n    })\n}\n\n// For testnet we cannot use blockchain.com - we have to request stuff from each\n// address individually.\nfunction _fetchBtcUtxosTestnet(addresses, cb, utxos=[]) {\n    const address = addresses.pop()\n    //@ts-expect-error\n    const url = `${constants.BTC_DEV_DATA_API}/address/${address}/utxo`;\n    fetchJSON(url, null, (err, data) => {\n        if (err)\n            return cb(err)\n        data.forEach((u) => {\n            // Add confirmed UTXOs\n            if (u.status.confirmed) {\n                utxos.push({\n                    id: u.txid,\n                    vout: u.vout,\n                    value: u.value,\n                    address,\n                })\n            }\n        })\n        if (addresses.length === 0) {\n            return cb(null, utxos);\n        }\n        setTimeout(() => {\n            _fetchBtcUtxosTestnet(addresses, cb, utxos)\n        }, constants.RATE_LIMIT)\n    })\n}\n\nexport function fetchBtcUtxos(addresses, cb) {\n    if (!addresses)\n        return cb('Cannot fetch UTXOs - bad input');\n    else if (addresses.length < 1)\n        return cb(null, []);\n    const addrsCopy = JSON.parse(JSON.stringify(addresses));\n    //@ts-expect-error\n    const f = constants.BTC_DEV_DATA_API ? _fetchBtcUtxosTestnet : _fetchBtcUtxos;\n    f(addrsCopy, cb);\n}\n//====== END UTXOS ==================\n\n//====== TXS ==================\n// For mainnet (production env) we can bulk request data from the blockchain.com API\nfunction _fetchBtcTxs(addresses, cb, txs=[], offset=0, isFirstCall=true) {\n    if (addresses.length === 0) {\n        // No more addresses left to check. We are done.\n        return cb(null, txs);\n    }\n\n    let url = `${constants.BTC_PROD_DATA_API}/multiaddr?active=`;\n    const isSingleAddr = isFirstCall && addresses.length === 1;\n    if (isSingleAddr) {\n        // Edge case when getting transactions from the blockchain.com API with\n        // only one address -- it appears when you call multiaddr with only one\n        // address you get only the output(s) associated with that one address,\n        // but if you call with multiple addresses that is no longer a problem.\n        // See: https://www.blockchain.com/btc/tx/ffc83686c911bcf7aa31a3d3ca014bae3b1044b2ec280c877758aa6b384cde0b\n        // 1. https://blockchain.info/rawaddr/3BrvBeRy8qMijfZHzo8VJ77gdL1W9EvgHj\n        // 2. https://blockchain.info/multiaddr?active=3C8BhX4CGeyH3nXrYqRL89jvpakTPW1z8k|3BrvBeRy8qMijfZHzo8VJ77gdL1W9EvgHj\n        url = `${constants.BTC_PROD_DATA_API}/rawaddr/`\n    }\n    const ADDRS_PER_CALL = 20;\n    const MAX_TXS_RET = 50;\n    const addrsToCheck = addresses.slice(0, ADDRS_PER_CALL);\n    for (let i = 0; i < addrsToCheck.length; i++) {\n        if (i === 0) {\n            url = `${url}${addrsToCheck[i]}`\n        } else {\n            url = `${url}|${addrsToCheck[i]}`\n        }\n    }\n    if (isSingleAddr) {\n        url = `${url}?limit=${MAX_TXS_RET}`;\n    } else {\n        url = `${url}&n=${MAX_TXS_RET}`;\n    }\n    if (offset > 0) {\n        // If this is a follow up, fetch txs after an offset\n        url = `${url}&offset=${offset}`\n    }\n    fetchJSON(url, null, (err, data) => {\n        if (err)\n            return cb(err);\n        // Add the new txs\n        const formattedTxs: any[] = [];\n        data.txs.forEach((t) => {\n            const ftx = {\n                timestamp: t.time * 1000,\n                confirmed: !!t.block_index,\n                id: t.hash,\n                fee: t.fee,\n                inputs: [],\n                outputs: [],\n            };\n            t.inputs.forEach((input) => {\n                ftx.inputs.push({\n                    addr: input.prev_out.addr,\n                    value: input.prev_out.value,\n                })\n            })\n            t.out.forEach((output) => {\n                ftx.outputs.push({\n                    addr: output.addr,\n                    value: output.value,\n                })\n            })\n            if (!ftx.confirmed) {\n                ftx.timestamp = -1;\n            }\n            formattedTxs.push(ftx);\n        })\n        txs = txs.concat(formattedTxs)\n        // Determine if we need to recurse on this set of addresses\n        if (formattedTxs.length >= MAX_TXS_RET) {\n            return setTimeout(() => {\n                _fetchBtcTxs(addresses, cb, txs, offset+MAX_TXS_RET, false);\n            }, constants.RATE_LIMIT);\n        }\n        // Otherwise we are done with these addresses. Clip them and recurse.\n        addresses = addresses.slice(ADDRS_PER_CALL);\n        setTimeout(() => {\n            _fetchBtcTxs(addresses, cb, txs, 0, false);\n        }, constants.RATE_LIMIT);\n    })\n}\n\n// For testnet we cannot use blockchain.com - we have to request stuff from each\n// address individually.\nfunction _fetchBtcTxsTestnet(addresses, cb, txs=[], lastSeenId=null) {\n    const address = addresses.pop()\n    //@ts-expect-error\n    let url = `${constants.BTC_DEV_DATA_API}/address/${address}/txs`;\n    if (lastSeenId) {\n        url = `${url}/chain/${lastSeenId}`\n    }\n    fetchJSON(url, null, (err, data) => {\n        if (err)\n            return cb(err)\n        const formattedTxs: any[] = [];\n        let confirmedCount = 0;\n        data.forEach((t) => {\n            const ftx = {\n                timestamp: t.status.block_time * 1000,\n                confirmed: t.status.confirmed,\n                id: t.txid,\n                fee: t.fee,\n                inputs: [],\n                outputs: [],                \n            }\n            t.vin.forEach((input) => {\n                ftx.inputs.push({\n                    addr: input.prevout.scriptpubkey_address,\n                    value: input.prevout.value\n                })\n            })\n            t.vout.forEach((output) => {\n                ftx.outputs.push({\n                    addr: output.scriptpubkey_address,\n                    value: output.value\n                })\n            })\n            if (!ftx.confirmed) {\n                ftx.timestamp = -1;\n            }\n            formattedTxs.push(ftx)\n            if (ftx.confirmed) {\n                confirmedCount += 1;\n            }\n\n        })\n        txs = txs.concat(formattedTxs)\n        if (confirmedCount >= 25) {\n            // Blockstream only returns up to 25 confirmed transactions per request\n            // https://github.com/Blockstream/esplora/blob/master/API.md#get-addressaddresstxs\n            // We need to re-request with the last tx\n            addresses.push(address)\n            return _fetchBtcTxsTestnet(addresses, cb, txs, txs[confirmedCount-1].id)\n        }\n        if (addresses.length === 0) {\n            return cb(null, txs);\n        }\n        setTimeout(() => {\n            _fetchBtcTxsTestnet(addresses, cb, txs)\n        }, constants.RATE_LIMIT)\n    })\n}\n\nexport function fetchBtcTxs(addresses, cb) {\n    if (!addresses)\n        return cb('Cannot fetch transactions - bad input');\n    else if (addresses.length < 1)\n        return cb(null, []);\n    const addrsCopy = JSON.parse(JSON.stringify(addresses));\n    //@ts-expect-error\n    const f = constants.BTC_DEV_DATA_API ? _fetchBtcTxsTestnet : _fetchBtcTxs;\n    f(addrsCopy, cb);\n}\n//====== END TXS ==================\n\nexport function fetchBtcPrice(cb) {\n    const url = 'https://api.blockchain.com/v3/exchange/tickers/BTC-USD'\n    fetchJSON(url, null, (err, data) => {\n        if (err)\n            return cb(err)\n        else if (!data || !data.last_trade_price)\n            return cb('Invalid price data returned');\n        return cb(null, data.last_trade_price)\n    })\n}\n\nexport function broadcastBtcTx(rawTx, cb) {\n    const opts = {\n        method: 'POST',\n        body: rawTx\n    };\n    fetch(constants.BTC_BROADCAST_ENDPOINT, opts)\n    .then((response) => response.text())\n    .then((resp) => cb(null, resp))\n    .catch((err) => cb(err))\n}\n//--------------------------------------------\n// END CHAIN DATA SYNCING HELPERS\n//--------------------------------------------\n\n//--------------------------------------------\n// OTHER HELPERS\n//--------------------------------------------\nexport function harden(x) {\n  return x + HARDENED_OFFSET;\n}\n\n// Determine how many inputs (utxos) need to be included in a transaction\n// given the desired value and fee rate\n// Returns the number of inputs to include or -1 if there isn't enough\n// value in the inputs provided to cover value + fee\nfunction _calcBtcTxNumInputs(utxos, value, feeRate, inputIdx=0, currentValue=0) {\n    if (inputIdx >= utxos.length) {\n        return -1; // indicates error\n    }\n    currentValue += utxos[inputIdx].value;\n    const numInputs = inputIdx + 1;\n    const numBytes = getBtcNumTxBytes(numInputs);\n    const fee = Math.floor(feeRate * numBytes);\n    if (currentValue >= (value + fee)) {\n        return numInputs;\n    }\n    inputIdx = numInputs;\n    return _calcBtcTxNumInputs(utxos, value, feeRate, inputIdx, currentValue);\n}\n\n// Convert a script from blockchain.com's API into an address\n// For some reason, they only return the script in the UTXO object.\n// We need to convert the script to a an address.\n// Since we know the purpose, we know the format of the address,\n// so we can slice out the pubkeyhash from the script and convert.\nfunction _blockchainDotComScriptToAddr(_scriptStr) {\n    const purpose = getBtcPurpose();\n    if (purpose === constants.BTC_PURPOSE_SEGWIT) {\n        const bech32Prefix = constants.BTC_SEGWIT_NATIVE_V0_PREFIX;\n        const bech32Version = 0; // Only v0 currently supported\n        // Script: |OP_0|0x20|pubkeyhash|\n        const pubkeyhash = Buffer.from(_scriptStr, 'hex').slice(-20)\n        const words = bech32.toWords(pubkeyhash);\n        words.unshift(bech32Version);\n        return bech32.encode(bech32Prefix, words);\n    } else if (purpose === constants.BTC_PURPOSE_WRAPPED_SEGWIT) {\n        const version = constants.BTC_WRAPPED_SEGWIT_VERSION;\n        // Script: |OP_HASH160|0x20|pubkeyhash|OP_EQUAL|\n        const pubkeyhash = Buffer.from(_scriptStr, 'hex').slice(2, 22);\n        return bs58check.encode(Buffer.concat([Buffer.from([version]), pubkeyhash]));\n    } else if (purpose === constants.BTC_PURPOSE_LEGACY) {\n        // Script: |OP_DUP|OP_HASH160|0x20|pubkeyhash|OP_EQUALVERIFY|OP_CHECKSIG|\n        const version = constants.BTC_WRAPPED_SEGWIT_VERSION;\n        const pubkeyhash = Buffer.from(_scriptStr, 'hex').slice(3, 23);\n        return bs58check.encode(Buffer.concat([Buffer.from([version]), pubkeyhash]));\n    }\n}\n\nexport function getBtcPurpose() {\n    const localSettings = localStorage.getSettings();\n    return  localSettings.btcPurpose ? \n            localSettings.btcPurpose : \n            constants.BTC_PURPOSE_NONE;\n}\n\n// Calculate how many bytes will be in a transaction given purpose and input count\n// Calculations come from: https://github.com/jlopp/bitcoin-transaction-size-calculator/blob/master/index.html\n// Not a perfect calculation but pretty close\nexport function getBtcNumTxBytes(numInputs) {\n    let inputSize, outputSize, inputWitnessSize\n    const purpose = getBtcPurpose();\n    if (purpose === constants.BTC_PURPOSE_LEGACY) {\n        inputSize = 148;\n        outputSize = 32;\n        inputWitnessSize = 0;\n    } else if (purpose === constants.BTC_PURPOSE_SEGWIT) {\n        inputSize = 91;\n        outputSize = 32;\n        inputWitnessSize = 107; // size(signature) + signature + size(pubkey) + pubkey\n    } else {\n        inputSize = 67.75;\n        outputSize = 31;\n        inputWitnessSize = 107; // size(signature) + signature + size(pubkey) + pubkey\n    }\n    const vFactor = purpose === constants.BTC_PURPOSE_LEGACY ? 0 : 0.75;\n    // Hardcode 2 outputs to avoid complexity in app state\n    const txVBytes =  10 + vFactor + inputSize * numInputs + outputSize * 2;\n  return (3 * vFactor) + txVBytes + inputWitnessSize * numInputs;\n}\n\nexport function buildBtcTxReq (   recipient, \n                                    btcValue, \n                                    utxos, \n                                    addrs, \n                                    changeAddrs, \n                                    feeRate=constants.BTC_DEFAULT_FEE_RATE,\n                                    isFullSpend=false) {\n    if (!addrs || !changeAddrs || addrs.length < 1 || changeAddrs.length < 1) {\n        return { error: 'No addresses (or change addresses). Please wait to sync.' };\n    }\n    // Convert value to satoshis\n    const satValue = Math.round(Number(btcValue) * constants.SATS_TO_BTC);\n    const numInputs = isFullSpend ? utxos.length : _calcBtcTxNumInputs(utxos, satValue, feeRate);\n    if (numInputs < 0) {\n        return { error: 'Balance too low.' }\n    } else if (numInputs > utxos.length) {\n        return { error: 'Failed to build transaction.' }\n    }\n    const bytesUsed = getBtcNumTxBytes(numInputs);\n    //@ts-expect-error\n    const fee = Math.floor(bytesUsed * feeRate);\n    // Build the request inputs\n    const BASE_SIGNER_PATH = [getBtcPurpose(), constants.BTC_COIN, constants.HARDENED_OFFSET];\n    const prevOuts: any[] = [];\n    for (let i = 0; i < numInputs; i++) {\n        const utxo = utxos[i];\n        let signerPath = null;\n        if (addrs.indexOf(utxo.address) > -1) {\n            signerPath = BASE_SIGNER_PATH.concat([0, addrs.indexOf(utxo.address)]);\n        } else if (changeAddrs.indexOf(utxo.address) > -1) {\n            signerPath = BASE_SIGNER_PATH.concat([1, changeAddrs.indexOf(utxo.address)]);\n        } else {\n            return { error: 'Failed to find holder of UTXO. Syncing issue likely.' };\n        }\n        const prevOut = {\n            txHash: utxo.id,\n            value: utxo.value,\n            index: utxo.vout,\n            signerPath,\n        }\n        prevOuts.push(prevOut);\n    }\n    // Return the request (i.e. the whole object)\n    const req = {\n        prevOuts,\n        recipient,\n        value: satValue,\n        fee,\n        // Send change to the latest change address\n        changePath: BASE_SIGNER_PATH.concat([1, changeAddrs.length -1]),\n    };\n    return { currency: 'BTC', data: req }\n}\n\nexport function validateBtcAddr(addr) {\n    if (addr === '') return null;\n    try {\n        bs58check.decode(addr);\n        return true;\n    } catch (e) {\n        try {\n            bech32.decode(addr);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n}\n\nexport function toHexStr(bn) {\n    const s = bn.toString(16);\n    const base = s.length % 2 === 0 ? s : `0${s}`;\n    return `0x${base}`; \n}\n\n// Filter out any duplicate objects based on `keys`\nexport function filterUniqueObjects(objs, keys) {\n    const filtered: any[] = [];\n    // Copy the objects in reversed order so that newer instances\n    // are applied first\n    const objsCopy = JSON.parse(JSON.stringify(objs)).reverse()\n    objsCopy.forEach((obj) => {\n        let isDup = false;\n        filtered.forEach((fobj) => {\n            let matchedKeys = 0\n            keys.forEach((key) => {\n                if (fobj[key] === obj[key]) {\n                    matchedKeys += 1;\n                }\n            })\n            if (matchedKeys >= keys.length) {\n                isDup = true;\n            }\n        })\n        if (!isDup) {\n            filtered.push(obj);\n        }\n    })\n    // Return in the original order\n    return filtered.reverse();\n}\n//--------------------------------------------\n// END OTHER HELPERS\n//--------------------------------------------","import React from 'react';\nimport 'antd/dist/antd.dark.css'\nimport './styles.css'\nimport { Button, Layout, Menu, PageHeader, Tag, Tooltip } from 'antd';\nimport { \n  HomeOutlined, AuditOutlined, MenuOutlined, TagsOutlined, \n  WalletOutlined, ArrowUpOutlined, ArrowDownOutlined, \n  ReloadOutlined, CreditCardOutlined, CheckOutlined, SettingOutlined \n} from '@ant-design/icons';\nimport { default as SDKSession } from '../sdk/sdkSession';\nimport { \n  Connect, Error, Landing, Loading, Pair, Send, \n  Receive, Wallet, EthContracts, Settings, ValidateSig, KvFiles \n} from './index'\nimport { constants, getBtcPurpose } from '../util/helpers'\nimport localStorage from '../util/localStorage';\nconst { Content, Footer, Sider } = Layout;\nconst LOGIN_PARAM = 'loginCache';\nconst DEFAULT_MENU_ITEM = 'menu-landing';\n\nclass Main extends React.Component<any, any> {\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: constants.DEFAULT_APP_NAME,\n      menuItem: DEFAULT_MENU_ITEM,\n      // GridPlusSDK session object\n      session: null,\n      collapsed: false,\n      error: { msg: null, cb: null },\n      pendingMsg: null,\n      // Waiting on asynchronous data, usually from the Lattice\n      waiting: false, \n      // Login info stored in localstorage. Can be cleared out at any time by the `logout` func\n      deviceID: null,\n      password: null,\n      // Last time the state was updated (comes from webwork setup by SdkSession)\n      lastUpdated: new Date(),\n      // Width of the current window\n      windowWidth: window.innerWidth,\n      // Track changes in the active wallet so we can refresh addresses when we detect one\n      walletIsExternal: null,\n      // Window params\n      keyringName: null,\n      // Validation check on Lattice hardware. Should draw a separate component\n      hwCheck: null,\n    };\n\n    // Bind local state updaters\n    this.handleMenuChange = this.handleMenuChange.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleKeyringOpener = this.handleKeyringOpener.bind(this);\n    this.syncActiveWalletState = this.syncActiveWalletState.bind(this);\n\n    // Bind callbacks whose calls may originate elsewhere\n    this.cancelConnect = this.cancelConnect.bind(this);\n    this.connectSession = this.connectSession.bind(this);\n    this.handlePair = this.handlePair.bind(this);\n    this.fetchBtcData = this.fetchBtcData.bind(this);\n    this.setError = this.setError.bind(this);\n    this.refreshWallets = this.refreshWallets.bind(this);\n    this.handlePageTurn = this.handlePageTurn.bind(this);\n\n    // Bind wrappers\n    this.retry = this.retry.bind(this);\n\n    // Bind listener callbacks\n    this.updateWidth = this.updateWidth.bind(this);\n  }\n\n  componentDidMount() {\n    // Listen for window resize\n    window.addEventListener('resize', this.updateWidth);\n\n    if (this.isMobile()) this.setState({collapsed: true})\n    // Metamask connects through a keyring and in these cases we need\n    // to utilize window.postMessage once we connect.\n    // We can extend this pattern to other apps in the future.\n    const params = new URLSearchParams(window.location.search);\n    const keyringName = params.get('keyring')\n    const hwCheck = params.get('hwCheck')\n    const forceLogin = params.get('forceLogin')\n    \n    // Workaround to support Firefox extensions. See `returnKeyringData` below.\n    const hasLoggedIn = params.get(LOGIN_PARAM)\n    if (hasLoggedIn) {\n      this.setState({ waiting: true, pendingMsg: 'Connecting...' })\n      return;\n    }\n    \n    if (keyringName) {\n      //@ts-expect-error\n      window.onload = this.handleKeyringOpener();\n      this.setState({ name: keyringName }, () => {\n        // Check if this keyring has already logged in. This login should expire after a period of time.\n        const prevKeyringLogin = localStorage.getKeyringItem(keyringName);\n        //@ts-expect-error\n        const keyringTimeoutBoundary = new Date().getTime() - constants.KEYRING_LOGOUT_MS;\n        if (!forceLogin && prevKeyringLogin && prevKeyringLogin.lastLogin > keyringTimeoutBoundary) {\n          this.connect( prevKeyringLogin.deviceID, \n                        prevKeyringLogin.password, \n                        () => this.connectSession(prevKeyringLogin));\n        } else {\n          // If the login has expired, clear it now.\n          localStorage.removeKeyringItem(keyringName)\n        }\n      })\n    } else if (hwCheck) {\n      // Lattice validation check builds this URL and includes a signature + preimage\n      this.setState({ hwCheck })\n    } else {\n      // Lookup deviceID and pw from storage\n      const { deviceID, password } = localStorage.getLogin()\n      if (deviceID && password)\n        this.connect(deviceID, password, () => this.connectSession())\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.state.session)\n      this.syncActiveWalletState();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWidth);\n  }\n\n  updateWidth() {\n    this.setState({ windowWidth:  window.innerWidth });\n    if (this.isMobile() && !this.state.collapsed) {\n      this.setState({ collapsed: true })\n    } else if (!this.isMobile() && this.state.collapsed) {\n      this.setState({ collapsed: false })\n    }\n  }\n\n  isMobile() {\n    return this.state.windowWidth < 500;\n  }\n\n  connect(deviceID, password, cb) {\n    const updates = { deviceID, password };\n    if (!this.state.session) {\n      // Create a new session if we don't have one.\n      const settings = localStorage.getSettings()\n      //@ts-expect-error\n      updates.session = new SDKSession(deviceID, this.setError, this.state.name, settings);\n    }\n    this.setState(updates, cb);\n  }\n\n  cancelConnect() {\n    // Cancel the pairing process if it was started (i.e. if the connection was started with\n    // a device that could be discovered). Most of the time this will not be possible because\n    // the cancel button that triggers this function will not be displayed once the device\n    // responds back that it is ready to pair.\n    if (this.state.session && this.state.session.client) {\n      this.state.session.pair('', () => {});\n    }\n    // Reset all SDK-related state variables so the user can re-connect to something else.\n    this.setState({ deviceID: null, password: null, session: null })\n    this.unwait()\n  }\n\n  isConnected() {\n    if (!this.state.session) return false;\n    return this.state.session.isConnected();\n  }\n\n  //------------------------------------------\n  // KEYRING HANDLERS\n  //------------------------------------------\n\n  handleKeyringOpener() {\n    this.setState({ openedByKeyring: true })\n  }\n\n  returnKeyringData() {\n    if (!this.state.openedByKeyring)\n      return;\n    // Save the login for later\n    localStorage.setKeyringItem(this.state.name, {\n      deviceID: this.state.deviceID,\n      password: this.state.password,\n      lastLogin: new Date().getTime()\n    })\n    // Send the data back to the opener\n    const data = {\n      deviceID: this.state.deviceID,\n      password: this.state.password,\n      endpoint: constants.BASE_SIGNING_URL,\n    };\n    // Check if there is a custom endpoint configured\n    const settings = localStorage.getSettings();\n    if (settings.customEndpoint && settings.customEndpoint !== '') {\n      data.endpoint = settings.customEndpoint;\n    }\n    this.handleLogout();\n    if (window.opener) {\n      // If there is a `window.opener` we can just post back\n      window.opener.postMessage(JSON.stringify(data), \"*\");\n      window.close();\n    } else {\n      // Otherwise we need a workaround to let the originator\n      // know we have logged in. We will put the login data\n      // into the URL and the requesting app will fetch that.\n      // Note that the requesting extension is now responsible for\n      // closing this web page.\n      const enc = Buffer.from(JSON.stringify(data)).toString('base64');\n      window.location.href = `${window.location.href}&${LOGIN_PARAM}=${enc}`;\n    }\n  }\n  //------------------------------------------\n  // END KEYRING HANDLERS\n  //------------------------------------------\n\n  //------------------------------------------\n  // LOCAL STATE UPDATES\n  //------------------------------------------\n  wait(msg=null, onCancel=null) {\n    this.setState({ pendingMsg: msg, waiting: true, onCancel });\n  }\n\n  unwait() {\n    this.setState({ pendingMsg: null, waiting: false, onCancel: null });\n  }\n\n  //------------------------------------------\n  // END LOCAL STATE UPDATES\n  //------------------------------------------\n\n  //------------------------------------------\n  // HEADER HANDLERS\n  //------------------------------------------\n  handlePageTurn(page) {\n    this.state.session.setPage(page);\n  }\n\n  handleMenuChange ({ key }) {\n    const stateUpdate = { menuItem: key }\n    //@ts-expect-error\n    if (this.isMobile()) stateUpdate.collapsed = true\n    this.setState(stateUpdate)\n  }\n\n  handleLogout(err=null) {\n    this.unwait();\n    this.state.session.disconnect();\n    this.setState({ session: null });\n    localStorage.removeLogin()\n    if (err && err === constants.LOST_PAIRING_MSG)\n      //@ts-expect-error\n      this.setError({ err })\n  }\n\n  setError(data={msg:null, cb:null}) {\n    // Handle case where user deletes pairing on the Lattice\n    if (data.msg === constants.LOST_PAIRING_ERR)\n      return this.handleLostPairing();\n    this.setState({ error: data, loading: false })\n  }\n  \n  //------------------------------------------\n  // END HEADER HANDLERS\n  //------------------------------------------\n\n  //------------------------------------------\n  // SDK HOOKS\n  //------------------------------------------\n\n  // Call `connect` on the SDK session. If we get an error back, clear out the client,\n  // as we cannot connect.\n  connectSession(data=this.state, showLoading=true) {\n    const { deviceID, password } = data;\n      // Sanity check -- this should never get hit\n    if (!deviceID || !password) {\n      //@ts-expect-error\n      return this.setError({ \n        msg: 'You must provide a deviceID and password. Please refresh and log in again. '\n      });\n    } else {\n      this.setError();\n    }\n    // Connect to the device\n    this.connect(deviceID, password, () => {\n      // Create a new session with the deviceID and password provided.\n      if (showLoading === true) {\n        this.wait(\"Looking for your Lattice\", this.cancelConnect);\n      }\n      this.state.session.connect(deviceID, password, (err, isPaired) => {\n        this.unwait();\n        // If the request was before we got our callback, exit here\n        if (!this.state.session || this.state.deviceID !== deviceID)\n          return;\n        if (err) {\n          // If we failed to connect, clear out the SDK session. This component will\n          // prompt the user for new login data and will try to create one.\n          this.setError({ \n            msg: err, \n            cb: () => { this.connectSession(data); } \n          });\n        } else {\n          // We connected!\n          // 1. Save these credentials to localStorage if this is NOT a keyring\n          if (!this.state.openedByKeyring) {\n            localStorage.setLogin({ deviceID, password })\n          }\n          // 2. Clear errors and alerts\n          this.setError();\n          // 3. Proceed based on state\n          if (isPaired && this.state.openedByKeyring) {\n            return this.returnKeyringData();\n          }\n        }\n      });\n    })\n  }\n\n  // Fetch up-to-date blockchain state data for the addresses stored in our\n  // SDKSession. Called after we load addresses for the first time\n  // Passing `isRecursion=true` means we will attempt to fetch new\n  // addresses based on known state data and if we do not yield any new ones\n  // we should exit. This is done to avoid naively requesting state data\n  // for all known addresses each time we add a new one based on a gap limit.\n  // For example, an initial sync will get 20 addrs and fetch state data. It \n  // may then request one address at a time and then state data for that one\n  // address until the gap limit is reached.\n  fetchBtcData(isRecursion=false) {\n    this.unwait();\n    this.setError();\n    this.wait('Fetching addresses');\n    this.state.session.fetchBtcAddresses((err, newAddrCounts) => {\n      if (err) {\n        console.error('Error fetching BTC addresses', err)\n        this.unwait();\n        this.setError({ \n          msg: 'Failed to fetch BTC addresses. Please try again.', \n          cb: this.fetchBtcData\n        });\n        return;\n      }\n      this.unwait()\n      const shouldExit =  isRecursion && \n                          newAddrCounts.regular === 0 && \n                          newAddrCounts.change === 0;\n      if (shouldExit) {\n        // Done syncing\n        return;\n      }\n      // If this is the first time we are calling this function,\n      // start by clearing UTXOs to avoid stale balances\n      if (!isRecursion) {\n        this.state.session.clearUtxos();\n      }\n      // Sync data now\n      this.wait('Syncing chain data')\n      const opts = isRecursion ? newAddrCounts : null;\n      this.state.session.fetchBtcStateData(opts, (err) => {\n        if (err) {\n          console.error('Error fetching BTC state data', err)\n          this.unwait();\n          this.setError({ \n            msg: 'Failed to fetch BTC state data. Please try again.', \n            cb: this.fetchBtcData \n          });\n          return;\n        }\n        // Recurse such that we exit if there are no new addresses\n        this.fetchBtcData(true);\n      })\n    })\n  }\n\n  handleLostPairing() {\n    // If we lost our pairing, we will have discovered that after trying to `connect`.\n    // The Lattice will draw a pairing screen, so to tear it down we need to send an\n    // invalid pairing code.\n    // TODO: This will still draw a pairing failure screen on the Lattice. There is\n    //       currently no way around this, but it is something we should address\n    //       in the future.\n    this.state.session.pair('x', () => {\n      this.handleLogout(constants.LOST_PAIRING_MSG);\n    });\n  }\n\n  refreshWallets() {\n    if (this.state.waiting === true)\n      return;\n    this.wait(\"Refreshing wallets\")\n    this.setState({ waiting: true })\n    this.state.session.refreshWallets((err) => {\n      if (err === constants.LOST_PAIRING_ERR)\n        return this.handleLostPairing();\n      \n      this.syncActiveWalletState(true);\n      this.unwait();\n      if (err)\n        return this.setError({ msg: err, cb: this.refreshWallets })\n      this.setError();\n      this.fetchBtcData()\n    })\n  }\n\n  // If we detect a new active wallet interface, save it and refresh wallet addresses\n  syncActiveWalletState(bypassRefresh=false) {\n    const activeWallet = this.state.session.getActiveWallet();\n    if (!activeWallet)\n      return;\n    const isExternal = activeWallet.external;\n    if (this.state.walletIsExternal !== isExternal) {\n      // We only want to refresh if we know another interface was active before. If this\n      // is the first check, just set the flag without calling refresh (it will get called)\n      // automatically.\n      const shouldRefresh = this.state.walletIsExternal !== null;\n      // Set state regardless\n      this.setState({ walletIsExternal: isExternal })\n      // Refresh if needed\n      if (shouldRefresh === true && bypassRefresh !== true)\n        this.refreshWallets();\n    }\n  }\n\n  //------------------------------------------\n  // END SDK HOOKS\n  //------------------------------------------\n\n  //------------------------------------------\n  // SDK CALLBACKS\n  //------------------------------------------\n\n  // Handle a `finalizePairing` response. There are three states:\n  // 1. Wrong secret: draw a new screen (try again) automatically\n  // 2. Timed out: display error screen and wait for user to try again\n  // 3. Success: load addresses\n  handlePair(data) {\n    // Hack to circumvent a weird screen artifact we are seeing in firmware\n    // NOTHING TO SEE HERE\n    if (data[0] === '_' || data[0] === '[') data = data.slice(1)\n\n    // If we didn't timeout, submit the secret and hope for success!\n    this.wait(\"Establishing connection with your Lattice\");\n    this.state.session.pair(data, (err) => {\n      this.unwait();\n      if (err) {\n        // If there was an error here, the user probably entered the wrong secret\n        const pairErr = 'Failed to pair. You either entered the wrong code or have already connected to this app.'\n        this.setError({ msg: pairErr, cb: this.connectSession });\n      } else if (this.state.openedByKeyring) {\n        this.returnKeyringData();\n      }\n    })\n  }\n\n  //------------------------------------------\n  // END SDK CALLBACKS\n  //------------------------------------------\n\n  //------------------------------------------\n  // RENDERERS\n  //------------------------------------------\n  renderMenu() {\n    const hideWallet = constants.BTC_PURPOSE_NONE === getBtcPurpose();\n    return (\n      <Sider\n        collapsed={this.state.collapsed}\n        collapsedWidth={0}\n      >\n        <Menu theme=\"dark\" mode=\"inline\" onSelect={this.handleMenuChange}>\n          {/* Setting title={null} removes floating tooltip on mobile */}\n          <Menu.Item key=\"menu-landing\" title={null}>\n            <HomeOutlined/>\n            <span>Home</span>\n            </Menu.Item>\n          <Menu.Item key=\"menu-kv-records\" title={null}>\n            <TagsOutlined />\n            <span>Address Tags</span>\n          </Menu.Item>\n          <Menu.Item key=\"menu-eth-contracts\" title={null}>\n            <AuditOutlined />\n            <span>Contracts</span>\n          </Menu.Item>\n          {/* <Menu.Item key=\"menu-permissions\">\n            <DollarOutlined/>\n            <span>Limits</span>\n          </Menu.Item> */}\n          <Menu.Item key=\"menu-settings\" title={null}>\n            <SettingOutlined />\n            <span>Settings</span>\n          </Menu.Item>\n          {!hideWallet ? (\n            <Menu.SubMenu title=\"BTC Wallet\" key=\"submenu-wallet\">\n              <Menu.Item key=\"menu-wallet\" title={null}>\n                <WalletOutlined />\n                <span>History</span>\n              </Menu.Item>\n              <Menu.Item key=\"menu-send\" title={null}>\n                <ArrowUpOutlined />\n                <span>Send</span>\n              </Menu.Item>\n              <Menu.Item key=\"menu-receive\" title={null}>\n                <ArrowDownOutlined />\n                <span>Receive</span>\n              </Menu.Item>\n            </Menu.SubMenu>\n          ) : null}\n        </Menu>\n      </Sider>\n    );\n  }\n\n  renderSidebar() {\n    if (this.state.name !== constants.DEFAULT_APP_NAME)\n      return\n    if (this.isConnected())\n      return this.renderMenu();\n  }\n\n  renderHeaderText() {\n    return (\n      <>\n        {this.isMobile() ? (\n          <Button\n            onClick={() => this.setState({ collapsed: !this.state.collapsed })}\n            type=\"text\"\n            size=\"large\"\n            icon={<MenuOutlined />}\n            style={{ backgroundColor: \"transparent\", marginRight: \"5px\" }}\n          />\n        ) : null}\n        <a\n          className=\"lattice-a\"\n          href=\"https://gridplus.io\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img  alt=\"GridPlus\" \n                src={'/gridplus-logo.png'}\n                style={{height: '1em'}}/>\n        </a>\n      </>\n    );\n  }\n\n  renderHeader() {\n    if (this.state.name !== constants.DEFAULT_APP_NAME)\n      return\n    let extra: any[] = [];\n    if (!this.isConnected())\n      return;\n\n    // Display a tag if there is a SafeCard inserted\n    let walletTag = null;\n    const size = this.isMobile() ? 'small' : 'middle';\n    const activeWallet = this.state.session.getActiveWallet();\n\n    if (activeWallet === null) {\n      walletTag = ( \n        //@ts-expect-error\n        <Button type=\"danger\" ghost onClick={this.refreshWallets} size={size}>No Wallet <ReloadOutlined/></Button>\n      )\n    } else {\n      walletTag = activeWallet.external === true ?  (\n        <Button type=\"primary\" ghost onClick={this.refreshWallets} size={size}><CreditCardOutlined/> SafeCard <ReloadOutlined/></Button>\n      ) : (\n        <Button type=\"default\" ghost onClick={this.refreshWallets} size={size}><CheckOutlined/> Lattice <ReloadOutlined/></Button>\n      )\n    }\n    if (walletTag) extra.push((\n      <Tooltip title=\"Refresh\" key=\"WalletTagTooltip\">{walletTag}</Tooltip>));\n\n    extra.push(\n      ( <Button key=\"logout-button\" type=\"primary\" onClick={this.handleLogout} size={size}>\n        Logout\n      </Button>)\n    );\n    return (\n      <PageHeader\n        title={this.renderHeaderText()}\n        ghost={true}\n        extra={!this.state.waiting ? extra : null}\n      />\n    )\n  }\n\n  renderErrorHeader() {\n    if (this.state.error.err) {\n      return (\n        <Error  msg={this.state.error.err} \n                retryCb={this.state.error.cb}\n        />\n      )\n    } else {\n      return;\n    }\n  }\n\n  retry(cb) {\n    this.setError();\n    return cb();\n  }\n\n  renderMenuItem() {\n    switch (this.state.menuItem) {\n      case 'menu-wallet':\n        return (\n          <Wallet isMobile={() => this.isMobile()}\n                  session={this.state.session}\n                  refreshData={this.fetchBtcData}\n                  lastUpdated={this.state.lastUpdated}\n                  pageTurnCb={this.handlePageTurn}\n          />\n        );\n      case 'menu-receive':\n        return (\n          <Receive session={this.state.session}\n                   isMobile={() => this.isMobile()}\n          />\n        );\n      case 'menu-send':\n        return (\n          <Send session={this.state.session}\n                isMobile={() => this.isMobile()}\n          />\n        )\n      case 'menu-eth-contracts':\n        return (\n          <EthContracts\n            session={this.state.session}\n            isMobile={() => this.isMobile()}\n          />\n        )\n      // case 'menu-permissions':\n      //   return (\n      //     <Permissions\n      //       session={this.state.session}\n      //       isMobile={() => this.isMobile()}\n      //     />\n      //   )   \n      case 'menu-settings':\n        return (\n          <Settings\n            isMobile={() => this.isMobile()}\n          />\n        )\n      case 'menu-kv-records':\n        return (\n          <KvFiles\n            session={this.state.session}\n            isMobile={() => this.isMobile()}\n          />\n        )\n      case DEFAULT_MENU_ITEM:\n        return (\n          <Landing isMobile={() => this.isMobile()}/>\n        );\n      default:\n        return;\n    }\n  }\n\n  renderContent() {\n    const hasActiveWallet = this.state.session ? this.state.session.getActiveWallet() !== null : false;\n    if (this.state.waiting) {\n      return (\n        <Loading  isMobile={() => this.isMobile()} \n                  msg={this.state.pendingMsg}\n                  onCancel={this.state.onCancel}/> \n      );\n    } else if (!this.isConnected()) {\n      // Connect to the Lattice via the SDK\n      return (\n        <Connect  submitCb={this.connectSession}\n                  cancelConnect={this.cancelConnect}\n                  name={this.state.name}\n                  isMobile={() => this.isMobile()}\n                  errMsg={this.state.error.msg}/>\n      );\n    } else if (!this.state.session.isPaired()) {\n      // Automatically try to pair if we have a session but no pairing  \n      return (\n        <Pair submit={this.handlePair}\n              isMobile={() => this.isMobile()}/>\n      );\n    } else if (this.state.openedByKeyring) {\n      // The window should close automatically, but just in case something goes wrong...\n      return (\n        <Loading isMobile={() => { this.isMobile() }}\n                  msg={\"Successfully connected to your Lattice! You may close this window.\"}\n                  spin={false}/>\n      )\n    } else if (!hasActiveWallet) {\n      const retry = this.state.session ? this.refreshWallets : null;\n      return (\n        <Error msg={\"No active wallet present for device!\"}\n               retryCb={retry} \n        />\n      )\n    } else {\n      return this.renderMenuItem();\n    }\n  }\n\n  renderFooter() {\n    return (\n      <Footer style={{ textAlign: 'center' }}>\n        ©2021 GridPlus Inc\n        {constants.ENV === 'dev' ? <Tag color=\"blue\" style={{margin: \"0 0 0 10px\"}}>DEV</Tag> : null}\n      </Footer>\n    )\n  }\n\n  renderPage() {\n    if (this.state.hwCheck !== null) {\n      return <ValidateSig data={this.state.hwCheck} isMobile={() => this.isMobile()}/>\n    } else {\n      return this.renderContent();\n    }\n  }\n\n  render() {\n    return (\n      <Layout style={{ minHeight: '100vh' }}>\n        {this.renderHeader()}\n        <Layout id=\"main-content-outer\">\n          {this.renderSidebar()}\n          <Layout id=\"main-content-inner\">\n            <Content style={{ margin: '0 0 0 0' }}>\n              {this.renderErrorHeader()}\n              <div style={{ margin: '30px 0 0 0'}}>\n                {this.renderPage()}        \n              </div>\n            </Content>\n            {this.renderFooter()}\n          </Layout>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default Main","import React from 'react';\nimport 'antd/dist/antd.dark.css'\nimport { Card, Col, Result, Row } from 'antd'\nimport { decode } from 'bs58'\nimport { constants } from '../util/helpers';\nconst ReactCrypto = require('gridplus-react-crypto').default;\nconst EC = require('elliptic').ec;\n\nconst PREIMAGE_LEN = 32;\nconst SIG_TEMPLATE_LEN =  74; // Struct containing DER sig\nconst CERT_TEMPLATE_LEN = 147;  // Struct containing pubkey, permissions, and signature on it\n\nclass ValidateSig extends React.Component<any, any> {\n  // Validate a signature for a message from a known signer on a known curve\n  // * msg - Expected ASCII string\n  // * signer - Expected buffer containing 65-byte public key\n  // * sig - Expected DER signature (string is best)\n  // * curve - Consumable curve for elliptic\n  _validate(msg, signer, sig, curve='secp256k1') {\n    const crypto = new ReactCrypto();\n    const ec = new EC(curve);\n    const msgHash = crypto.createHash('sha256').update(msg).digest();\n    const key = ec.keyFromPublic(signer, 'hex')\n    return key.verify(msgHash, sig);\n  }\n\n  getPreimage() {\n    return decode(this.props.data).slice(0, PREIMAGE_LEN).toString()\n  }\n\n  getCert() {\n    const start = PREIMAGE_LEN + SIG_TEMPLATE_LEN;\n    const _certData = decode(this.props.data).slice(start, start + CERT_TEMPLATE_LEN);\n    const METADATA_LEN = 8;\n    const PUBKEY_LEN = 65;\n    const preimage = _certData.slice(2, METADATA_LEN + PUBKEY_LEN);\n    // When we issue the cert, we are signing metadata + the public key. However, this\n    // cert gets packed into a template along with this metadata and the length of the data in\n    // that template is variable, depending on the size of the DER sig (which we call a \"cert\").\n    // We sign metadata with 0 length at the outset because we won't know the eventual length.\n    // Therefore this byte needs to be reuturned to its initial 0 value in order to validate the \"cert\".\n    // preimage[1] = 0;\n    const pubkey = Buffer.from(_certData.slice((METADATA_LEN), (METADATA_LEN + PUBKEY_LEN))).toString('hex');\n    const _sig = Buffer.from(_certData.slice((METADATA_LEN + PUBKEY_LEN), (METADATA_LEN + PUBKEY_LEN + SIG_TEMPLATE_LEN)));\n    const sig = _sig.slice(0, (2 + _sig[1]));\n    return { pubkey, preimage, sig }\n  }\n\n  validateCert() {\n    const cert = this.getCert();\n    return this._validate(cert.preimage, constants.LATTICE_CERT_SIGNER, cert.sig)\n  }\n\n  validateSig() {\n    try {\n      if (!this.validateCert())\n        return false;\n      const preimage = this.getPreimage();\n      const cert = this.getCert();\n      const _sig = Buffer.from(decode(this.props.data).slice(PREIMAGE_LEN, PREIMAGE_LEN + SIG_TEMPLATE_LEN));\n      const sig = _sig.slice(0, (2 + _sig[1]))\n      return this._validate(preimage, cert.pubkey, sig);\n    } catch (err) {\n      console.error(`Encountered error validating signature: ${err.message}`)\n      return false;\n    }\n  }\n\n  renderResult() {\n    let result = {\n      status: \"warning\",\n      title: \"Could not Verify Authenticity\",\n      subTitle: \"We could not verify the authenticity of this signature or signer.\"\n    };\n    if (true === this.validateSig()) {\n      result.status = \"success\";\n      result.title = \"Verified\";\n      result.subTitle = \"The signer is authentic!\"\n    }\n    return (\n      <Result\n        //@ts-expect-error\n        status={result.status}\n        title={result.title}\n        subTitle={result.subTitle}\n      />\n    )\n  }\n\n\n  render() {\n    const spanLength = this.props.isMobile() ? 18 : 10;\n    const spanOffset = this.props.isMobile() ? 3 : 7; \n    return (\n      <Row>\n        <Col span={spanLength} offset={spanOffset}>\n          <center>\n            <Card title=\"Validate Hardware\" bordered={true}>\n              {this.renderResult()}\n              <p><b>Message:</b> {this.getPreimage()}</p>\n            </Card>\n          </center>\n        </Col>\n      </Row>\n    )\n  }\n\n\n}\n\nexport default ValidateSig","import localStorage from './localStorage';\n\nclass StorageSession {\n  data: any;\n  store: any;\n  \n  constructor(device_id, pass) {\n    this.data = null;\n    this.store = localStorage.getRootStore();\n  }\n\n  isObject(o) {\n    try {\n      return o && typeof o === 'object' && !Array.isArray(o);\n    } catch(e) {\n      return false;\n    }\n  }\n\n  updateBranch(newData, oldData, key) {\n    // If we have reached the end of oldData\n    if (!this.isObject(oldData))\n      return;\n\n    // If `newData[key]` is a nested object, start that object\n    // clone in `oldData`\n    if (this.isObject(newData[key]) && !oldData[key])\n      oldData[key] = {};\n\n    // Loop through all keys in new data at this level. We will\n    // be adding each one as a branch\n    if (this.isObject(newData[key])) {\n      Object.keys(newData[key]).forEach((newKey) => {\n        // If there are more keys nested in this branch, update them first\n        if (this.isObject(newData[key][newKey]))\n          this.updateBranch(newData[key], oldData[key], newKey)\n        // No more keys in this branch? Finally copy this data to `oldData`\n        else\n          oldData[key][newKey] = newData[key][newKey];\n      });\n    } else {\n      // If this is a non-ojbect, copy it directly\n      oldData[key] = newData[key];\n    }\n  }\n\n  save(deviceID, wallet_uid, data) {\n    // Get the data for this deviceID\n    if (!this.store[deviceID]) this.store[deviceID] = {};\n    if (!this.store[deviceID][wallet_uid]) this.store[deviceID][wallet_uid] = {};\n    // Update relevant keys without overwriting anything else\n    Object.keys(data).forEach((k) => {\n      this.updateBranch(data, this.store[deviceID][wallet_uid], k);\n    })\n    // Update the store itself\n    localStorage.setRootStore(this.store);\n  }\n\n  getWalletData(deviceID, wallet_uid) {\n    if (!this.store[deviceID]) this.store[deviceID] = {};\n    if (!this.store[deviceID][wallet_uid]) this.store[deviceID][wallet_uid] = {};\n    return this.store[deviceID][wallet_uid];\n  }\n}\n\n\nexport default StorageSession;","import { Client } from 'gridplus-sdk';\nimport { SDKAddresses } from '../types/SDKAddresses';\nimport {\n  broadcastBtcTx, constants, fetchBtcPrice,\n  fetchBtcTxs, fetchBtcUtxos, filterUniqueObjects, getBtcPurpose, harden\n} from '../util/helpers';\nimport { default as StorageSession } from '../util/storageSession';\nconst Buffer = require('buffer/').Buffer;\nconst ReactCrypto = require('gridplus-react-crypto').default;\n\nclass SDKSession {\n  client: any;\n  crypto: any;\n  name: any;\n  storageSession: any;\n  deviceID: any;\n  stateUpdateHandler: any;\n  page: number;\n  baseUrl: any;\n  addresses: SDKAddresses;\n  btcTxs: any[];\n  btcUtxos: any[];\n  lastFetchedBtcData: number;\n  btcPrice: number;\n\n  constructor(deviceID, stateUpdateHandler, name=null, opts: any = {}) {\n    this.client = null;\n    this.crypto = null;\n    this.name = name || constants.DEFAULT_APP_NAME; // app name\n    // Make use of localstorage to persist wallet data\n    this.storageSession = null;\n    // Save the device ID for the session\n    this.deviceID = deviceID;\n    // Handler to call when we get state updates\n    this.stateUpdateHandler = stateUpdateHandler;\n\n    // Current page of results (transactions) for the wallet\n    this.page = 1; // (1-indexed)\n\n    // Configurable settings\n    this.baseUrl = opts.customEndpoint ? opts.customEndpoint : constants.BASE_SIGNING_URL;\n\n    // BTC wallet data\n    this.addresses = {};          // Contains BTC and BTC_CHANGE addresses\n    this.btcTxs = [];             // Contains all txs for all addresses\n    this.btcUtxos = [];           // Contains all utxos for all addresses\n    this.lastFetchedBtcData = 0;  // Timestamp containing the last time we updated data\n    this.btcPrice = 0;            // Price in dollars of full unit BTC\n    \n    // Go time\n    this.getBtcWalletData();\n  }\n\n  disconnect() {\n    this.client = null;\n    this.saveBtcWalletData();\n    this.storageSession = null;\n    this.deviceID = null;\n  }\n\n  isConnected() {\n    return this.client !== null;\n  }\n\n  isPaired() {\n    return this.client.isPaired || false;\n  }\n\n  resetStateData() {\n    this.addresses = {};\n    this.btcTxs = [];\n    this.btcUtxos = [];\n  }\n  \n  getBtcDisplayAddress() {\n    // If we have set the next address to use, display that.\n    // Otherwise, fallback on the first address.\n    const lastUsed = this._getLastUsedBtcAddrIdx()\n    if (lastUsed > -1 && this.addresses.BTC[lastUsed + 1])\n      return this.addresses.BTC[lastUsed + 1];\n    else if (this.addresses.BTC && this.addresses.BTC.length > 0)\n      return this.addresses.BTC[0];\n    else\n      return null;\n  }\n\n  getActiveWallet() {\n    if (!this.client) return null;\n    return this.client.getActiveWallet();\n  }\n\n  setPage(newPage=1) {\n    this.page = newPage;\n  }\n\n  getPage() {\n    return this.page;\n  }\n\n  // Prepare addresses for caching in localStorage\n  dryAddresses() {\n    const driedAddrs: SDKAddresses = {};\n    const hasBTCAddrs = this.addresses.BTC && this.addresses.BTC.length > 0;\n    const hasBTCChangeAddrs = this.addresses.BTC_CHANGE && this.addresses.BTC_CHANGE.length > 0;\n    const BTC_PURPOSE = getBtcPurpose();\n    if (BTC_PURPOSE === constants.BTC_PURPOSE_NONE) {\n      // We cannot continue if the wallet is hidden\n      return driedAddrs;\n    }\n    if (hasBTCAddrs) {\n      driedAddrs.BTC = {};\n      driedAddrs.BTC[BTC_PURPOSE] = this.addresses.BTC || [];\n    }\n    if (hasBTCChangeAddrs) {\n      driedAddrs.BTC_CHANGE = {};\n      driedAddrs.BTC_CHANGE[BTC_PURPOSE] = this.addresses.BTC_CHANGE || [];\n    }\n    return driedAddrs;\n  }\n\n  // Pull addresses out of cached localStorage data\n  rehydrateAddresses(allAddrs: SDKAddresses = {}) {\n    const rehydratedAddrs: SDKAddresses = {};\n    const BTC_PURPOSE = getBtcPurpose();\n    if (BTC_PURPOSE === constants.BTC_PURPOSE_NONE) {\n      // We cannot continue if the wallet is hidden\n      return rehydratedAddrs;\n    }\n    if (allAddrs.BTC) {\n      rehydratedAddrs.BTC = allAddrs.BTC[BTC_PURPOSE];\n    }\n    if (allAddrs.BTC_CHANGE) {\n      rehydratedAddrs.BTC_CHANGE = allAddrs.BTC_CHANGE[BTC_PURPOSE];\n    }\n    this.addresses = rehydratedAddrs;\n  }\n\n  saveBtcWalletData() {\n    // This function should never be called without a deviceID \n    // or StorageSession\n    if (!this.deviceID || !this.storageSession) return;\n\n    // Package data and save it\n    // NOTE: We are only storing addresses at this point, as\n    // the blockchain state needs to be up-to-date and is therefore\n    // not very useful to store.\n    const BTC_PURPOSE = getBtcPurpose();\n    if (BTC_PURPOSE === constants.BTC_PURPOSE_NONE) {\n      console.error('Cannot save BTC wallet data when wallet is hidden');\n      return;\n    }\n    const walletData = {\n      [constants.BTC_WALLET_STORAGE_KEY]: {\n        [BTC_PURPOSE]: {\n          addresses: this.dryAddresses(),\n          btcTxs: this.btcTxs,\n          btcUtxos: this.btcUtxos,\n          lastFetchedBtcData: this.lastFetchedBtcData,\n        },\n        btcPrice: this.btcPrice,\n      }\n    };\n    const activeWallet = this.client ? this.client.getActiveWallet() : null;\n    if (this.client && activeWallet !== null) {\n      const wallet_uid = activeWallet.uid.toString('hex');\n      this.storageSession.save(this.deviceID, wallet_uid, walletData);\n    }\n  }\n\n  getBtcWalletData() {\n    // Create a storage session only if we have a deviceID and don't\n    // have a current storage session\n    if (this.deviceID && !this.storageSession)\n      //@ts-expect-error\n      this.storageSession = new StorageSession(this.deviceID);\n    if (this.client) {\n      // Make sure the btc wallet is enabled\n      const BTC_PURPOSE = getBtcPurpose();\n      if (BTC_PURPOSE === constants.BTC_PURPOSE_NONE) {\n        console.error('Cannot get wallet data when wallet is hidden.');\n        return;\n      }\n      // If we have a client and if it has a non-zero active wallet UID,\n      // lookup the addresses corresponding to that wallet UID in storage.\n      const activeWallet = this.getActiveWallet();\n      if (activeWallet === null) {\n        // No active wallet -- reset addresses\n        this.addresses = {};\n      } else {\n        const uid = activeWallet.uid.toString('hex')\n        // Rehydrate the data\n        const data = this.storageSession.getWalletData(this.deviceID, uid);\n        if (!data || !data[constants.BTC_WALLET_STORAGE_KEY])\n          return;\n        const walletData = data[constants.BTC_WALLET_STORAGE_KEY];\n        // Price is saved outside of the purpose sub-object\n        if (walletData.btcPrice) {\n          this.btcPrice = walletData.btcPrice;\n        }\n        // Unpack wallet data associated with the current btc purpose\n        const purposeSpecificData = walletData[BTC_PURPOSE];\n        if (!purposeSpecificData)\n          return;\n        if (purposeSpecificData.addresses) {\n          this.rehydrateAddresses(purposeSpecificData.addresses);\n        }\n        if (purposeSpecificData.btcTxs) {\n          this.btcTxs = purposeSpecificData.btcTxs;\n        }\n        if (purposeSpecificData.btcUtxos) {\n          this.btcUtxos = purposeSpecificData.btcUtxos;\n        }\n        if (purposeSpecificData.lastFetchedBtcData) {\n          this.lastFetchedBtcData = purposeSpecificData.lastFetchedBtcData;\n        }\n      }\n    }\n  }\n\n  _tryConnect(deviceID, pw, cb, _triedLocal=false) {\n    let baseUrl = this.baseUrl;\n    let tmpTimeout = constants.SHORT_TIMEOUT; // Artificially short timeout just for connecting\n    if (_triedLocal === false) {\n      baseUrl = `http://lattice-${deviceID}.local:8080`\n      tmpTimeout = 5000 // Shorten the timeout even more since we should discover quickly if device is on LAN\n    }\n    // Derive a keypair from the deviceID and password\n    // This key doesn't hold any coins and only allows this app to make\n    // requests to a particular device. Nevertheless, the user should\n    // enter a reasonably strong password to prevent unwanted requests\n    // from nefarious actors.\n    const key = this._genPrivKey(deviceID, pw, this.name);\n    // If no client exists in this session, create a new one and\n    // attach it.\n    let client;\n    try {\n      client = new Client({ \n        name: this.name,\n        crypto: this.crypto,\n        privKey: key,\n        baseUrl,\n        timeout: tmpTimeout, // Artificially short timeout for simply locating the Lattice\n      })\n    } catch (err) {\n      return cb(err.toString());\n    }\n    client.connect(deviceID, (err) => {\n      if (err) {\n        if (_triedLocal === false) {\n          console.warn('Failed to connect to Lattice over LAN. Falling back to cloud routing.')\n          return this._tryConnect(deviceID, pw, cb, true); \n        } else {\n          console.error('Failed to connect via cloud routing.')\n          return cb(err);\n        }\n      } else if (_triedLocal === false) {\n        console.log('Successfully connected to Lattice over LAN.')\n      }\n      // Update the timeout to a longer one for future async requests\n      client.timeout = constants.ASYNC_SDK_TIMEOUT;\n      this.client = client;\n      // Setup a new storage session if these are new credentials.\n      // (This call will be bypassed if the credentials are already saved\n      // in localStorage because getBtcWalletData is also called in the constructor)\n      this.deviceID = deviceID;\n      this.getBtcWalletData();\n      return cb(null, client.isPaired);\n    });\n  }\n\n  connect(deviceID, pw, cb) {\n    // return this._tryConnect(deviceID, pw, cb);\n    return this._tryConnect(deviceID, pw, cb, true); // temporarily disable local connect\n  }\n\n  refreshWallets(cb) {\n    if (this.client) {\n      const prevWallet = JSON.stringify(this.client.getActiveWallet());\n      this.client.connect(this.deviceID, (err) => {\n        // If we lost connection, the user most likely removed the pairing and will need to repair\n        if (false === this.client.isPaired)\n          return cb(constants.LOST_PAIRING_ERR);\n        if (err)\n          return cb(err);\n        // If we pulled a new active wallet, reset balances + transactions\n        // so we can reload a new set.\n        const newWallet = JSON.stringify(this.client.getActiveWallet());\n        if (newWallet !== prevWallet)\n          this.resetStateData();\n        // Update storage. This will remap to a new localStorage key if the wallet UID\n        // changed. If we didn't get an active wallet, it will just clear out the addresses\n        this.getBtcWalletData();\n        return cb(null);\n      })\n    } else {\n      return cb('Lost connection to Lattice. Please refresh.');\n    }\n  }\n\n  addAbiDefs(defs, cb) {\n    this.client.addAbiDefs(defs, cb);\n  }\n\n  addPermissionV0(req, cb) {\n    this.client.addPermissionV0(req, cb);\n  }\n\n  pair(secret, cb) {\n    this.client.pair(secret, cb);\n  }\n\n  sign(req, cb) {\n    // Get the tx payload to broadcast\n    this.client.sign(req, (err, res) => {\n      if (err) {\n        return cb(err);\n      }\n      broadcastBtcTx(res.tx, (err, txid) => {\n        if (err)\n          return cb(`Error broadcasting transaction: ${err.message}`)\n        return cb(null, txid)\n      })\n    })\n  }\n\n  _genPrivKey(deviceID, pw, name) {\n    const key = Buffer.concat([\n      Buffer.from(pw), \n      Buffer.from(deviceID),\n      Buffer.from(name),\n    ])\n    // Create a new instance of ReactCrypto using the key as entropy\n    this.crypto = new ReactCrypto(key);\n    return this.crypto.createHash('sha256').update(key).digest();\n  }\n\n  //----------------------------------------------------\n  // NEW STUFF - REWRITING ADDRESS/DATA FETCHING FOR BTC WALLET\n  //----------------------------------------------------\n\n  // Get a set of either pending or confirmed transactions from the full\n  // set of known BTC txs\n  getBtcTxs(confirmed=true) {\n    const txs: any[] = [];\n    this.btcTxs.forEach((t) => {\n      if (confirmed && t.confirmed) {\n        txs.push(t)\n      } else if (!confirmed && !t.confirmed) {\n        txs.push(t)\n      }\n    })\n    return txs;\n  }\n\n  // Get the set of known UTXOs belonging to our known set of BTC addresses\n  getBtcUtxos() {\n    return this.btcUtxos;\n  }\n\n  // Get the BTC balance, which is simply a sum of UTXO values\n  // Returns the balance in satoshis\n  getBtcBalance() {\n    let balance = 0;\n    this.btcUtxos.forEach((u) => {\n      balance += u.value;\n    })\n    return balance;\n  }\n\n  // Fetch necessary addresses based on state data. We need to fetch addresses\n  // for both BTC and BTC_CHANGE such that we have fetched GAP_LIMIT past the last\n  // used address. An address is \"used\" if it has at least one transaction associated.\n  // This function will automatically fetch both BTC and BTC_CHANGE addresses up to\n  // the associated GAP_LIMITs and updates state internally.\n  // Returns a callback containing params (error, numFetched), where `numFetched` is\n  // the total number of *new* addresses we fetched. If this number is >0, it signifies\n  // we should re-fetch transaction data for our new set of addresses.\n  fetchBtcAddresses(cb, isChange=false, totalFetched={regular: 0, change: 0}) {\n    const BTC_PURPOSE = getBtcPurpose();\n    if (BTC_PURPOSE === constants.BTC_PURPOSE_NONE) {\n      // We cannot continue if the wallet is hidden\n      return cb('Cannot request BTC addresses while wallet is hidden.');\n    }\n    const lastUsedIdx = this._getLastUsedBtcAddrIdx(isChange);\n    const currentAddrs = (isChange ? this.addresses.BTC_CHANGE : this.addresses.BTC) || [];\n    const GAP_LIMIT = isChange ?  constants.BTC_CHANGE_GAP_LIMIT : \n                                  constants.BTC_MAIN_GAP_LIMIT;\n    const targetIdx = lastUsedIdx + 1 + GAP_LIMIT;\n    const maxToFetch = targetIdx - currentAddrs.length;\n    const nToFetch = Math.min(constants.BTC_ADDR_BLOCK_LEN, maxToFetch)\n    if (nToFetch > 0) {\n      // If we have closed our gap limit we need to get more addresses\n      const changeIdx = isChange ? 1 : 0;\n      const opts = {\n        startPath: [ \n          BTC_PURPOSE, constants.BTC_COIN, harden(0), changeIdx, currentAddrs.length \n        ],\n        n: nToFetch,\n        skipCache: true,\n      }\n      this._getAddresses(opts, (err, addresses) => {\n        if (err)\n          return cb(err);\n        // Track the number of new addresses we fetched\n        if (isChange) {\n          totalFetched.change += nToFetch;\n        } else {\n          totalFetched.regular += nToFetch;\n        }\n        // Save the addresses to memory and also update them in localStorage\n        // Note that we do need to track index here\n        if (isChange) {\n          this.addresses.BTC_CHANGE = currentAddrs.concat(addresses);\n        } else {\n          this.addresses.BTC = currentAddrs.concat(addresses);\n        }\n        console.log('Fetched BTC', this.addresses.BTC)\n        console.log('Fetched BTC_CHANGE', this.addresses.BTC_CHANGE)\n        // If we need to fetch more, recurse\n        if (maxToFetch > nToFetch) {\n          this.fetchBtcAddresses(cb, isChange, totalFetched);\n        } else if (!isChange) {\n          // If we are done fetching main BTC addresses, switch to the change path\n          this.fetchBtcAddresses(cb, true, totalFetched);\n        } else {\n          this.saveBtcWalletData();\n          cb(null, totalFetched);\n        }\n      })\n    } else if (!isChange) {\n      // If we are done fetching main BTC addresses, switch to the change path\n      this.fetchBtcAddresses(cb, true, totalFetched);\n    } else {\n      // Nothing to fetch\n      this.saveBtcWalletData();\n      cb(null, totalFetched);\n    }\n  }\n\n  // We want to clear UTXOs when we re-sync because they could have been spent.\n  // Due to the nature of `fetchBtcStateData`, we need to append new UTXOs to\n  // the existing set as we sync data, so it is best to call this function once\n  // from the component that is starting the resync.\n  clearUtxos() {\n    this.btcUtxos = [];\n  }\n\n  // Fetch transactions and UTXOs for all known BTC addresses (including change)\n  // Calls to appropriate Bitcoin data provider and updates state internally.\n  // Returns a callback with params (error)\n  fetchBtcStateData(opts, cb, isChange=false, txs=[], utxos=[]) {\n    // Determine which addresses for which to fetch state.\n    // If we get non-zero `opts` values it means this is a follow up call\n    // and we only want to fetch data for new addresses we've collected\n    // rather than data for all known addresses.\n    let addrs = (isChange ? this.addresses.BTC_CHANGE : this.addresses.BTC) || [];\n    if (opts && opts.regular > 0) {\n      addrs = this.addresses.BTC.slice(-opts.regular);\n      opts.regular = 0;\n    } else if (opts && opts.change > 0) {\n      // If we have new change addrs but not new regular addrs,\n      // we can force a switch to change here so we don't re-scan\n      // the same regular addresses we have already scanned.\n      isChange = true;\n      addrs = this.addresses.BTC_CHANGE.slice(-opts.change);\n      opts.change = 0;\n    }\n    fetchBtcPrice((err, btcPrice) => {\n      if (err) {\n        // Don't fail out if we can't get the price - just display 0\n        console.error('Failed to fetch price:', err);\n        btcPrice = 0;\n      }\n      fetchBtcTxs(addrs, (err, _txs) => {\n        if (err)\n          return cb(err);\n        else if (!_txs)\n          return cb('Failed to fetch transactions');\n        txs = txs.concat(_txs);\n        fetchBtcUtxos(addrs, (err, _utxos) => {\n          if (err)\n            return cb(err);\n          else if (!_utxos)\n            return cb('Failed to fetch UTXOs');\n          utxos = utxos.concat(_utxos);\n          if (!isChange) {\n            // Once we get data for our BTC addresses, switch to change\n            this.fetchBtcStateData(opts, cb, true, txs, utxos);\n          } else {\n            // All done! Filter/process data and save\n            this.btcPrice = btcPrice;\n            this.lastFetchedBtcData = Math.floor(Date.now());\n            const newTxs = this.btcTxs.concat(txs);\n            this.btcTxs = filterUniqueObjects(newTxs, ['id']);\n            this._processBtcTxs();\n            const newUtxos = this.btcUtxos.concat(utxos);\n            // UTXOs should already be filtered but it doesn't hurt to\n            // do a sanity check filter here.\n            this.btcUtxos =   filterUniqueObjects(newUtxos, ['id', 'vout'])\n                              .sort((a, b) => { return b.value - a.value });\n            this.saveBtcWalletData();\n            cb(null);\n          }\n        })\n      })\n    })\n  }\n\n  // Generic caller to SDK getAddress route with retry mechanism\n  _getAddresses(opts, cb) {\n    this.client.getAddresses(opts, (err, addresses) => {\n      // Catch an error, but if the device is busy it probably means it is currently\n      // caching a batch of new addresses. Continue the loop through this request until\n      // it hits.\n      if (err && err !== 'Device Busy') {\n        setTimeout(() => {\n          return cb(err);\n        }, 2000);\n      } else {\n        // To avoid concurrency problems on an initial sync, we need to wait\n        // for the device to refresh addresses before completing the callback\n        if (err === 'Device Busy') {\n          return this._getAddresses(opts, cb)\n        } else {\n          return cb(null, addresses);\n        }\n      }\n    })\n  }\n\n  // Get the highest index address that has been used for either BTC or BTC_CHANGE\n  _getLastUsedBtcAddrIdx(change=false) {\n    const coin = change ? 'BTC_CHANGE' : 'BTC';\n    const addrs = this.addresses[coin] || [];\n    const txs = this.btcTxs || [];\n    let lastUsed = -1;\n    for (let i = 0; i < txs.length; i++) {\n      if (txs[i].confirmed) {\n        let maxUsed = lastUsed;\n        txs[i].inputs.forEach((input) => {\n          if (addrs.indexOf(input.addr) > maxUsed)\n            maxUsed = addrs.indexOf(input.addr);\n        })\n        txs[i].outputs.forEach((output) => {\n          if (addrs.indexOf(output.addr) > maxUsed)\n            maxUsed = addrs.indexOf(output.addr);\n        })\n        if (maxUsed > lastUsed)\n          lastUsed = maxUsed;\n      }\n    }\n    return lastUsed;\n  }\n\n  // Loop through known txs, determining value and recipient\n  // based on known addresses.\n  // Recipient should be the first address\n  // If the recipient is one of our addresses, the transaction is inbound\n  // If the transaction is inbound, value is SUM(outputs to our addresses)\n  // If the transaction is outbound, value is SUM(inputs) - SUM(outputs to our addresses)\n  _processBtcTxs() {\n    const allAddrs = this.addresses.BTC.concat(this.addresses.BTC_CHANGE);\n    const processedTxs: any[] = [];\n    const txs = JSON.parse(JSON.stringify(this.btcTxs));\n    txs.forEach((tx) => {\n      tx.recipient = tx.outputs[0].addr;\n      tx.incoming = allAddrs.indexOf(tx.recipient) > -1;\n      tx.value = 0;\n      if (allAddrs.indexOf(tx.recipient) === -1) {\n        // Outbound\n        tx.inputs.forEach((input) => {\n          tx.value += input.value;\n        })\n        tx.value -= tx.fee;\n        tx.outputs.forEach((output) => {\n          if (allAddrs.indexOf(output.addr) > -1)\n            tx.value -= output.value;\n        })\n      } else {\n        // Inbound\n        tx.outputs.forEach((output) => {\n          if (allAddrs.indexOf(output.addr) > -1)\n            tx.value += output.value;\n        })\n        // Handle edge case where this is an internal tx\n        let sentFromAddrs = 0;\n        let totalValue = 0;\n        tx.inputs.forEach((input) => {\n          totalValue += input.value;\n          if (allAddrs.indexOf(input.addr) > -1)\n            sentFromAddrs += input.value;\n        })\n        // If any of the inputs were from one of our addresses,\n        // subtract those inputs from the total display amount\n        if (sentFromAddrs > 0) {\n          tx.value -= sentFromAddrs;\n        }\n        // If ALL inputs were from our addresses, set value to 0.\n        // This is just for display purposes and this is an edge case\n        // so it's not super important, but I'm not sure what the\n        // standard way to handle this is. I think it makes most\n        // sense to show this as an internal tx with a 0 value\n        if (totalValue === sentFromAddrs) {\n          tx.value = 0;\n        }\n      }\n      processedTxs.push(tx);\n    })\n    const sortedTxs = processedTxs\n                      .sort((a, b) => { return b.timestamp - a.timestamp })\n    this.btcTxs = sortedTxs;\n  }\n}\n\nexport default SDKSession","import omit from \"lodash/omit\";\n\nconst LOGIN_ID_STORAGE_KEY = \"gridplus_web_wallet_id\";\nconst LOGIN_PASSWORD_STORAGE_KEY = \"gridplus_web_wallet_password\";\nconst ROOT_STORE = process.env.REACT_APP_ROOT_STORE || \"gridplus\";\n\n// #region -- Generic Local Storage Functions\n\nconst getItem = (key) => {\n  const value = window.localStorage.getItem(key);\n  try {\n    return JSON.parse(value)\n  } catch (e) {\n    return JSON.parse(JSON.stringify(value))\n  }\n};\nconst setItem = (key, value) =>\n  window.localStorage.setItem(key, JSON.stringify(value));\nconst removeItem = (key) => window.localStorage.removeItem(key);\n\nconst getRootStore = () => getItem(ROOT_STORE) ?? {};\nconst setRootStore = (value) =>\n  window.localStorage.setItem(\n    ROOT_STORE,\n    JSON.stringify({ ...getRootStore(), ...value })\n  );\nconst removeRootStore = () => removeItem(ROOT_STORE);\n\nconst getRootStoreItem = (key) => getItem(ROOT_STORE)?.[key] ?? {};\nconst setRootStoreItem = (key, value) =>\n  window.localStorage.setItem(\n    ROOT_STORE,\n    JSON.stringify({ ...getRootStore(), [`${key}`]: value })\n  );\nconst removeRootStoreItem = (key) =>\n  window.localStorage.setItem(\n    ROOT_STORE,\n    JSON.stringify(omit(getRootStore(), key))\n  );\n\n// #endregion\n\n// #region -- Settings Functions\n\nconst getSettings = () => getRootStoreItem(\"settings\");\nconst setSettings = (value) => setRootStoreItem(\"settings\", value);\n\n// #endregion\n\n// #region -- Keyring Functions\n\nconst getKeyring = () => getRootStoreItem(\"keyring\");\n\nconst getKeyringItem = (key) => getRootStoreItem(\"keyring\")?.[key] ?? {};\nconst setKeyringItem = (key, value) =>\n  setRootStoreItem(\"keyring\", { [`${key}`]: value });\nconst removeKeyringItem = (key) =>\n  setRootStoreItem(\"keyring\", omit(getKeyring(), key));\n\n// #endregion\n\n// #region -- Login Functions\n\nconst getLoginId = () => getItem(LOGIN_ID_STORAGE_KEY);\nconst setLoginId = (value) => setItem(LOGIN_ID_STORAGE_KEY, value);\nconst removeLoginId = () => removeItem(LOGIN_ID_STORAGE_KEY);\n\nconst getLoginPassword = () => getItem(LOGIN_PASSWORD_STORAGE_KEY);\nconst setLoginPassword = (value) => setItem(LOGIN_PASSWORD_STORAGE_KEY, value);\nconst removeLoginPassword = () => removeItem(LOGIN_PASSWORD_STORAGE_KEY);\n\nconst getLogin = () => ({\n  deviceID: getLoginId(),\n  password: getLoginPassword(),\n});\nconst setLogin = ({ deviceID, password }) => {\n  setLoginId(deviceID);\n  setLoginPassword(password);\n};\nconst removeLogin = () => {\n  removeLoginId();\n  removeLoginPassword();\n};\n\n// #endregion\n\nexport default {\n  getItem,\n  setItem,\n  removeItem,\n  getRootStore,\n  setRootStore,\n  removeRootStore,\n  getRootStoreItem,\n  setRootStoreItem,\n  removeRootStoreItem,\n  getSettings,\n  setSettings,\n  getLoginId,\n  setLoginId,\n  removeLoginId,\n  getLoginPassword,\n  setLoginPassword,\n  removeLoginPassword,\n  getKeyring,\n  getKeyringItem,\n  setKeyringItem,\n  removeKeyringItem,\n  getLogin,\n  setLogin,\n  removeLogin,\n};\n","import React from 'react';\nimport 'antd/dist/antd.dark.css'\nimport { Main } from './components'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","import React from 'react';\nimport 'antd/dist/antd.dark.css'\nimport { Col, Row } from 'antd'\nconst SPAN_WIDTH = 14; // Max 24 for 100% width\n\nclass PageContent extends React.Component<any, any> {\n  render () {\n    if (!this.props.content)\n      return; // Content must be passed in\n    // Mobile content should be displayed without any padding\n    if (this.props.isMobile && this.props.isMobile())\n      return this.props.content;\n    // Desktop content has some padding\n    return(\n      <Row justify=\"center\">\n        <Col span={SPAN_WIDTH}>\n          {this.props.content}\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default PageContent;","import React from 'react';\nimport 'antd/dist/antd.dark.css'\nimport { Alert, Button, Card, Col, Input, Row, Modal } from 'antd'\nimport { DesktopOutlined, LinkOutlined } from '@ant-design/icons';\nimport { Settings } from './index'\nimport { constants } from '../util/helpers'\n\nclass Connect extends React.Component<any, any> {\n  constructor(props) {\n    super(props)\n    this.state = {\n      errMsg: null,\n      isLoading: false,\n      modal: false,\n      showSettings: false,\n    }\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderMsg = this.renderMsg.bind(this);\n    this.showModal = this.showModal.bind(this);\n  }\n\n  componentDidMount() {\n    //@ts-expect-error\n    this.input.focus()\n    this.setState({ isLoading: false });    \n  }\n\n  componentDidUpdate() {\n    if (this.props.name !== constants.DEFAULT_APP_NAME && document.title !== 'Lattice Connector') {\n      document.title = 'Lattice Connector'\n    }\n  }\n\n  componentWillUnmount() {\n    this.setState({ isLoading: false })\n  }\n\n  handleSubmit() {\n    const deviceID = (document.getElementById(\"deviceIdInput\") as HTMLInputElement).value;\n    const password = (document.getElementById(\"passwordInput\") as HTMLInputElement).value;\n    if (password.length < 8) {\n      this.setState({ isLoading: true, errMsg: \"Your password must be at least 8 characters.\"})\n    } else {\n      this.setState({ isLoading: true, errMsg: null })\n      // Call the connect function. Skip the loading screen so we don't\n      // leave the landing page until we connect.\n      this.props.submitCb({deviceID, password}, false);\n    }\n  }\n\n  handleCancel() {\n    this.props.cancelConnect();\n    this.setState({ isLoading: false, errMsg: null });\n  }\n\n  renderConnectButton() {\n    if (this.state.isLoading && \n        this.state.errMsg === null &&\n        this.props.errMsg === null) {\n      return (\n        <div>\n          <Button type=\"primary\"\n                  style={{ margin: '20px 0 0 0' }}\n                  loading>\n            Connecting...\n          </Button>\n          <br/>\n          <Button type=\"link\" onClick={this.handleCancel}>\n            Cancel\n          </Button>\n        </div>\n      )\n    } else {\n      return (\n        <Button type=\"primary\" onClick={this.handleSubmit} style={{ margin: '20px 0 0 0'}}>\n          Connect\n        </Button>\n      )\n    }\n  }\n\n  renderForm(getFieldDecorator) {\n    return (\n      <div>\n        <Row justify=\"center\">\n          <Input  placeholder=\"DeviceID\" \n                  id=\"deviceIdInput\" \n                  //@ts-expect-error\n                  ref={i => {this.input = i}}\n                  style={{ margin: '10px 0 0 0', width: \"70%\"}} />\n        </Row>\n        <Row justify=\"center\">\n          <Input.Password placeholder=\"Password (create for new logins)\" \n                          id=\"passwordInput\" \n                          onPressEnter={this.handleSubmit} \n                          style={{ margin: '20px 0 0 0', width: \"70%\"}} />\n        </Row>\n        <Row justify=\"center\">\n          {this.renderConnectButton()}\n        </Row>\n      </div>\n    )\n  }\n\n  showModal() {\n    this.setState({ modal: true });\n  }\n\n  hideModal() {\n    this.setState({ modal: false, showSettings: false });\n  }\n\n  _isMobile() {\n    return this.state.windowWidth < 500;\n  }\n\n  renderSetupInfo() {\n    return (\n      <div>\n        <center>\n          <h3><b>New User Setup</b></h3>\n        </center>\n        <p>\n          You can use this page to establish a connection between <b>{this.props.name}</b>&nbsp; and your Lattice \n          hardware wallet device.&nbsp;\n          <i>For more general device setup information, please see the&nbsp;\n            <a className=\"lattice-a\" href=\"https://gridplus.io/setup\" target={\"_blank\"} rel={\"noopener noreferrer\"}>\n            Lattice setup page\n            </a>.</i>\n        </p>\n        <h3><b>Step 1:</b></h3>\n        <p>\n          Unlock your Lattice and find its <b>Device ID</b> on the main menu. This is a six-character code.\n        </p>\n        <h3><b>Step 2:</b></h3>\n        <p>\n          Once you have your Device ID, specify a <b>password</b>. This does <i>not</i> secure any value and \n          is <i>not</i> associated with your wallet seed - it is only used to send secure requests to your device. \n          If you lose your password, you can remove the permission on your device and re-connect with a new one.\n        </p>\n        <h3><b>Step 3:</b></h3>\n        <p>\n          Please ensure your Lattice is <b>online</b> and click \"Connect\". Your device is online if there is a single\n          wifi signal icon on the top-right of the screen.\n        </p>\n      </div>\n    )\n  }\n\n  renderModal() {\n    if (this.state.showSettings) {\n      return (\n        <Modal\n          title=\"Settings\"\n          footer={null}\n          visible={this.state.modal}\n          onOk={this.hideModal.bind(this)}\n          onCancel={this.hideModal.bind(this)}\n        >\n          <Settings isMobile={() => this._isMobile()} inModal={true} />\n        </Modal>\n      )\n    }\n     return (\n      <div>\n        <Modal\n          title={this.props.name === constants.DEFAULT_APP_NAME ? this.props.name : 'Lattice Connector 🔗'}\n          footer={null}\n          visible={this.state.modal}\n          onOk={this.hideModal.bind(this)}\n          onCancel={this.hideModal.bind(this)}\n        >\n          {this.renderSetupInfo()}\n        </Modal>\n      </div>\n    );\n  }\n\n  renderMsg() {\n    let err;\n    if (this.state.errMsg)\n      err = this.state.errMsg;\n    else if (this.props.errMsg)\n      err = this.props.errMsg;\n    if (err)\n      return (\n        <Alert  message={<p><b>Error:</b><br/>{err}</p>} \n                type={\"error\"} \n                style={{margin: \"20px 0 0 0\"}}\n                closable/>\n      );\n    return;\n  }\n\n  render() {\n    const spanWidth = this.props.isMobile() ? 24 : 10;\n    const spanOffset = this.props.isMobile() ? 0 : 7;\n    const keyringName = this.props.name === constants.DEFAULT_APP_NAME ? null : this.props.name\n    const tooLong = keyringName !== null && keyringName.length < 5;\n    return (\n      <Row>\n        {this.renderModal()}\n        <Col span={spanWidth} offset={spanOffset}>\n          <center>\n            {this.renderMsg()}\n            <Card bordered={true}>\n              <a  className='lattice-a'\n                  href=\"https://gridplus.io/lattice\" \n                  target='_blank' \n                  rel='noopener noreferrer'\n              >\n                {keyringName ? (\n                  <h2 style={{margin: \"10px 0 0 0\"}}>Lattice Connector <LinkOutlined/></h2>\n                ) : (\n                  <h2 style={{margin: \"10px 0 0 0\"}}>Lattice Manager<br/><DesktopOutlined/></h2>\n                )}\n              </a>\n              {keyringName ? (<div><br/><i><h3>Connect to:</h3></i><h2>{keyringName}</h2></div>) : null}\n              {/* @ts-expect-error */}\n              {tooLong ? (<p><b>Error: App name must be more than 4 characters.</b></p>) : this.renderForm()}\n            </Card>\n            <Button type=\"link\" onClick={this.showModal.bind(this)} style={{margin: \"20px 0 0 0\"}}>\n              New User Info\n            </Button>\n            <br/>\n            <Button type=\"link\" onClick={() => {\n              this.setState({ showSettings: true }, this.showModal)\n            }}>\n              Settings\n            </Button>\n            <br/>\n            <Button type=\"link\" href=\"https://gridplus.io/lattice\" target={\"_blank\"} rel={\"noopener noreferrer\"}>\n              About the Lattice\n            </Button>\n          </center>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default Connect\n","import React from 'react';\nimport { Card, Input } from 'antd'\nimport { PageContent } from './index'\nimport 'antd/dist/antd.dark.css'\nconst SUBMIT_LEN = 8; // 8 characters in a code\n\nclass Pair extends React.Component<any, any> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: '',\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ code: '' })\n    //@ts-expect-error\n    this.input.focus()\n  }\n\n  componentWillUnmount() {\n    this.setState({ code: '' })\n  }\n\n  handleUpdate(e) {\n    try {\n      this.setState({ code: e.target.value.toUpperCase() }, () => {\n        if (this.state.code.length >= SUBMIT_LEN) {\n          this.props.submit(this.state.code)\n        }\n      })\n    } catch (err) {\n      ;\n    }\n  }\n\n  getBoxWidth() {\n    const e = document.getElementById('secret-card')\n    if (!e)\n      return\n    return 0.8 * e.clientWidth\n  }\n\n  getBoxFontHeight() {\n    const w = this.getBoxWidth();\n    if (!w)\n      return;\n    return 0.6 * (w / SUBMIT_LEN);\n  }\n\n  render() {\n    const size = this.props.isMobile() ? 'small' : 'large';\n    const width = this.getBoxWidth();\n    const fontSize = this.getBoxFontHeight();\n    const content = (\n      <center>\n        <Card title=\"Enter Secret\" bordered={true} id='secret-card'>\n          <p></p>\n          <p>Please enter the pairing secret displayed on your Lattice screen:</p>\n          <Input\n            className='lattice-pairing-box'\n            size={size}\n            id=\"secret\"\n            //@ts-expect-error\n            ref={i => {this.input = i}}\n            onChange={this.handleUpdate.bind(this)}\n            style={{width, fontSize}}\n            value={this.state.code}\n          />\n        </Card>\n      </center>\n    )\n    return (\n      <PageContent content={content} isMobile={this.props.isMobile}/>\n    )\n  }\n}\n\nexport default Pair","import {\n  CheckCircleOutlined,\n  LinkOutlined,\n  PlusCircleOutlined,\n} from \"@ant-design/icons\";\nimport { Button, Card, Modal, Table, Tag } from \"antd\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { constants } from \"../util/helpers\";\n\nexport function ContractCard({ pack, session }) {\n  const [contract, setContract] = useState({});\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isAdded, setIsAdded] = useState(false);\n  const [isAdding, setIsAdding] = useState(false);\n  const { url } = constants.CONTRACT_NETWORKS[pack.network];\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleAddClick = () => {\n    setIsAdding(true);\n    session.client.timeout = 2 * constants.ASYNC_SDK_TIMEOUT;\n    session.addAbiDefs(contract, (err) => {\n      // Reset timeout to default\n      session.client.timeout = constants.ASYNC_SDK_TIMEOUT;\n      if (err) {\n        setIsAdded(false);\n      } else {\n        setIsAdded(true);\n      }\n      setIsAdding(false);\n    });\n  };\n\n  const loadContractData = useCallback(() => {\n    fetch(`${constants.ABI_PACK_URL}/${pack.fname}`)\n      .then((response) => response.json())\n      .then((resp) => {\n        setContract(resp.defs);\n      });\n  }, [pack]);\n\n  useEffect(() => {\n    loadContractData();\n  }, [pack, loadContractData]);\n\n  const AddDefsButton = isAdded ? (\n    <Button type=\"default\" icon={<CheckCircleOutlined />} disabled={isAdded}>\n      Added\n    </Button>\n  ) : (\n    <Button\n      type=\"primary\"\n      ghost\n      onClick={handleAddClick}\n      icon={<PlusCircleOutlined />}\n      loading={isAdding}\n    >\n      {isAdding ? \"Adding\" : \"Add to Lattice\"}\n    </Button>\n  );\n\n  return (\n    <Card\n      bordered={true}\n      title={pack.name}\n      style={{\n        flex: \"1 1 30%\",\n        maxWidth: \"33%\",\n      }}\n      key={`card-${pack.name}`}\n      extra={AddDefsButton}\n      actions={[\n        <Button type=\"default\" onClick={showModal}>\n          View Contents\n        </Button>,\n        <Button\n          type=\"text\"\n          href={pack.website}\n          target=\"_blank\"\n          icon={<LinkOutlined />}\n        >\n          Website\n        </Button>,\n      ]}\n      bodyStyle={{ height: \"7em\" }}\n    >\n      <p className=\"lattice-h3\">{pack.desc}</p>\n\n      <Modal\n        title={pack.name}\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        width={1000}\n      >\n        <Table dataSource={pack.addresses}>\n          <Table.Column\n            title=\"Address\"\n            dataIndex=\"address\"\n            key=\"address\"\n            render={(address) => (\n              <Tag color=\"blue\" key={`tag-${address}`}>\n                <a\n                  className=\"lattice-a\"\n                  href={`${url}/address/${address}`}\n                  target={\"_blank\"}\n                  rel={\"noopener noreferrer\"}\n                  key={`a-${address}`}\n                >\n                  {`${address.slice(0, 10)}...${address.slice(\n                    address.length - 8,\n                    address.length\n                  )}`}\n                </a>\n              </Tag>\n            )}\n          />\n          <Table.Column title=\"Tag\" dataIndex=\"tag\" key=\"tag\" />\n        </Table>\n      </Modal>\n    </Card>\n  );\n}\n","import { Select } from \"antd\";\nimport React from \"react\";\nimport { constants } from \"../util/helpers\";\nconst { Option } = Select;\n\nexport const SelectNetwork = ({ setNetwork }) => {\n  return (\n    <Select\n      style={{ minWidth: \"150px\", marginRight: \"10px\" }}\n      showSearch\n      defaultValue={constants.DEFAULT_CONTRACT_NETWORK}\n      optionFilterProp=\"children\"\n      onChange={setNetwork}\n      filterOption={(input, option) =>\n        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {Object.entries(constants.CONTRACT_NETWORKS).map(([key, value]) => (\n        <Option key={key} value={key}>\n          {value.label}\n        </Option>\n      ))}\n    </Select>\n  );\n};\n","import { Input, Pagination, Space } from \"antd\";\nimport fuzzysort from \"fuzzysort\";\nimport chunk from \"lodash/chunk\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { constants } from \"../util/helpers\";\nimport { ContractCard } from \"./ContractCard\";\nimport { SelectNetwork } from \"./SelectNetwork\";\nconst pageSize = constants.CONTRACT_PAGE_SIZE;\n\nexport function ContractCardList({ session }) {\n  const [packs, setPacks] = useState([]);\n  const [filteredPacks, setFilteredPacks] = useState([]);\n  const [paginatedPacks, setPaginatedPacks] = useState([]);\n  const [page, setPage] = useState(1);\n  const [network, setNetwork] = useState(constants.DEFAULT_CONTRACT_NETWORK);\n\n  const filterPacksByNetwork = useCallback(\n    (packs) => packs.filter((pack) => pack?.network === network),\n    [network]\n  );\n\n  const loadPackIndex = useCallback(() => {\n    fetch(`${constants.ABI_PACK_URL}/`)\n      .then((response) => response.json())\n      .then((resp) => {\n        setPacks(resp);\n      });\n  }, []);\n\n  useEffect(() => {\n    loadPackIndex();\n  }, [loadPackIndex]);\n\n  useEffect(() => {\n    setPage(1);\n  }, [filteredPacks]);\n\n  useEffect(() => {\n    setFilteredPacks(filterPacksByNetwork(packs));\n  }, [packs, network, filterPacksByNetwork]);\n\n  useEffect(() => {\n    const pageZeroIndexed = page - 1;\n    const chunkedList = chunk(filteredPacks, pageSize)[pageZeroIndexed] ?? [];\n    setPaginatedPacks(chunkedList);\n  }, [page, filteredPacks]);\n\n  const fuzzyFilterPacksByName = (value) =>\n    fuzzysort\n      .go(value, packs, {\n        key: \"name\",\n      })\n      .map((x) => x.obj);\n\n  const onChange = ({ target: { value } }) => {\n    setPage(1);\n    const fuzzyFilteredPacks = value ? fuzzyFilterPacksByName(value) : packs;\n    setFilteredPacks(filterPacksByNetwork(fuzzyFilteredPacks));\n  };\n\n  return (\n    <div>\n      <p>\n        Once loaded, please click View Contents to see the specific contracts\n        being loaded.\n      </p>\n      <p>\n        Don't see what you're looking for?{\" \"}\n        <a href=\"https://github.com/GridPlus/abi-pack-framework\">\n          Submit a pull request.\n        </a>\n      </p>\n      <Space\n        direction=\"vertical\"\n        style={{\n          width: \"100%\",\n        }}\n      >\n        <Input.Group compact>\n          <SelectNetwork setNetwork={setNetwork} />\n          <Input\n            placeholder=\"Filter\"\n            onChange={onChange}\n            style={{ maxWidth: \"50%\" }}\n          />\n          <Pagination\n            style={{ marginLeft: \"10px\" }}\n            current={page}\n            defaultCurrent={1}\n            pageSize={pageSize}\n            defaultPageSize={pageSize}\n            onChange={setPage}\n            total={filteredPacks?.length}\n          />\n        </Input.Group>\n\n        <div\n          style={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            gap: \"10px\",\n            width: \"100%\",\n          }}\n        >\n          {paginatedPacks.map((pack) => (\n            <ContractCard pack={pack} session={session} key={pack.name} />\n          ))}\n        </div>\n      </Space>\n    </div>\n  );\n}\n","import { DownloadOutlined } from \"@ant-design/icons\";\nimport { Button, Card, Input, Result } from \"antd\";\nimport throttle from \"lodash/throttle\";\nimport React, { useMemo, useState } from \"react\";\nimport { constants } from \"../util/helpers\";\nimport { SelectNetwork } from \"./SelectNetwork\";\nconst defaultNetwork =\n  constants.CONTRACT_NETWORKS[constants.DEFAULT_CONTRACT_NETWORK];\n\nexport const SearchCard = ({ session }) => {\n  const [loading, setLoading] = useState(false);\n  const [installing, setInstalling] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [contract, setContract] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [defs, setDefs] = useState([]);\n  const [network, setNetwork] = useState(constants.DEFAULT_CONTRACT_NETWORK);\n\n  const resetData = () => {\n    setLoading(false);\n    setSuccess(false);\n    setInstalling(false);\n    setContract(\"\");\n    setDefs([]);\n  };\n\n  const getNetwork = () =>\n    constants.CONTRACT_NETWORKS[network] ?? defaultNetwork;\n\n  function fetchContractData(input) {\n    if (\n      input.slice(0, 2) !== \"0x\" ||\n      false === /^[0-9a-fA-F]+$/.test(input.slice(2)) ||\n      input.length !== 42\n    ) {\n      // Not a valid address\n      setError(\"Invalid Ethereum contract address\");\n      resetData();\n    } else {\n      const { label, baseUrl, apiRoute } = getNetwork();\n      fetch(`${baseUrl}/${apiRoute}${input}`)\n        .then((response) => response.json())\n        .then((resp) => {\n          // Map confusing error strings to better descriptions\n          if (resp.result === \"Contract source code not verified\") {\n            resp.result = `Contract source code not published to ${label} or not verified. Cannot determine data.`;\n          }\n          if (resp.status === \"0\") {\n            setError(resp.result);\n            resetData();\n          } else {\n            try {\n              const result = JSON.parse(resp.result);\n              const defs = session.client.parseAbi(\"etherscan\", result, true);\n              setDefs(defs);\n              setContract(input);\n              setError(\"\");\n              setSuccess(false);\n              setLoading(false);\n            } catch (err) {\n              setError(err.toString());\n              resetData();\n            }\n          }\n        })\n        .catch((err) => {\n          setError(err.toString());\n          resetData();\n        });\n    }\n  }\n\n  const throttledFetch = useMemo(\n    () => throttle(fetchContractData, 5100),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [network]\n  );\n\n  function addDefs() {\n    setInstalling(true);\n    setError(\"\");\n    // Longer timeout for loading these since requests may get dropped\n    session.client.timeout = 2 * constants.ASYNC_SDK_TIMEOUT;\n    session.addAbiDefs(defs, (err) => {\n      // Reset timeout to default\n      session.client.timeout = constants.ASYNC_SDK_TIMEOUT;\n      if (err) {\n        setError(err.toString());\n        resetData();\n      } else {\n        setSuccess(true);\n        setError(\"\");\n        setInstalling(false);\n      }\n    });\n  }\n\n  const SuccessAlert = () => (\n    <Result\n      status=\"success\"\n      title=\"Success\"\n      subTitle=\"Successfully sent data to your Lattice. You must confirm all\n  functions on your Lattice for them to be saved.\n  Please confirm or reject the definitions before continuing.\"\n    />\n  );\n\n  const ErrorAlert = () => <Result status=\"error\" subTitle={error} />;\n\n  const NetworkLinkList = () => {\n    const networks = Object.entries(constants.CONTRACT_NETWORKS).map(\n      ([, value]) => value\n    );\n    const last = networks.pop();\n    const NetworkLink = ({ network }) => (\n      <a\n        className=\"lattice-a\"\n        href={network.url}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {network.label}\n      </a>\n    );\n    return (\n      <>\n        {networks.map((network) => (\n          <span key={network.label}>\n            <NetworkLink network={network} />\n            {\", \"}\n          </span>\n        ))}\n        or <NetworkLink network={last} />\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <p>\n        You can install contract data from any supported contract which has been\n        verified by&nbsp;\n        <NetworkLinkList />.\n      </p>\n      <p>Search for a verified smart contract:</p>\n      <Input.Group>\n        <SelectNetwork setNetwork={setNetwork} />\n        <Input.Search\n          style={{ maxWidth: \"80%\" }}\n          placeholder=\"Contract address\"\n          allowClear\n          enterButton\n          loading={loading}\n          onSearch={(val) => {\n            setLoading(true);\n            throttledFetch(val);\n          }}\n        />\n      </Input.Group>\n\n      {contract && !success && !error && (\n        <Card\n          title={contract}\n          style={{ marginTop: \"20px\" }}\n          actions={[\n            <Button\n              type=\"primary\"\n              onClick={addDefs}\n              loading={installing}\n              icon={<DownloadOutlined />}\n            >\n              {installing ? \"Installing...\" : \"Install\"}\n            </Button>,\n          ]}\n        >\n          <p>\n            Found <b>{defs.length}</b> functions to add from this contract.\n          </p>\n        </Card>\n      )}\n      {success && <SuccessAlert />}\n      {error && <ErrorAlert />}\n    </div>\n  );\n};\n","import { QuestionCircleOutlined } from \"@ant-design/icons\";\nimport { Alert, Button, Card, Input, Result, Tabs } from \"antd\";\nimport \"antd/dist/antd.dark.css\";\nimport React from \"react\";\nimport { constants } from \"../util/helpers\";\nimport { ContractCardList } from \"./ContractCardList\";\nimport { PageContent } from \"./index\";\nimport { SearchCard } from \"./SearchCard\";\nimport \"./styles.css\";\n\nconst defaultState = {\n  contract: null,\n  defs: [],\n  success: false,\n  loading: false,\n  customDefs: [],\n  customDefsStr: \"\",\n};\nconst TAB_KEYS = {\n  PACK: \"1\",\n  SINGLE_ADDR: \"2\",\n  CUSTOM: \"3\",\n};\nconst manualPlaceholder =\n  '[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_components\",\"type\":\"address[]\"},{\"internalType\":\"int256[]\",\"name\":\"_units\",\"type\":\"int256[]\"},{\"internalType\":\"address[]\",\"name\":\"_modules\",\"type\":\"address[]\"},{\"internalType\":\"contract IController\",\"name\":\"_controller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},';\n\nclass EthContracts extends React.Component<any, any> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: null,\n      contract: null,\n      defs: [],\n      success: false,\n      loading: false,\n      //@ts-expect-error\n      tab: TAB_KEYS.PATH,\n      selectedPackKey: \"AAVE\",\n    };\n\n    this.addDefs = this.addDefs.bind(this);\n    this.onSmartContractAddress = this.onSmartContractAddress.bind(this);\n    this.renderSuccessAlert = this.renderSuccessAlert.bind(this);\n    this.renderPackCard = this.renderPackCard.bind(this);\n    this.renderCustomCard = this.renderCustomCard.bind(this);\n    this.renderSearchCard = this.renderSearchCard.bind(this);\n  }\n\n  onTabChange(key) {\n    this.setState({ tab: key, success: false, error: null, loading: false });\n  }\n\n  onSmartContractAddress(input) {\n    if (\n      input.slice(0, 2) !== \"0x\" ||\n      false === /^[0-9a-fA-F]+$/.test(input.slice(2)) ||\n      input.length !== 42\n    ) {\n      // Not a valid address\n      this.setState({\n        error: \"Invalid Ethereum contract address\",\n        ...defaultState,\n      });\n    } else {\n      this.setState({ loading: true });\n      setTimeout(() => {\n        fetch(`${constants.GET_ABI_URL}${input}`)\n          .then((response) => response.json())\n          .then((resp) => {\n            // Map confusing error strings to better descriptions\n            if (resp.err === \"Contract source code not verified\") {\n              resp.err =\n                \"Contract source code not published to Etherscan or not verified. Cannot determine data.\";\n            }\n            if (resp.err) {\n              this.setState({ error: resp.err.toString(), ...defaultState });\n            } else {\n              try {\n                const result = JSON.parse(resp.result);\n                const defs = this.TMP_REMOVE_ZERO_LEN_PARAMS(\n                  this.props.session.client.parseAbi(\"etherscan\", result, true)\n                );\n                this.setState({\n                  defs,\n                  contract: input,\n                  error: null,\n                  success: false,\n                  loading: false,\n                });\n              } catch (err) {\n                this.setState({ error: err.toString(), ...defaultState });\n              }\n            }\n          })\n          .catch((err) => {\n            this.setState({ error: err.toString(), ...defaultState });\n          });\n      }, 5000); // 1 request per 5 seconds with no API key provided\n    }\n  }\n\n  addDefs(skipErrors = false, defsToAdd = null) {\n    this.setState({ loading: true, error: null });\n    // Longer timeout for loading these since requests may get dropped\n    this.props.session.client.timeout = 2 * constants.ASYNC_SDK_TIMEOUT;\n    const defs = this.state.customDefs\n      ? this.state.customDefs\n      : this.state.defs;\n    this.props.session.addAbiDefs(defs, (err) => {\n      // Reset timeout to default\n      this.props.session.client.timeout = constants.ASYNC_SDK_TIMEOUT;\n      if (err) {\n        this.setState({\n          error: err.toString(),\n          loading: false,\n          success: false,\n        });\n      } else {\n        this.setState({ error: null, loading: false, success: true });\n      }\n    });\n  }\n\n  renderBanner() {\n    if (this.state.error) {\n      return (\n        <Alert\n          message=\"Error\"\n          description={this.state.error}\n          type=\"error\"\n          closable\n          onClose={() => {\n            this.setState({ error: null, ...defaultState });\n          }}\n        />\n      );\n    }\n  }\n\n  renderSuccessAlert(buttonTxt = null) {\n    return (\n      <Result\n        status=\"success\"\n        title=\"Success\"\n        subTitle=\"Successfully sent data to your Lattice. You must confirm all\n                  functions on your Lattice for them to be saved.\n                  Please confirm or reject the definitions before continuing.\"\n        extra={\n          buttonTxt !== null\n            ? [\n                <Button\n                  type=\"primary\"\n                  key=\"buttonTxt\"\n                  onClick={() => {\n                    this.setState({ loading: false, success: false });\n                  }}\n                >\n                  {buttonTxt}\n                </Button>,\n              ]\n            : null\n        }\n      />\n    );\n  }\n\n  renderTabs() {\n    const isLoadingDefs = this.state.success || this.state.loading;\n    if (isLoadingDefs) return;\n    return (\n      <Tabs activeKey={this.state.tab} onChange={this.onTabChange.bind(this)}>\n        <Tabs.TabPane tab=\"Packs\" key={TAB_KEYS.PACK} />\n        <Tabs.TabPane tab=\"Address\" key={TAB_KEYS.SINGLE_ADDR} />\n        <Tabs.TabPane tab=\"Manual\" key={TAB_KEYS.CUSTOM} />\n      </Tabs>\n    );\n  }\n\n  renderSearchCard() {\n    return <SearchCard session={this.props.session} />;\n  }\n\n  // TEMPORARY FUNCTION TO REMOVE FUNCTIONS WITH ZERO LENGTH PARAM NAMES\n  // SEE: https://github.com/GridPlus/gridplus-sdk/issues/154\n  TMP_REMOVE_ZERO_LEN_PARAMS(defs) {\n    const newDefs: any[] = [];\n    defs.forEach((def) => {\n      let shouldAdd = true;\n      if (def.name.length === 0) {\n        shouldAdd = false;\n      } else {\n        def.params.forEach((param) => {\n          if (param.name.length === 0) shouldAdd = false;\n        });\n      }\n      if (shouldAdd === true) newDefs.push(def);\n    });\n    return newDefs;\n  }\n\n  renderCustomCard() {\n    return (\n      <div>\n        <p>\n          Here you can add ABI definitions manually. Please stick with Etherscan\n          formatting (i.e. the contents of \"Contract ABI\" in the Contract tab\n          -&nbsp;\n          <a\n            className=\"lattice-a\"\n            href=\"https://etherscan.io/address/0x1494ca1f11d487c2bbe4543e90080aeba4ba3c2b#code\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            example\n          </a>\n          ).\n        </p>\n        <Input.TextArea\n          placeholder={`${manualPlaceholder}...`}\n          autoSize={{ minRows: 5, maxRows: 10 }}\n          value={this.state.customDefsStr}\n          onChange={(x) => {\n            const customDefsStr = x.target.value;\n            try {\n              const parsed = JSON.parse(customDefsStr);\n              const customDefs = this.TMP_REMOVE_ZERO_LEN_PARAMS(\n                this.props.session.client.parseAbi(\"etherscan\", parsed, true)\n              );\n              if (customDefs.length > 0)\n                this.setState({ customDefs, success: false, customDefsStr });\n            } catch (err) {\n              console.warn(`Failed to scan for ABI definitions ${err.message}`);\n              this.setState({ customDefs: [], success: false, customDefsStr });\n            }\n          }}\n        />\n        <br />\n        <br />\n        {this.state.customDefs && this.state.customDefs.length > 0 ? (\n          <div>\n            {this.state.success ? (\n              <div>\n                <center>\n                  {this.renderSuccessAlert()}\n                  <Button\n                    type=\"primary\"\n                    onClick={() => {\n                      this.setState({\n                        customDefs: [],\n                        customDefsStr: \"\",\n                        success: false,\n                        loading: false,\n                      });\n                    }}\n                  >\n                    Add More\n                  </Button>\n                </center>\n              </div>\n            ) : (\n              <div>\n                <p>\n                  Found <b>{this.state.customDefs.length}</b> functions that can\n                  be added.\n                  <br />\n                  <i>\n                    Note: functions with unsupported types are not included.\n                  </i>\n                </p>\n                <Button\n                  type=\"primary\"\n                  onClick={() => {\n                    this.addDefs(true);\n                  }}\n                  loading={this.state.loading}\n                >\n                  {this.state.loading ? \"Installing...\" : \"Install\"}\n                </Button>\n                {this.state.success ? (\n                  <div>\n                    <br />\n                    {this.renderSuccessAlert()}\n                  </div>\n                ) : null}\n              </div>\n            )}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n\n  renderPackCard() {\n    return <ContractCardList session={this.props.session} />;\n  }\n\n  renderCard() {\n    let f;\n    switch (this.state.tab) {\n      case TAB_KEYS.CUSTOM:\n        f = this.renderCustomCard;\n        break;\n      case TAB_KEYS.SINGLE_ADDR:\n        f = this.renderSearchCard;\n        break;\n      case TAB_KEYS.PACK:\n      default:\n        f = this.renderPackCard;\n        break;\n    }\n    return (\n      <div>\n        {this.renderTabs()}\n        {f()}\n      </div>\n    );\n  }\n\n  render() {\n    const content = (\n      <div>\n        {this.renderBanner()}\n        <Card\n          title={\n            <div>\n              <h3>\n                Load Contract Data&nbsp;&nbsp;\n                <a\n                  className=\"lattice-a\"\n                  href={constants.CONTRACTS_HELP_LINK}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <QuestionCircleOutlined />\n                </a>\n              </h3>\n            </div>\n          }\n          bordered={true}\n        >\n          {this.renderCard()}\n        </Card>\n      </div>\n    );\n    return <PageContent content={content} isMobile={this.props.isMobile} />;\n  }\n}\n\nexport default EthContracts;\n","// NOTE: This feature has been shelved for now. The problem is this:\n// 1. We deprecated the ETH wallet and are in the process of deprecating the BTC wallet too\n// 2. Only the paired requester can setup a permission and the web wallet (rebanded manager)\n//    is itself a paired requester.\n// Ideally we could have a true manager that can create a permission on behalf of a paired\n// requester, otherwise the requester needs to have an interface to setup the permission.\n// If we are to use this app as the \"manager\", we cannot manage permissions on it.\n// FOR NOW, I AM HIDING THIS FEATURE IN main.js\n\nimport React from 'react';\nimport 'antd/dist/antd.dark.css'\nimport { Alert, Button, Card, Col, Dropdown, Input, Menu, Row, Select, Spin } from 'antd'\nimport { LoadingOutlined, QuestionCircleOutlined } from '@ant-design/icons';\nimport { constants, } from '../util/helpers';\nimport { PageContent } from './index'\nimport './styles.css'\nconst BN = require('bignumber.js');\nconst HOURS = 3600;\nconst DAYS = 86400;\nconst assets = {\n  ETH: {\n    name: 'ETH',\n    decimals: 18,\n  },\n  BTC: {\n    name: 'BTC',\n    decimals: 8,\n  }\n}\n\nclass Permissions extends React.Component<any, any> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: null,\n      success: false,\n      loading: false,\n      asset: assets.ETH,\n      timeMultiplier: HOURS, // conversion of window to seconds\n      value: 0,\n      window: 0,\n    }\n\n    this.submit = this.submit.bind(this);\n    this.updateAsset = this.updateAsset.bind(this);\n    this.updateTimeMultiplier = this.updateTimeMultiplier.bind(this);\n    this.updateValue = this.updateValue.bind(this);\n    this.updateWindow = this.updateWindow.bind(this);\n  }\n\n  updateAsset(x) {\n    this.setState({ asset: assets[x.key]})\n  }\n\n  updateTimeMultiplier(x) {\n    this.setState({ timeMultiplier: x })\n  }\n\n  updateWindow(evt) {\n    const x = evt.target.value\n    if (!isNaN(parseFloat(x))) {\n      let s = parseFloat(x);\n      if (x[x.length-1] === '.')\n      //@ts-expect-error\n        s += '.';\n      this.setState({ window: s })\n    }\n    else if (x === '')\n      this.setState({ window: '0' })\n  }\n\n  updateValue(evt) {\n    let x = evt.target.value\n    if (!isNaN(parseFloat(x))) {\n      if (x.length > 1 && x[0] === '0' && x[1] !== '.')\n        x = x.slice(1);\n      this.setState({ value: x })\n    }\n    else if (x === '')\n      this.setState({ value: '0' })\n  }\n\n  submit() {\n    this.setState({ loading: true, error: null, success: false })\n    const req = {\n      currency: this.state.asset.name,\n      decimals: this.state.asset.decimals,\n      timeWindow: Math.floor(parseFloat(this.state.window) * this.state.timeMultiplier),\n      limit: 0,\n      asset: null,\n    };\n    const value = new BN(this.state.value);\n    const decimals = new BN(this.state.asset.decimals);\n    const power = new BN('10').pow(decimals);\n    let limitStr = value.multipliedBy(power).toString(16)\n    if (limitStr.length % 2 > 0)\n      limitStr = `0${limitStr}`;\n    //@ts-expect-error\n    req.limit = `0x${limitStr}`;\n    this.props.session.addPermissionV0(req, (err) => {\n      if (err) {\n        this.setState({ error: err.toString(), success: false, loading: false })\n      } else {\n        this.setState({ error: null, success: true, loading: false })\n      }\n    })\n  }\n\n  renderBanner() {\n    if (this.state.error) {\n      return (\n        <Alert\n          message=\"Error\"\n          description={this.state.error}\n          type=\"error\"\n          closable\n          onClose={() => { this.setState({ error: null })}}\n        />\n      )\n    } else if (this.state.loading) {\n      return (\n        <div>\n          <Spin indicator={(<LoadingOutlined/>)}/>\n          <br/>\n        </div>\n      )\n    } else if (this.state.success) {\n      return (\n        <Alert \n          type=\"success\"\n          message=\"Success\"\n          description=\"Successfully added permission to Lattice.\"\n        />\n      )\n    }\n  }\n\n  renderCard() {\n    const timeMultiplierSelect = (\n      <Select defaultValue={HOURS} onChange={this.updateTimeMultiplier}>\n        <Select.Option value={HOURS}>hours</Select.Option>\n        <Select.Option value={DAYS}>days</Select.Option>\n      </Select>\n    )\n\n    const currencyMenu = (\n      <Menu onClick={this.updateAsset}>\n        {Object.keys(assets).map((key) => {\n          return (\n            <Menu.Item key={key}>{key}</Menu.Item>\n          )\n        })}\n      </Menu>\n    );\n\n    return (\n      <div>\n        <p>\n          You can set spending limits for ETH and BTC. If you make a request from this web wallet that is under your\n          spending limit, your Lattice will auto-sign the transaction. Note that this currently only works for simple \n          ETH and BTC transfers.&nbsp;\n           <a className='lattice-a'\n              href={constants.PERMISSIONS_HELP_LINK}\n              target='_blank'\n              rel='noopener noreferrer'\n          >\n            (More info)\n          </a>        \n        </p>\n        <br/>\n        <i>This is a feature prototype. In the future, GridPlus intends to expand this functionality\n        to other assets and more general contract interactions.</i>\n        <br/><br/>\n        <p><b>Currency:</b></p>\n        <Row>\n          <Col span={12} offset={6}>\n            <Dropdown overlay={currencyMenu}>\n              <Button>{this.state.asset.name}</Button>\n            </Dropdown>\n          </Col>\n        </Row>\n        <br/>\n        <p><b>Spending Limit:</b></p>\n        <Row>\n          <Col span={12} offset={6}>\n            <Input type=\"text\"\n                  id=\"permission-value\" \n                  value={this.state.value} \n                  onChange={this.updateValue.bind(this)}\n            />\n          </Col>\n        </Row>\n        <br/>\n        <p><b>Reset Every:</b></p>\n         <Row>\n          <Col span={12} offset={6}>\n            <Input type=\"text\"\n                  id=\"permission-window\"\n                  addonAfter={timeMultiplierSelect}\n                  value={this.state.window} \n                  onChange={this.updateWindow.bind(this)}\n            />\n          </Col>\n        </Row>\n        <br/>\n        <Button type=\"primary\" onClick={this.submit}>\n          Set Limit\n        </Button>\n      </div>\n    )\n  }\n\n  render() {\n    const content = (\n      <center>\n        {this.renderBanner()}\n        <Card title={<div>\n          <h3>Spending Limits (Beta)&nbsp;\n            <a  className='lattice-a'\n                href={constants.PERMISSIONS_HELP_LINK}\n                target='_blank'\n                rel='noopener noreferrer'\n            >\n              <QuestionCircleOutlined/>\n            </a>\n          </h3>\n        </div>} bordered={true}>\n          {this.renderCard()}\n        </Card>\n      </center>      \n    )\n    return (\n      <PageContent content={content} isMobile={this.props.isMobile}/>\n    )\n  }\n}\n\nexport default Permissions","import React from 'react';\nimport 'antd/dist/antd.dark.css'\nimport { Button, Card, Checkbox, Col, Collapse, Input, Radio, Row, Space, Table } from 'antd'\nimport { WarningOutlined } from '@ant-design/icons';\nimport { PageContent } from './index'\nimport './styles.css'\nimport omit from \"lodash/omit\"\nimport { constants, getBtcPurpose } from '../util/helpers';\nimport localStorage from '../util/localStorage';\n\nclass Settings extends React.Component<any, any> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      settings: localStorage.getSettings(),\n      keyring: localStorage.getKeyring(),\n    }\n    this.getBtcPurposeName = this.getBtcPurposeName.bind(this)\n  }\n\n\n  submit() {\n    // Save the settings to localStorage\n    localStorage.setSettings(this.state.settings)\n    // Reload the page for the changes to take effect\n    window.location.reload();\n  }\n\n  updateUseCustomEndpoint(value) {\n    const settings = this.state.settings;\n    if (value !== true) {\n      // Reset the custom endpoint if this value is false\n      settings.customEndpoint = '';\n    }\n    this.setState({ settings });\n  }\n\n  updateCustomEndpoint(evt) {\n    const settings = this.state.settings;\n    settings.customEndpoint = evt.target.value;\n    this.setState({ settings });\n  }\n\n  updateUseDevLattice(evt) {\n    const settings = this.state.settings;\n    settings.devLattice = evt.target.checked\n    this.setState({ settings }, this.submit)\n  }\n\n  removeKeyring ({ name }) {\n    localStorage.removeKeyringItem(name)\n    this.setState({ keyring: omit(this.state.keyring, name) })\n  }\n\n  resetState() {\n    localStorage.removeRootStore()\n    window.location.reload();\n  }\n\n  renderCustomEndpointSetting() {\n    const { customEndpoint='' } = this.state.settings;\n    return (\n      <Card>\n        <Row justify='center'>\n          <Col span={20}>\n            <h3>Connection Endpoint:</h3>\n            <p>\n              If you wish to route messages and connections through your own endpoint, you may specify it here.&nbsp;\n              Otherwise leave blank.&nbsp; See&nbsp;\n              <a  href=\"https://github.com/GridPlus/lattice-connect\"\n                  className='lattice-a'\n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\">\n                this\n              </a> for more information.\n            </p>\n            <div>\n              <Input  placeholder=\"host:port\" \n                      defaultValue={customEndpoint} \n                      onChange={this.updateCustomEndpoint.bind(this)}/>\n            </div>\n          </Col>\n        </Row>\n      </Card>\n    )\n  }\n\n  handleChangeBitcoinVersionSetting(evt) {\n    const settings = this.state.settings;\n    settings.btcPurpose = parseInt(evt.target.value);\n    this.setState({ settings }, this.submit)\n  }\n\n  getBtcPurposeName() {\n    const purpose = this.state.settings.btcPurpose ?\n                    this.state.settings.btcPurpose :\n                    getBtcPurpose();\n    if (purpose === constants.BTC_PURPOSE_NONE) {\n      return constants.BTC_PURPOSE_NONE_STR;\n    } else if (purpose === constants.BTC_PURPOSE_LEGACY) {\n      return constants.BTC_PURPOSE_LEGACY_STR\n    } else if (purpose === constants.BTC_PURPOSE_WRAPPED_SEGWIT) {\n      return constants.BTC_PURPOSE_WRAPPED_SEGWIT_STR\n    } else if (purpose === constants.BTC_PURPOSE_SEGWIT) {\n      return constants.BTC_PURPOSE_SEGWIT_STR;\n    } else {\n      return 'Error finding BTC version'\n    }\n  }\n\n  renderBitcoinVersionSetting() {\n    // NOTE: Firmware does not yet support segwit addresses\n    // TODO: Uncomment this when firmware is updated\n    const purpose = getBtcPurpose() || constants.BTC_PURPOSE_NONE;\n    return (\n      <Card>\n        <h4>Bitcoin Wallet Type</h4>\n        <Radio.Group  onChange={this.handleChangeBitcoinVersionSetting.bind(this)}\n                      defaultValue={purpose}>\n          <Space direction=\"vertical\">\n            <Radio value={constants.BTC_PURPOSE_NONE}>\n              Hide BTC Wallet\n            </Radio>\n            {/* <Radio value={constants.BTC_PURPOSE_SEGWIT}>\n              {constants.BTC_PURPOSE_SEGWIT_STR}\n            </Radio> */}\n            <Radio value={constants.BTC_PURPOSE_WRAPPED_SEGWIT}>\n              {constants.BTC_PURPOSE_WRAPPED_SEGWIT_STR}\n            </Radio>\n            {/* Don't uncomment this until segwit support is released\n            <Radio value={constants.BTC_PURPOSE_LEGACY}>\n              {constants.BTC_PURPOSE_LEGACY_STR}\n            </Radio> */}\n          </Space>\n        </Radio.Group>\n      </Card>\n    )\n  }\n\n  renderDevLatticeSetting() {\n    const { devLattice } = this.state.settings;\n    return (\n      <Card>\n        <h4>Debug Settings</h4>\n        <Row justify='center' style={{ margin: '10px 0 0 0'}}>\n          <Button type=\"link\" onClick={this.resetState} className='warning-a'>\n          <WarningOutlined/>&nbsp;Reset App State\n        </Button>\n        </Row>\n        <Row justify='center' style={{ margin: '20px 0 0 0'}}>\n          <Checkbox onChange={this.updateUseDevLattice.bind(this)} checked={devLattice}>\n            Using Dev Lattice\n          </Checkbox>\n        </Row>\n      </Card>\n    )\n  }\n\n  renderKeyringsSetting() {\n    const keyring = localStorage.getKeyring()\n    const cols = [\n      { \n        title: 'App Name', \n        dataIndex: 'name', \n        key: 'name'\n      }, \n      { \n        title: 'Action', \n        dataIndex: 'action', \n        key: 'action',\n        render: (text, record) => (\n          <Button type=\"link\" onClick={() => {this.removeKeyring(record)}}>Forget</Button>\n        ) \n      }\n    ]\n    const data: any[] = [];\n    Object.keys(keyring)\n      .sort((a, b) => { return a.toLowerCase() > b.toLowerCase() ? 1 : -1 })\n      .forEach((name) => { data.push({ name }) })\n    return (\n      <Card>\n        <Row justify='center'>\n          <Col span={20}>\n            <h3>Third Party Connections</h3>\n            <p>\n              Manage connections to your Lattice. Third party apps should be listed here if they are connected to your device.\n            </p>\n            <Collapse>\n              {/* @ts-expect-error */}\n              <Collapse.Panel header={`Connections List (${data.length})`}>\n                <Table dataSource={data} columns={cols}/>\n              </Collapse.Panel>\n            </Collapse>\n          </Col>\n        </Row>\n      </Card>\n    )\n  }\n\n  renderCard() {\n    return (\n      <div>\n        {this.renderKeyringsSetting()}\n        {this.renderCustomEndpointSetting()}\n        {this.renderBitcoinVersionSetting()}\n        {this.renderDevLatticeSetting()}\n        <br/>\n        <Button type=\"primary\" onClick={this.submit.bind(this)}>\n          Update and Reload\n        </Button>\n      </div>\n    )\n  }\n\n  render() {\n    const content = (\n      <center>\n        <Card title={'Settings'} bordered={true}>\n          {this.renderCard()}\n        </Card>\n      </center>      \n    )\n    if (this.props.inModal)\n      return (<center>{this.renderCard()}</center>);\n    return (\n      <PageContent content={content} isMobile={this.props.isMobile}/>\n    )\n  }\n}\n\nexport default Settings","const Buffer = require('buffer/').Buffer\nconst { validateBtcAddr } = require('./helpers');\n\nexport const allChecks = {\n  'ETH': {\n    full: checkEth,\n    recipient: checkEthRecipient,\n    value: checkNumericValue,\n  },\n  'BTC': {\n    full: checkBtc,\n    recipient: validateBtcAddr,\n    value: checkNumericValue,\n  }\n}\n\n// Checks for Ethereum transfers (ETH or token)\nfunction checkEth(data) {\n  return fullCheck(data, checkEthRecipient);\n}\n\n// Checks for Bitcoin transfers\nfunction checkBtc(data) {\n  return fullCheck(data, validateBtcAddr);\n}\n\n// Perform a check on the recipient and value\n// @returns bool -- true if params are both valid\nfunction fullCheck(data, recipientCheck) {\n  return true === recipientCheck(data.recipient) && true === checkNumericValue(data.value);\n} \n\nfunction checkEthRecipient(recipient) {\n  if (recipient === '') return null;\n  try {\n    // Make sure there is a 0x prefix\n    const isPrefixed = recipient.slice(0, 2) === '0x';\n    // Check that the address contains exactly 20 hex bytes.\n    // If any of the data is non-hex, the length will be shorter\n    const correctLength = Buffer.from(recipient.slice(2), 'hex').length === 20;\n    return isPrefixed === true && correctLength === true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction checkNumericValue(value) {\n  if (value === '') return false;\n  try {\n    const num = Number(value);\n    return !isNaN(num) && num >= 0;\n  } catch (e) {\n    return false;\n  }\n}\n","import { MinusSquareFilled, PlusOutlined } from \"@ant-design/icons\";\nimport { Alert, Button, Form, Input, Modal, Space } from \"antd\";\nimport _ from \"lodash\";\nimport React, { useState } from \"react\";\n\nconst ADDRESS_RECORD_TYPE = 0;\nconst keyIsDuplicatedErrorMessage =\n  \"You already have a tag with this address on your device.\";\nconst valIsDuplicatedErrorMessage =\n  \"You already have a tag with this name on your device.\";\nconst validAddressRegex = /^0x[a-fA-F0-9]{40}$/;\n\n/** @typedef {{ key: string, val: string }} Record */\n\n/**\n * @name AddAddressesButton\n * @param {Object} props\n * @param {Record[]} props.records\n * @param {Object} props.session\n * @param {(records: Record[]) => void} props.addToRecordsInState\n */\nexport const AddAddressesButton = ({\n  records,\n  session,\n  addToRecordsInState,\n}) => {\n  const [form] = Form.useForm();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const resetState = () => {\n    form.resetFields();\n    setIsModalVisible(false);\n    setError(null);\n    setIsLoading(false);\n  };\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const hideModal = () => {\n    resetState();\n  };\n\n  const handleCancel = () => {\n    hideModal();\n  };\n\n  const onFinish = () => {\n    form.validateFields().then(({ recordsToAdd }) => {\n      setIsLoading(true);\n      // Transform recordsToAdd data into { key: val } for SDK\n      const records = _.chain(recordsToAdd)\n        .keyBy(\"key\")\n        .mapValues(\"val\")\n        .value();\n      const opts = {\n        caseSensitive: false,\n        type: ADDRESS_RECORD_TYPE,\n        records,\n      };\n      session.client.addKvRecords(opts, (err) => {\n        setIsLoading(false);\n        if (err) return setError(err);\n        addToRecordsInState(recordsToAdd);\n        resetState();\n      });\n    });\n  };\n\n  const onFinishFailed = () => {\n    setError(\"Unable to submit. Fix errors in form and try again.\");\n  };\n\n  const onFieldsChange = () => {\n    setError(null);\n  };\n\n  return (\n    <>\n      <Button type=\"ghost\" onClick={showModal} icon={<PlusOutlined />}>\n        Add\n      </Button>\n      <Modal\n        title=\"Add Address Tags\"\n        visible={isModalVisible}\n        maskClosable={false}\n        onOk={form.submit}\n        onCancel={handleCancel}\n        footer={[\n          <Button type=\"link\" onClick={handleCancel} key=\"cancel\">\n            Cancel\n          </Button>,\n          <Button\n            type=\"primary\"\n            loading={isLoading}\n            onClick={form.submit}\n            key=\"add\"\n          >\n            Add\n          </Button>,\n        ]}\n      >\n        <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n          {error ? (\n            <Alert description={error} type=\"error\" style={{ width: \"100%\" }} />\n          ) : null}\n          <Form\n            form={form}\n            name=\"formData\"\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            onFieldsChange={onFieldsChange}\n            autoComplete=\"off\"\n            preserve={false}\n            layout=\"vertical\"\n          >\n            <Form.List\n              name=\"recordsToAdd\"\n              initialValue={[{ key: null, val: null }]}\n            >\n              {(fields, { add, remove }) => (\n                <>\n                  {fields.map(({ key, name, ...restField }) => (\n                    <div\n                      key={`${name}-inputs`}\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        marginBottom: \"1em\",\n                        width: \"100%\",\n                      }}\n                    >\n                      <div\n                        style={{\n                          display: \"flex\",\n                          flexDirection: \"column\",\n                          flexGrow: 1,\n                        }}\n                      >\n                        <Form.Item\n                          {...restField}\n                          name={[name, \"key\"]}\n                          validateTrigger={[\"onChange\", \"onBlur\"]}\n                          rules={[\n                            { required: true, message: \"Address is required.\" },\n                            {\n                              pattern: validAddressRegex,\n                              message: \"Must be a valid address.\",\n                              validateTrigger: \"onBlur\",\n                            },\n                            {\n                              validator: (rule, key) => {\n                                return records.some((r) => r.key === key)\n                                  ? Promise.reject(\n                                      new Error(keyIsDuplicatedErrorMessage)\n                                    )\n                                  : Promise.resolve();\n                              },\n                              validateTrigger: [\"onChange\", \"onBlur\"],\n                            },\n                          ]}\n                        >\n                          <Input\n                            addonBefore={\"Address\"}\n                            data-testid={`${name}-address-input`}\n                          />\n                        </Form.Item>\n                        <Form.Item\n                          {...restField}\n                          name={[name, \"val\"]}\n                          validateTrigger={[\"onChange\", \"onBlur\"]}\n                          rules={[\n                            { required: true, message: \"Name is required\" },\n                            {\n                              validator: (rule, val) => {\n                                return records.some((r) => r.val === val)\n                                  ? Promise.reject(\n                                      new Error(valIsDuplicatedErrorMessage)\n                                    )\n                                  : Promise.resolve();\n                              },\n                              validateTrigger: [\"onChange\", \"onBlur\"],\n                            },\n                          ]}\n                        >\n                          <Input\n                            addonBefore={\"Name\"}\n                            data-testid={`${name}-name-input`}\n                          />\n                        </Form.Item>\n                      </div>\n                      {name > 0 ? (\n                        <Button\n                          type=\"text\"\n                          icon={<MinusSquareFilled />}\n                          disabled={isLoading}\n                          style={{\n                            height: \"auto\",\n                            marginLeft: \"1em\",\n                            marginBottom: \"1.2em\",\n                          }}\n                          onClick={() => remove(name)}\n                        />\n                      ) : null}\n                    </div>\n                  ))}\n                  <Form.Item>\n                    <Button\n                      type=\"dashed\"\n                      block\n                      icon={<PlusOutlined />}\n                      disabled={isLoading}\n                      onClick={add}\n                    >\n                      Add Another Address Tag\n                    </Button>\n                  </Form.Item>\n                </>\n              )}\n            </Form.List>\n          </Form>\n        </Space>\n      </Modal>\n    </>\n  );\n};\n","import { LoadingOutlined, SyncOutlined } from \"@ant-design/icons\";\nimport {\n  Alert,\n  Button,\n  Card,\n  Checkbox,\n  Col,\n  Input,\n  Row,\n  Spin,\n  Table,\n} from \"antd\";\nimport \"antd/dist/antd.dark.css\";\nimport differenceBy from \"lodash/differenceBy\";\nimport unionBy from \"lodash/unionBy\";\nimport React from \"react\";\nimport { allChecks } from \"../util/sendChecks\";\nimport { AddAddressesButton } from \"./AddAddressesButton\";\nimport { PageContent } from \"./index\";\n\nconst RECORDS_PER_PAGE = 10;\nconst MAX_RECORD_LEN = 63; // 63 characters max for both key and vlaue\n\nclass KVFiles extends React.Component<any, any> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      page: 0,\n      totalRecords: 0,\n      records: [],\n      error: null,\n      retryFunc: null,\n      loading: false,\n      isAdding: false,\n      recordToAdd: {\n        key: null,\n        val: null,\n      },\n    };\n\n    this.updateAddKey = this.updateAddKey.bind(this);\n    this.updateAddVal = this.updateAddVal.bind(this);\n    this.addToRecordsInState = this.addToRecordsInState.bind(this);\n    this.fetchRecords = this.fetchRecords.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchRecords();\n  }\n\n  updateAddKey(evt) {\n    const recordToAdd = JSON.parse(JSON.stringify(this.state.recordToAdd));\n    recordToAdd.key = evt.target.value;\n    this.setState({ recordToAdd });\n  }\n\n  updateAddVal(evt) {\n    const recordToAdd = JSON.parse(JSON.stringify(this.state.recordToAdd));\n    recordToAdd.val = evt.target.value;\n    this.setState({ recordToAdd });\n  }\n\n  recordIsChecked(id) {\n    let isChecked = false;\n    this.state.records.forEach((_record) => {\n      if (_record.id === id) {\n        isChecked = _record.isChecked === true;\n      }\n    });\n    return isChecked;\n  }\n\n  changeRecordChecked(id) {\n    const records = JSON.parse(JSON.stringify(this.state.records));\n    if (!records) return;\n    for (let i = 0; i < records.length; i++) {\n      if (records[i].id === id) {\n        records[i].isChecked = records[i].isChecked === true ? false : true;\n        this.setState({ records });\n        return;\n      }\n    }\n  }\n\n  getNumSelected() {\n    let selected = 0;\n    this.state.records.forEach((record) => {\n      if (record.isChecked) selected += 1;\n    });\n    return selected;\n  }\n\n  addToRecordsInState(recordsToAdd) {\n    // Combines passed in array of records and records in state by comparing ids\n    this.setState({ records: unionBy(this.state.records, recordsToAdd, \"id\") });\n  }\n\n  removeFromRecordsInState(recordsToRemove) {\n    // Removes passed in array of records from records in state by comparing ids\n    this.setState({\n      records: differenceBy(this.state.records, recordsToRemove, \"id\"),\n    });\n  }\n\n  fetchRecords(page = 0, retries = 1) {\n    const opts = {\n      start: page * RECORDS_PER_PAGE,\n      n: RECORDS_PER_PAGE,\n    };\n    // Sanity check to make sure we didn't overrun the current page\n    if (opts.start > this.state.records.length) {\n      return this.setState({ error: \"Mismatch fetching records.\" });\n    }\n    this.setState({ loading: true });\n    this.props.session.client.getKvRecords(opts, (err, res) => {\n      if (err) {\n        if (retries === 0) {\n          return this.setState({\n            error: err,\n            retryFunc: this.fetchRecords,\n            loading: false,\n          });\n        } else {\n          return this.fetchRecords(page, retries - 1);\n        }\n      } else if (res) {\n        this.addToRecordsInState(res.records);\n        const recordsToFetch = res.total - this.state.records.length;\n        if (recordsToFetch > 0) {\n          return this.fetchRecords(page + 1);\n        } else {\n          return this.setState({ loading: false, error: null });\n        }\n      }\n      return this.setState({ loading: false, error: \"Failed to fetch tags\" });\n    });\n  }\n\n  removeSelected() {\n    const recordsToRemove = this.state.records.filter((r) => r.isChecked);\n    const ids = recordsToRemove.map((r) => r.id);\n    if (ids.length === 0) return;\n    this.setState({ loading: true });\n    this.props.session.client.removeKvRecords({ ids }, (err) => {\n      if (err) return this.setState({ error: err, loading: false });\n      this.removeFromRecordsInState(recordsToRemove);\n      this.setState({ error: null, loading: false });\n    });\n  }\n\n  renderError() {\n    if (this.state.error) {\n      return (\n        <div>\n          <Alert\n            message=\"Error\"\n            description={this.state.error}\n            action={\n              this.state.retryFunc ? (\n                <Button\n                  //@ts-expect-error\n                  type=\"danger\"\n                  onClick={() => {\n                    this.state.retryFunc();\n                    this.setState({ retryFunc: null, err: null });\n                  }}\n                >\n                  Retry\n                </Button>\n              ) : null\n            }\n            type=\"error\"\n            closable\n            onClose={() => {\n              this.setState({ error: null });\n            }}\n          />\n        </div>\n      );\n    }\n  }\n\n  renderLoading() {\n    if (this.state.loading) {\n      return (\n        <center>\n          <Spin tip=\"Loading...\" indicator={<LoadingOutlined />} />\n        </center>\n      );\n    }\n  }\n\n  shouldDisplaySend() {\n    const key = this.state.recordToAdd.key;\n    const val = this.state.recordToAdd.val;\n    if (!key || !val) return false;\n    const isValidAddress =\n      allChecks.ETH.recipient(key) || allChecks.BTC.recipient(key);\n    const isValidLen =\n      key.length < MAX_RECORD_LEN && val.length < MAX_RECORD_LEN;\n    return isValidAddress && isValidLen;\n  }\n\n  renderAddCard() {\n    const extraLink = (\n      <Button\n        type=\"ghost\"\n        onClick={() => {\n          this.setState({ isAdding: false });\n        }}\n      >\n        View Addresses\n      </Button>\n    );\n    return (\n      <Card title={\"Save Address Tag\"} extra={extraLink} bordered={true}>\n        {this.state.loading ? (\n          this.renderLoading()\n        ) : (\n          <center>\n            <Row>\n              <Col span={18} offset={3}>\n                <Input placeholder={\"Address\"} onChange={this.updateAddKey} />\n              </Col>\n            </Row>\n            <br />\n            <Row>\n              <Col span={18} offset={3}>\n                <Input\n                  placeholder={\"Display Name\"}\n                  onChange={this.updateAddVal}\n                />\n              </Col>\n            </Row>\n            <br />\n            {this.shouldDisplaySend() ? (\n              //@ts-expect-error\n              <Button type=\"primary\" onClick={this.addRecord}>\n                Save\n              </Button>\n            ) : (\n              <Button type=\"primary\" disabled>\n                Save\n              </Button>\n            )}\n          </center>\n        )}\n      </Card>\n    );\n  }\n\n  renderDisplayCard() {\n    const displayPage = this.state.page + 1;\n    const extra = [\n      <Button\n        type=\"link\"\n        icon={<SyncOutlined />}\n        disabled={this.state.loading}\n        onClick={() => {\n          this.fetchRecords();\n        }}\n      >\n        Sync\n      </Button>,\n      <AddAddressesButton\n        records={this.state.records}\n        session={this.props.session}\n        addToRecordsInState={this.addToRecordsInState}\n      />,\n    ];\n    return (\n      <Card title={\"Saved Addresses\"} extra={extra} bordered={true}>\n        {this.state.loading ? (\n          this.renderLoading()\n        ) : (\n          <div>\n            <Table\n              dataSource={this.state.records}\n              tableLayout=\"fixed\"\n              pagination={{\n                position: [\"bottomCenter\"],\n                pageSize: RECORDS_PER_PAGE,\n                defaultCurrent: displayPage,\n                showSizeChanger: false,\n              }}\n            >\n              <Table.Column\n                title=\"Name\"\n                dataIndex=\"val\"\n                key=\"val\"\n                defaultSortOrder=\"ascend\"\n                sorter={(a: any, b: any) => a.val.localeCompare(b.val)}\n                render={(val) => (\n                  <div>\n                    <b>{val}</b>\n                  </div>\n                )}\n              />\n              <Table.Column\n                title=\"Address\"\n                dataIndex=\"key\"\n                key=\"key\"\n                render={(key) => (\n                  <a\n                    className=\"lattice-a\"\n                    href={`https://etherscan.io/address/${key}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {`${key.slice(0, 10)}...${key.slice(\n                      key.length - 8,\n                      key.length\n                    )}`}\n                  </a>\n                )}\n              />\n              <Table.Column\n                title=\"\"\n                dataIndex=\"id\"\n                key=\"id\"\n                width={50}\n                render={(id) => (\n                  <Checkbox\n                    checked={this.recordIsChecked(id)}\n                    onChange={() => {\n                      this.changeRecordChecked(id);\n                    }}\n                    key={id}\n                  />\n                )}\n              />\n            </Table>\n            <Row justify=\"center\">\n              {this.getNumSelected() > 0 ? (\n                <Button\n                  //@ts-expect-error\n                  type=\"danger\"\n                  onClick={this.removeSelected.bind(this)}\n                  style={{ margin: \"5px 0 0 0\" }}\n                >\n                  Remove Selected\n                </Button>\n              ) : null}\n            </Row>\n          </div>\n        )}\n      </Card>\n    );\n  }\n\n  renderCard() {\n    if (this.state.isAdding) {\n      return this.renderAddCard();\n    } else {\n      return this.renderDisplayCard();\n    }\n  }\n\n  render() {\n    const content = (\n      <div>\n        {this.renderError()}\n        {this.renderCard()}\n      </div>\n    );\n    return <PageContent content={content} isMobile={this.props.isMobile} />;\n  }\n}\n\nexport default KVFiles;\n","import React from 'react';\nimport 'antd/dist/antd.dark.css'\nimport { AuditOutlined, DesktopOutlined, TagsOutlined } from '@ant-design/icons';\nimport { PageContent } from './index'\nimport { constants } from '../util/helpers';\nimport { Card, Col, Divider, Row } from 'antd'\n\nclass Landing extends React.Component<any, any> {\n  renderCard() {\n    return (\n      <Card bordered={true} style={{textAlign: \"center\"}}>\n        <Row justify='center'>\n          <Col span={20}>\n            <p className='lattice-h1'><DesktopOutlined/>&nbsp;Lattice Manager</p>\n            <p className='lattice-h4'>\n              Manage secure data on your Lattice hardware wallet device for a better web3 experience:\n            </p>\n            <br/>\n          </Col>\n        </Row>\n        <Row justify='center'>\n          <Col span={20}>\n            <p>\n              <a  href={constants.TAGS_HELP_LINK}\n                  className='lattice-a'\n                  target='_blank'\n                  rel='noopener noreferrer'\n              >\n                <TagsOutlined/>&nbsp;\n                <b>Address Tags</b>&nbsp;\n              </a>\n              <br/>\n              <i>Give names to your favorite contracts or recipient addresses.</i>\n            </p>\n            <br/>\n          </Col>\n        </Row>\n        <Row justify='center'>\n          <Col span={20}>\n            <p>\n              <a  href={constants.CONTRACTS_HELP_LINK}\n                  className='lattice-a'\n                  target='_blank'\n                  rel='noopener noreferrer'\n              >\n                <AuditOutlined/>&nbsp;\n                <b>Contracts</b>&nbsp;\n              </a>\n              <br/>\n              <i>Add your favorite smart contracts for better transaction request readability.</i>\n            </p>\n          </Col>\n        </Row>\n        <Divider/>\n        <img\n          src=\"lattice-landing.jpg\"\n          style={{ maxHeight: \"500px\", maxWidth: \"100%\" }}\n          alt=\"lattice-one-device\"\n        />\n      </Card>\n    )\n  }\n\n\n  render() {\n    return (\n      <PageContent content={this.renderCard()} isMobile={this.props.isMobile}/>\n    )\n  }\n}\n\nexport default Landing","import React from 'react';\nimport 'antd/dist/antd.dark.css'\nimport { Button, Card, Spin } from 'antd'\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { PageContent } from './index'\n\nclass Loading extends React.Component<any, any> {\n  render() {\n    const content = (\n      <center>\n        <Card title=\"Loading\" bordered={true}>\n          {this.props.spin !== false ? (\n            <Spin indicator={<LoadingOutlined/>} />\n          ) : null}\n          <p>{this.props.msg ? this.props.msg : \"Waiting for data from your Lattice\"}</p>\n          {this.props.onCancel ? (\n            <Button type='link' onClick={this.props.onCancel}>\n              Cancel\n            </Button>\n          ) : null}\n        </Card>\n      </center>\n    )\n    return (\n      <PageContent content={content} isMobile={this.props.isMobile}/>\n    )\n  }\n}\n\nexport default Loading","import React from 'react';\nimport 'antd/dist/antd.dark.css'\nimport { Card, Button } from 'antd'\n\nclass Error extends React.Component<any, any> {\n  constructor(props) {\n    super(props);\n    this.keyPressListener = this.keyPressListener.bind(this);\n    this.submit = this.submit.bind(this)\n   }\n\n  componentDidMount() {\n    window.addEventListener('keypress', this.keyPressListener)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keypress', this.keyPressListener)\n  }\n\n  keyPressListener(e) {\n    if (e.key === 'Enter')\n      this.submit()\n  }\n\n  submit() {\n    this.props.retryCb()\n  }\n\n  render() {\n    return (\n      <center>\n        <Card title=\"Error\" bordered={true}>\n          <p>{this.props.msg}</p>\n          {this.props.retryCb ? (\n            <Button id=\"submitButton\"\n              //@ts-expect-error\n              onClick={this.submit} type=\"danger\">\n              {this.props.btnMsg || \"Retry\"}\n            </Button>\n          ): null}\n        </Card>\n      </center>\n    )\n  }\n}\n\nexport default Error","\nimport React from 'react';\nimport 'antd/dist/antd.dark.css'\nimport { Button, Avatar, Divider, Statistic, List, Row, Card, Tag} from 'antd';\nimport { \n  CaretLeftOutlined, CaretRightOutlined, ClockCircleOutlined, \n  ArrowDownOutlined, ArrowUpOutlined, ReloadOutlined\n} from '@ant-design/icons';\nimport { PageContent } from '../index'\nimport { constants } from '../../util/helpers'\n\nclass Wallet extends React.Component<any, any> {\n  componentDidMount() {\n    if (this.props.session) {\n      this.props.session.getBtcWalletData()\n    }\n  }\n\n  getInnerWidth() {\n    return document.getElementById('main-content-inner')?.offsetWidth;\n  }\n\n  // Make sure text doesn't overflow on smaller screens. We need to trim larger strings\n  ensureTrimmedText(text) {\n    if (!this.props.isMobile()) return text;\n    const maxChars = this.getInnerWidth() / 22;\n    if (text.length > maxChars) return `${text.slice(0, maxChars)}...`\n    return text;\n  }\n\n  // Render a transaction in a list\n  renderListItem(item) {\n    // Label to view transaction on explorer\n    const label = (\n      //@ts-expect-error\n      <div align={this.props.isMobile() ? \"left\" : \"right\"}>\n        {item.confirmed ? (\n          <p>\n            {item.incoming ? 'Received ' : 'Sent '}\n            {getDateDiffStr(item.timestamp)} ago\n          </p>) : null}\n        <Button size=\"small\" \n                href={`${constants.BTC_TX_BASE_URL}/${item.id}`} \n                target=\"_blank\"\n          >View</Button>\n      </div>\n    );\n    if (item.value === 0) {\n      // This is an internal transaction, meaning all spenders and recipients\n      // are addresses we control\n      return (\n        <List.Item key={item.hash}>\n          <List.Item.Meta avatar={<Avatar src={'/BTC.png'}/>}\n                          title='Internal Transaction'\n                          description='This transaction sender and recipient are your addresses.'\n          />\n          {label}\n        </List.Item>\n      )\n    }\n    // Information about the transaction\n    const title = `${item.value / Math.pow(10, 8)} BTC`\n    const subtitle = `\\t${this.ensureTrimmedText(item.recipient)}`;\n    const itemMeta = (\n      <List.Item.Meta avatar={<Avatar src={'/BTC.png'}/>}\n                      title={item.confirmed ? (\n                        <p>{`${title}`}</p>\n                      ) : (\n                        <p><i>{`${title}`}</i></p>\n                      )}\n                      description={item.confirmed ? (\n                        <p>\n                          {item.incoming ? (\n                            <ArrowDownOutlined/>\n                          ) : (\n                            <ArrowUpOutlined/>\n                          )}\n                          {`${subtitle}`}\n                        </p>\n                      ) : (\n                        <p>\n                          {item.incoming ? (\n                            <ArrowDownOutlined/>\n                          ) : (\n                            <ArrowUpOutlined/>\n                          )}\n                          <i>{`${subtitle}`}</i>\n                        </p>\n                      )}\n      />\n    )\n    if (this.props.isMobile()) {\n      return (\n        <List.Item key={item.hash}>\n          <Row justify='center'>{itemMeta}</Row>\n          <Row justify='center'>{label}</Row>\n        </List.Item>\n      )    \n    } else {\n      return(\n        <List.Item key={item.hash}>\n          {itemMeta}\n          {label}\n        </List.Item>\n      )\n    }\n  }\n\n  renderLastUpdatedTag() {\n    if (!this.props.session)\n      return;\n    const lastUpdated = this.props.session.lastFetchedBtcData;\n    if (!lastUpdated) {\n      return (\n        <Tag color={'red'}>Never</Tag>\n      )\n    }\n    //@ts-expect-error\n    const elapsedSec = Math.floor((new Date() - lastUpdated) / 1000);\n    let elapsed, timeType, color;\n    if (elapsedSec < 60) {\n      // Just display that it was updated \"seconds\" ago if we're under a minute\n      elapsed = '';\n      timeType = 'seconds';\n      color = 'green';\n    } else if (elapsedSec < 3600) {\n      // A couple minutes is fine, but more than 10 and there's probably a connectivity\n      // problem -- display orange warning tag\n      elapsed = Math.floor(elapsedSec / 60);\n      timeType = elapsed === 1 ? 'min' : 'mins';\n      color = 'green'\n    } else if (elapsedSec < 172800) {\n      // Less than a 2 days we display hours \n      elapsed = Math.floor(elapsedSec / 3600);\n      timeType = elapsed === 1 ? 'hour' : 'hours';\n      color = 'orange';\n    } else { \n      // Otherwise display days\n      elapsed = Math.floor(elapsedSec / 86400);\n      timeType = 'days';\n      color = 'red';\n    }\n    return (\n      <Tag color={color}>{`${elapsed} ${timeType} ago`}</Tag>\n    )\n  }\n\n  renderList() {\n    const txs = {\n      confirmed: this.props.session.getBtcTxs(),\n      pending: this.props.session.getBtcTxs(false),\n    }\n    return (\n      <div>\n        {txs.pending.length > 0 ? (\n          <Card title={<p><ClockCircleOutlined/> Pending</p>} \n                bordered={true}\n                style={{ margin: '0 0 30px 0'}}>\n            <List\n              itemLayout=\"horizontal\"\n              dataSource={txs.pending}\n              renderItem={item => (\n                this.renderListItem(item)\n              )}\n            />\n          </Card>\n        ): null}\n        <Card title=\"Transactions\" bordered={true}>\n          <List\n            itemLayout=\"horizontal\"\n            dataSource={txs.confirmed}\n            renderItem={item => (\n              this.renderListItem(item)\n            )}\n          />\n        </Card>\n      </div>\n    )\n  }\n\n  renderHeader() {\n    const btcBalance = this.props.session.getBtcBalance() / constants.SATS_TO_BTC;\n    const btcPrice = this.props.session.btcPrice;\n    return (\n      <div>\n        <Row justify='center' style={{margin: \"20px 0 0 0\"}}>\n            <Statistic title=\"Balance\" value={`${btcBalance} BTC`} />\n        </Row>\n        <Row justify='center'>\n          <Statistic title=\"USD Value\" value={btcBalance * btcPrice} precision={2} />\n        </Row>\n      </div>\n    )\n  }\n\n  renderPages() {\n    const page = this.props.session.getPage();\n    const txs = this.props.session.getBtcTxs();\n    return (\n      <center style={{margin: \"20px 0 0 0\"}}>\n        {page > 1 ? (\n          <Button onClick={() => {this.props.pageTurnCb(page-1)}}>\n            <CaretLeftOutlined/>\n          </Button>\n        ) : null}\n        {txs.length >= constants.PAGE_SIZE ? (\n          <Button onClick={() => { this.props.pageTurnCb(page+1)}}>\n            <CaretRightOutlined/>\n          </Button>\n        ): null}\n      </center>\n    )\n  }\n\n  renderStartCard() {\n    return (\n      <Card title={`BTC Wallet`} bordered={true}>\n        <center>\n          <p>You have not loaded any addresses yet.</p>\n          <Button size=\"large\" \n                  type=\"primary\" \n                  ghost \n                  onClick={() => {this.props.refreshData()}}\n          >\n            Start\n          </Button>\n        </center>\n      </Card>\n    )\n  }\n\n  renderContent() {\n    const lastUpdated = this.props.session.lastFetchedBtcData;\n    if (!lastUpdated) {\n      return this.renderStartCard();\n    }\n    return (\n      <div>\n        <Card title={`BTC Wallet`} bordered={true}>\n          <Row justify='center'>\n            Last Update&nbsp;{this.renderLastUpdatedTag()}\n            <Button size=\"small\" \n                    type=\"primary\" \n                    ghost \n                    onClick={() => {this.props.refreshData()}}\n            >\n              Refresh <ReloadOutlined/>\n            </Button>\n          </Row>\n          <Row justify='center' style={{margin: \"20px 0 0 0\"}}>\n            {this.renderHeader()}\n          </Row>\n        </Card>\n        <Divider/>\n        <div>\n          {this.renderList()}\n          {this.renderPages()}\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const content = (\n      <center>\n        {this.renderContent()}\n      </center>      \n    )\n    return (\n      <PageContent content={content} isMobile={this.props.isMobile}/>\n    )\n  }\n}\n\nexport default Wallet\n\n// Get a human readable, string representation of the difference\n// between two dates\nfunction getDateDiffStr(ts) {\n  const then = new Date(ts);\n  const now = new Date();\n  const min = 1000 * 60;\n  const hour = min * 60;\n  const day = hour * 24;\n  const week = day * 7;\n  const month = week * 4;\n  const year = month * 12;\n\n  //@ts-expect-error\n  const diff = now - then;\n\n  if (diff / min < 1) {\n    return 'seconds';\n  } else if (diff / hour < 1) {\n    return `${Math.floor(diff/min)} minutes`;\n  } else if (diff / day < 1) {\n    return `${Math.floor(diff/hour)} hours`;\n  } else if (diff / week < 1) {\n    return `${Math.floor(diff/day)} days`;\n  } else if (diff / month < 1) {\n    return `${Math.floor(diff/week)} weeks`;\n  } else if (diff / year < 1) {\n    return `${Math.floor(diff/month)} months`;\n  } else {\n    return `${Math.floor(diff/year)} years`\n  }\n\n}","import React from 'react';\nimport 'antd/dist/antd.dark.css'\nimport { Alert, Button, Card, Row, Input, InputNumber, Empty, Statistic, notification } from 'antd'\nimport { CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { PageContent } from '../index'\nimport { allChecks } from '../../util/sendChecks';\nimport { constants, buildBtcTxReq, getBtcNumTxBytes } from '../../util/helpers'\nimport '../styles.css'\nconst RECIPIENT_ID = \"recipient\";\nconst VALUE_ID = \"value\";\n\nclass Send extends React.Component<any, any> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      recipient: '',\n      value: null,\n      recipientCheck: null,\n      valueCheck: null,\n      error: null,\n      isLoading: false,\n      txHash: null,\n      btcFeeRate: constants.BTC_DEFAULT_FEE_RATE,\n      ensResolvedAddress: null,\n    }\n\n    this.handleENSResolution = this.handleENSResolution.bind(this);\n    this.renderBanner = this.renderBanner.bind(this);\n    this.renderSubmitButton = this.renderSubmitButton.bind(this);\n    this.renderValueLabel = this.renderValueLabel.bind(this);\n    this.submit = this.submit.bind(this);\n    this.buildBtcRequest = this.buildBtcRequest.bind(this);\n    this.updateBtcFeeRate = this.updateBtcFeeRate.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://blockstream.info/api/fee-estimates')\n    .then((response) => response.json())\n    .then((resp) => {\n      if (resp['1']) { // Expected confirmation in 1 block\n        this.setState({ btcFeeRate: Math.ceil(Number(resp['1'])) })\n      }\n      if (this.props.session) {\n        this.props.session.getBtcWalletData()\n      }\n    })\n    .catch((err) => {\n      console.error(`Error from fetching fee rates: ${err.toString()}`)\n    })\n  }\n\n  //========================================================\n  // STATE MANAGERS\n  //========================================================\n\n  handleENSResolution(err, address) {\n    if (err || address === null)\n      return this.setState({ recipientCheck: false, ensResolvedAddress: null })\n    // If we got an address, stash that under \"ensResolvedAddress\" so as to not\n    // overwrite the text in the display component.\n    return this.setState({ recipientCheck: true, ensResolvedAddress: address })\n  }\n\n  updateRecipient(evt) {\n    const val = evt.target.value;\n    const check = allChecks.BTC.recipient(val);\n    this.setState({ \n      recipient: val,\n      ensResolvedAddress: null,\n      recipientCheck: check, \n    });\n  }\n\n  checkValue(val) {\n    // Verify that it is smaller than the balance\n    const balance = this.props.session.getBtcBalance() / constants.SATS_TO_BTC;\n    if (val === '' || val === null || val === undefined)\n      return null;\n    return (Number(balance) >= Number(val));\n  }\n\n  updateValue(evt) {\n    let val = evt.target.value;\n    let numberVal = Number(val);\n    const isZeroPrefixed = val[0] === '0';\n    const isLessThanOne = isZeroPrefixed && val[1] === '.';\n    // Only update state if the value can be converted to a number!\n    if (val === '0') {\n      // Plain zero is fine\n      ;\n    } else if (!isNaN(numberVal)) {\n      // We want to save the string, as it may contain a period\n      // which is necessary for forming decimal numbers\n      // Because we will be saving the string and not the number,\n      // we should make sure we strip out leading zeros for numbers\n      // larger than zero (i.e. 0.4 is good, 01.4 is not)\n      if (isZeroPrefixed && !isLessThanOne) val = val.slice(1);\n    } else if (val === '.') {\n      // If the user is trying to make a decimal value <1, prefix\n      // with a 0\n      val = '0' + val;\n    } else {\n      return;\n    }\n    this.setState({ \n      value: val,\n      valueCheck: this.checkValue(val) \n    });\n  }\n\n  updateBtcFeeRate(value) {\n    this.setState({ btcFeeRate: value })\n  }\n\n  //========================================================\n  // TRANSACTION-RELATED BUILDERS AND HOOKS\n  //========================================================\n  buildBtcRequest() {\n    const req = buildBtcTxReq(this.state.recipient, \n                              this.state.value,\n                              this.props.session.btcUtxos, \n                              this.props.session.addresses['BTC'],  \n                              this.props.session.addresses['BTC_CHANGE'],\n                              this.state.btcFeeRate,\n                              this.state.value === this.calculateMaxValue());\n    if (req.error) {\n      this.setState({ error: req.error });\n      return null;\n    } else if (!req.data) {\n      this.setState({ error: 'Invalid response when building BTC transaction request. '});\n      return null;\n    }\n    return req;\n  }\n\n  submit() {\n    const req = this.buildBtcRequest();\n    if (req) {\n      notification.open({\n        message: \"Waiting for signature...\",\n        key: 'signNotification',\n        description: `We have sent the transaction to your Lattice for signing.\n                      After approval, the transaction will be broadcast.`,\n        duration: 0,\n      });\n      this.setState({ isLoading: true });\n      this.props.session.sign(req, (err, txHash) => {\n        notification.close('signNotification');\n        if (err) {\n          // Display an error banner\n          this.setState({ \n            error: err, \n            isLoading: false, \n            txHash: null \n          })\n        } else {\n          // Start watching this new tx hash for confirmation\n          this.setState({ \n            recipient: '',\n            recipientCheck: null,\n            value: null,\n            valueCheck: null,\n            txHash, \n            error: null, \n            isLoading: false \n          })\n        }\n      })\n    }\n  }\n\n  //========================================================\n  // HELPERS\n  //========================================================\n\n  getUrl() {\n    return `${constants.BTC_TX_BASE_URL}/${this.state.txHash}`;\n  }\n\n  //========================================================\n  // RENDERERS\n  //========================================================\n\n  renderValueLabelTitle() {\n    return (\n      <p style={{textAlign: 'left'}}>\n        <b>Value</b>\n        <Button type=\"link\"\n                onClick={() => { \n                  this.updateValue({ \n                    target: { \n                      value: this.calculateMaxValue(),\n                    } \n                  }) \n                }}>\n          Max\n        </Button>\n        {this.renderIcon(VALUE_ID)}\n      </p>\n    )\n  }\n\n  renderValueLabel() {\n    const input = (\n      <Input type=\"text\"\n              id={VALUE_ID} \n              value={this.state.value} \n              onChange={this.updateValue.bind(this)}\n      />\n    );\n    return (\n      <Row justify='center'>\n        {this.renderValueLabelTitle()}\n        {input}\n      </Row>\n    );\n  }\n\n  renderRecipientLabel() {\n    return (          \n      <Row justify='center'>  \n        <p style={{textAlign:'left'}}>\n          <b>Recipient</b>\n          &nbsp;&nbsp;&nbsp;{this.renderIcon(RECIPIENT_ID)}\n        </p>\n        <Input type=\"text\" \n                id={RECIPIENT_ID} \n                value={this.state.recipient} \n                onChange={this.updateRecipient.bind(this)}\n        />\n      </Row>\n    )\n  }\n\n  renderIcon(id) {\n    const name = `${id}Check`;\n    const isValid = this.state[name];\n    if (isValid === true) {\n      return (<CheckCircleOutlined style={{color: 'green'}}/>)\n    } else if (isValid === false) {\n      return (<CloseCircleOutlined style={{color: 'red'}}/>)\n    } else {\n      return;\n    }\n  }\n\n  renderBanner() {\n    if (this.state.error) {\n      return (\n        <Alert\n          message=\"Failed to Send Transaction\"\n          description={this.state.error}\n          type=\"error\"\n          closable\n          onClose={() => { this.setState({ error: null })}}\n        />\n      )\n    } else if (this.state.txHash) {\n      const desc = this.props.isMobile() ? (\n        <p>Transaction signed and broadcast successfully.&nbsp;\n        <a className='lattice-a' target='_blank' rel='noopener noreferrer' href={this.getUrl()}>View</a></p>\n      ) : (\n        <p>Your transaction was signed and broadcast successfully. \n        Your hash is: <a className='lattice-a' target='_blank' rel='noopener noreferrer' href={this.getUrl()}>\n          {this.state.txHash}\n        </a></p>\n      )\n      return (\n        <Alert\n          type=\"success\"\n          message=\"Success\"\n          description={desc}\n        />\n      )\n    } else {\n      return;\n    }\n  }\n\n  renderExtra() {\n    return (\n      <div>\n        <Row justify='center'>\n          <b><p>Fee (sat/byte):</p></b>\n        </Row>\n        <Row justify='center'>        \n          <InputNumber\n            min={1}\n            max={100}\n            onChange={this.updateBtcFeeRate}\n            value={this.state.btcFeeRate}\n          />\n        </Row>\n      </div>\n    )\n  }\n\n  calculateMaxValue() {\n    const balance = this.props.session.getBtcBalance();\n    const utxos = this.props.session.getBtcUtxos();\n    // To spend all BTC, get the size of all UTXOs and calculate the fee required\n    const txBytes = getBtcNumTxBytes(utxos.length);\n    const feeSat = Math.floor(this.state.btcFeeRate * txBytes);\n    // @ts-expect-error\n    return Math.max(((balance - feeSat) / constants.SATS_TO_BTC).toFixed(8), 0);\n  }\n\n  renderSubmitButton() {\n    // If all checks have passed, display the button\n    const isValidReq = (\n      (true === this.state.valueCheck) &&\n      (allChecks.BTC.full(this.state) || this.state.ensResolvedAddress !== null)\n    );\n\n    if (this.state.isLoading) {\n      return (\n        <Button type=\"primary\"\n                style={{ margin: '30px 0 0 0'}}\n                loading>\n          Waiting...\n        </Button>\n      )\n    } else if (isValidReq) {\n      return (\n        <Button type=\"primary\" \n                onClick={this.submit} \n                style={{ margin: '30px 0 0 0'}}>\n          Send\n        </Button>\n      )\n    } else {\n      return (\n        <Button type=\"primary\"\n                style={{ margin: '30px 0 0 0'}}\n                disabled>\n          Send\n        </Button>\n      )\n    }\n  }\n\n  renderBalance() {\n    let balance = this.props.session.getBtcBalance() / constants.SATS_TO_BTC;\n    return (\n      <Row justify='center' style={{margin: \"0 0 20px 0\"}}>\n        <Statistic title=\"Balance\" value={`${balance} BTC`} />\n      </Row>\n    )\n  }\n\n  renderCard() {\n    const hasAddressesSlot = this.props.session.addresses.BTC;\n    const hasAddresses =  hasAddressesSlot ? \n                          this.props.session.addresses.BTC.length > 0 : \n                          false;\n    if (hasAddresses) {\n      return (\n        <div>\n          {this.renderBalance()}\n          <div>\n            {this.renderRecipientLabel()}\n          </div>\n          <div style={{margin: \"20px 0 0 0\"}}>\n            {this.renderValueLabel()}\n          </div>\n          <div style={{margin: \"20px 0 0 0\"}}>\n            {this.renderExtra()}\n          </div>\n          {this.renderSubmitButton()}\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <p>No addresses found from your Lattice. If you have your wallet setup, please try logging out and reconnecting.</p>\n          <Empty image={Empty.PRESENTED_IMAGE_SIMPLE}/>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    const content = (\n      <center>\n        {this.renderBanner()}\n        <Card title={'Send BTC'} bordered={true}>\n          {this.renderCard()}\n        </Card>\n      </center>      \n    )\n    return (\n      <PageContent content={content} isMobile={this.props.isMobile}/>\n    )\n  }\n}\n\nexport default Send\n","import React from 'react';\nimport 'antd/dist/antd.dark.css'\nimport { Button, Card, Row, Input, Empty } from 'antd'\nimport { CopyOutlined } from '@ant-design/icons';\nimport { PageContent } from '../index'\nimport { validateBtcAddr } from '../../util/helpers'\nconst QRCode = require('qrcode.react');\nconst { Search, TextArea } = Input;\nconst SEARCH_ID = \"address-data\";\n\nclass Receive extends React.Component<any, any> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      address: null,\n      windowWidth: document.getElementById('main-content-inner')?.offsetWidth,\n    }\n\n    this.updateWidth = this.updateWidth.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateDisplayAddress();\n    if (this.props.session) {\n      this.props.session.getBtcWalletData()\n    }\n    window.addEventListener('resize', this.updateWidth);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWidth);\n  }\n\n  updateWidth() {\n    this.setState({ windowWidth:  document.getElementById('main-content-inner')?.offsetWidth });\n  }\n\n  updateDisplayAddress() {\n    const displayAddr = this.props.session.getBtcDisplayAddress();\n    if (displayAddr) this.setState({ address:  displayAddr });\n  }\n\n  copyAddress() {\n    const copy = document.getElementById(SEARCH_ID);\n    //@ts-expect-error\n    copy.select();\n    document.execCommand(\"copy\")\n  }\n\n\n  renderAddrBox() {\n    if (this.props.isMobile()) {\n      return (\n        <div>\n          <TextArea id={SEARCH_ID}\n                    value={this.state.address}\n                    autoSize={{minRows: 1, maxRows: 3}}\n                    style={{margin: \"30px 0 0 0\", \"textAlign\": \"center\"}}/>\n          <Button type=\"primary\"\n                  style={{margin: \"20px 0 0 0\"}}\n                  onClick={this.copyAddress}>\n            Copy <CopyOutlined/>\n          </Button>\n        </div>\n      )\n    } else {\n      return (\n         <Search type=\"text\" \n                  id={SEARCH_ID} \n                  value={this.state.address} \n                  enterButton={<CopyOutlined/>}\n                  onSearch={this.copyAddress}\n                  style={{margin: \"30px 0 0 0\", \"textAlign\": \"center\"}}\n          />\n      );\n    }\n  }\n\n  renderCard() {\n    if (this.state.address) {\n      // Sanity check on BTC address checksum\n      if (!validateBtcAddr(this.state.address))\n        return;\n      const cardW = document.getElementById(\"receive-card\")?.offsetWidth;\n      const w = Math.min(300, 0.8 * cardW);\n      return (\n        <div>\n          <Row justify='center'>\n            <QRCode value={this.state.address} \n                    size={w}\n                    style={{margin: \"30px 0 0 0\"}}\n            />\n          </Row>\n          <Row justify='center'>\n            {this.renderAddrBox()}\n          </Row>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <p>No addresses found</p>\n          <Empty image={Empty.PRESENTED_IMAGE_SIMPLE}/>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    const content = (\n      <center>\n        <Card title={'Receive BTC'} bordered={true} id=\"receive-card\">\n          <center>\n            {this.renderCard()}\n          </center>\n        </Card>\n      </center>      \n    )\n    return (\n      <PageContent content={content} isMobile={this.props.isMobile}/>\n    )\n  }\n}\n\nexport default Receive"],"sourceRoot":""}